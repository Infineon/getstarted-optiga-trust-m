   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,4
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "i2c_master.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.I2C_MASTER_lReconfigureRxFIFO,"ax",%progbits
  18              	 .align 1
  19              	 .code 16
  20              	 .thumb_func
  22              	I2C_MASTER_lReconfigureRxFIFO:
  23              	.LFB175:
  24              	 .file 1 "../Dave/Generated/I2C_MASTER/i2c_master.c"
   1:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**
   2:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @file i2c_master.c
   3:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @date 2019-06-24
   4:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
   5:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * NOTE:
   6:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
   8:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**
   9:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @cond
  10:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  11:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * I2C_MASTER v4.1.30 Configures USIC channel to transmit & receive data using I2C protocol.
  12:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  13:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  14:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * All rights reserved.
  15:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  16:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * following conditions are met:
  18:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  19:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   disclaimer.
  21:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  22:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  25:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  28:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  36:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  39:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  40:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Change History
  41:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * --------------
  42:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  43:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2015-02-16:
  44:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - Initial version<br>
  45:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  46:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2015-06-10:
  47:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - AbortTransmit and AbortReceive API return type modified. <br>
  48:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  49:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2015-07-31:
  50:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - DMA support APIs added
  51:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  52:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2017-01-19:
  53:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - Avoid unintended interrupts when filling FIFO
  54:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  55:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2017-11-17:
  56:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - Use tx_irqn of channel config structure in the call of NVIC_ClearPendingIRQ()
  57:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  58:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2017-12-20:
  59:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - Fix TX DMA issues
  60:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  61:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2019-06-24:
  62:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - I2C_MASTER_lStartTransmitPolling() handling of non ack     
  63:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  64:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * 2019-09-23:
  65:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *     - Fixed return status of I2C_MASTER_lStartReceivePolling()
  66:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  67:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @endcond
  68:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
  69:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
  70:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
  71:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * HEADER FILES
  72:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  73:../Dave/Generated/I2C_MASTER/i2c_master.c **** #include "i2c_master.h"
  74:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
  75:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
  76:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * MACROS
  77:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  78:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_TDF_RECEIVE_ACK             (0x0200U)
  79:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_TDF_RECEIVE_NACK       (3U << 8U)
  80:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_DMA_SRC_DST_TR_WIDTH_MASK   (0x7EU)
  81:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_DMA_SRC_ADDR_INC_MASK       (0x600U)
  82:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_DMA_SRC_ADDR_INC_POS        (9U)
  83:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_DMA_SRC_TRANSFER_WIDTH_POS  (4U)
  84:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_MASTER_DMA_DST_TRANSFER_WIDTH_POS  (1U)
  85:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
  86:../Dave/Generated/I2C_MASTER/i2c_master.c **** #define I2C_DMA_MAX_BLOCK_SIZE (4095U)
  87:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
  88:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
  89:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * LOCAL DATA
  90:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  91:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
  92:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
  93:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * LOCAL ROUTINES
  94:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
  95:../Dave/Generated/I2C_MASTER/i2c_master.c ****  /*
  96:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Function monitors the configured protocol interrupt flags. It is called from the protocol interr
  97:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * service handler.
  98:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Function reads the status of the USIC channel and checks for configured flags in the app UI.
  99:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * If any callback function is provided in the app UI, it will be called when the selected flag is 
 100:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 101:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * I2C_MASTER_t * pointer to the I2C_MASTER APP instance handle
 102:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 103:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
 104:../Dave/Generated/I2C_MASTER/i2c_master.c **** void I2C_MASTER_ProtocolHandler(I2C_MASTER_t * const handle);
 105:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 106:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if ((I2C_MASTER_INTERRUPT_TX_ENABLED == 1) || (I2C_MASTER_INTERRUPT_RX_ENABLED == 1))
 107:../Dave/Generated/I2C_MASTER/i2c_master.c **** static uint32_t calculate_minfifosize(uint32_t a, uint32_t b)
 108:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 109:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint32_t result;
 110:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 111:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (a < b)
 112:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 113:../Dave/Generated/I2C_MASTER/i2c_master.c ****     result = a;
 114:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 115:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 116:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 117:../Dave/Generated/I2C_MASTER/i2c_master.c ****     result = b;
 118:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 119:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (result);
 120:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 121:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 122:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 123:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if ((I2C_MASTER_INTERRUPT_TX_ENABLED == 1) || (I2C_MASTER_INTERRUPT_RX_ENABLED == 1) || \
 124:../Dave/Generated/I2C_MASTER/i2c_master.c ****     (I2C_MASTER_DIRECT_TX_ENABLED == 1) || (I2C_MASTER_DIRECT_RX_ENABLED == 1))
 125:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStart_Or_RepeatedStart(I2C_MASTER_t * handle, const uint32_t address,
 126:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                const XMC_I2C_CH_CMD_t cmd);
 127:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 128:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 129:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if ((I2C_MASTER_INTERRUPT_TX_ENABLED == 1) || (I2C_MASTER_INTERRUPT_RX_ENABLED == 1))
 130:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStop_JumpTo_TxCallback(I2C_MASTER_t *const handle);
 131:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 132:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 133:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if(I2C_MASTER_INTERRUPT_TX_ENABLED == 1)
 134:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_AbortTransmitIRQ(const I2C_MASTER_t *const handle);
 135:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 136:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 137:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
 138:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStop_JumpTo_RxCallback(I2C_MASTER_t *const handle);
 139:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReconfigureRxFIFO(const I2C_MASTER_t * const handle, uint32_t data_size);
 140:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 141:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReceive_FIFOData(I2C_MASTER_t * const handle, bool send_start, const uint32
 142:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                          const uint32_t count);
 143:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 144:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReceive_StdData(I2C_MASTER_t * const handle, bool send_start, const uint32_
 145:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lAbortReceiveIRQ(const I2C_MASTER_t *const handle);
 146:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 147:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 148:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 149:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DIRECT_TX_ENABLED == 1)
 150:../Dave/Generated/I2C_MASTER/i2c_master.c **** static I2C_MASTER_STATUS_t I2C_MASTER_lStartTransmitPolling(I2C_MASTER_t *const handle, bool send_s
 151:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                         const uint32_t slave_address, uint8_t *data
 152:../Dave/Generated/I2C_MASTER/i2c_master.c ****                               bool send_stop);
 153:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 154:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if I2C_MASTER_DIRECT_RX_ENABLED
 155:../Dave/Generated/I2C_MASTER/i2c_master.c **** static I2C_MASTER_STATUS_t I2C_MASTER_lStartReceivePolling(I2C_MASTER_t *const handle, bool send_st
 156:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                        uint8_t *data, uint32_t count, bool send_sto
 157:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                bool send_nack);
 158:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 159:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
 160:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lAbortTransmitDMA(const I2C_MASTER_t *const handle);
 161:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 162:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 163:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lAbortReceiveDMA(const I2C_MASTER_t *const handle);
 164:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 165:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 166:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_TX_ENABLED == 1) && (I2C_MASTER_DMA_RX_ENABLED == 1)
 167:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* DMA buffer to send the ACK */
 168:../Dave/Generated/I2C_MASTER/i2c_master.c **** static uint16_t ack_buf[1];
 169:../Dave/Generated/I2C_MASTER/i2c_master.c **** static uint16_t nack_buf[1];
 170:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 171:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 172:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 173:../Dave/Generated/I2C_MASTER/i2c_master.c **** * API IMPLEMENTATION
 174:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 175:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 176:../Dave/Generated/I2C_MASTER/i2c_master.c **** /*
 177:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @brief API to retrieve the version of the I2C_MASTER APP.
 178:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 179:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return DAVE_APP_VERSION_t Structure containing major version, minor version
 180:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *         and patch version.
 181:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
 182:../Dave/Generated/I2C_MASTER/i2c_master.c **** DAVE_APP_VERSION_t I2C_MASTER_GetAppVersion(void)
 183:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 184:../Dave/Generated/I2C_MASTER/i2c_master.c ****   DAVE_APP_VERSION_t version;
 185:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 186:../Dave/Generated/I2C_MASTER/i2c_master.c ****   version.major = I2C_MASTER_MAJOR_VERSION;
 187:../Dave/Generated/I2C_MASTER/i2c_master.c ****   version.minor = I2C_MASTER_MINOR_VERSION;
 188:../Dave/Generated/I2C_MASTER/i2c_master.c ****   version.patch = I2C_MASTER_PATCH_VERSION;
 189:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 190:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (version);
 191:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 192:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 193:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to initialize the USIC Channel with GUI configured values.*/
 194:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_Init(const I2C_MASTER_t *const handle)
 195:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 196:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 197:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 198:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle != NULL)
 199:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 200:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Initialize the multiplexers required for I2C_MASTER configuration*/
 201:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->fptr_i2c_config();
 202:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 203:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_SUCCESS;
 204:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 205:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 206:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 207:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_FAILURE;
 208:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 209:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 210:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 211:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 212:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to get flag status of the requested parameter */
 213:../Dave/Generated/I2C_MASTER/i2c_master.c **** uint32_t I2C_MASTER_GetFlagStatus(const I2C_MASTER_t *handle, uint32_t flagtype)
 214:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 215:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint32_t status;
 216:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 217:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = XMC_I2C_CH_GetStatusFlag(handle->channel);
 218:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 219:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status & flagtype);
 220:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 221:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 222:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to clear flag status of the requested parameter */
 223:../Dave/Generated/I2C_MASTER/i2c_master.c **** void I2C_MASTER_ClearFlag(const I2C_MASTER_t *handle, uint32_t flagtype)
 224:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 225:../Dave/Generated/I2C_MASTER/i2c_master.c ****   XMC_I2C_CH_ClearStatusFlag(handle->channel,flagtype);
 226:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 227:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 228:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to transmit the data to slave device */
 229:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_Transmit(I2C_MASTER_t *handle, bool send_start, const uint32_t addre
 230:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                         uint8_t *data, const uint32_t size, bool send_stop)
 231:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 232:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 233:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 234:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_BUSY;
 235:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 236:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if(handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_INTERRUPT)
 237:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 238:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1)
 239:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_StartTransmitIRQ(handle, send_start, address, data, size, send_stop);
 240:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 241:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 242:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else if(handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA)
 243:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 244:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
 245:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_UNSUPPORTED_MODE;
 246:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 247:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 248:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 249:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 250:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DIRECT_TX_ENABLED == 1)
 251:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_lStartTransmitPolling(handle, send_start, address, data, size, send_stop);
 252:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 253:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 254:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 255:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 256:../Dave/Generated/I2C_MASTER/i2c_master.c **** } /* end of function */
 257:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 258:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if ((I2C_MASTER_INTERRUPT_TX_ENABLED == 1) || (I2C_MASTER_INTERRUPT_RX_ENABLED == 1))
 259:../Dave/Generated/I2C_MASTER/i2c_master.c **** /*
 260:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Transmit interrupt handler for the APP.
 261:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * This is a common interrupt handling function called for different instances of the APP.
 262:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 263:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *  @param  handle I2C_MASTER APP handle pointer of type I2C_MASTER_t*
 264:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 265:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *  @return void
 266:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
 267:../Dave/Generated/I2C_MASTER/i2c_master.c **** void I2C_MASTER_TransmitHandler(I2C_MASTER_t * const handle)
 268:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 269:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 270:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t fifo_min;
 271:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 272:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 273:../Dave/Generated/I2C_MASTER/i2c_master.c ****   fifo_min = 0U;
 274:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 275:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* check if any error flag is set */
 276:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (I2C_MASTER_GetFlagStatus(handle, ((uint32_t)XMC_I2C_CH_STATUS_FLAG_NACK_RECEIVED |
 277:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                         (uint32_t)XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST |
 278:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                         (uint32_t)XMC_I2C_CH_STATUS_FLAG_ERROR |
 279:../Dave/Generated/I2C_MASTER/i2c_master.c ****                     (uint32_t)XMC_I2C_CH_STATUS_FLAG_WRONG_TDF_CODE_FOUND)))
 280:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 281:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /* Disable the transmit events */
 282:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDAR
 283:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_DisableEvent(handle->channel, (uint32_t)XMC_USIC_CH_EVENT_TRANSMIT_BUFFER);
 284:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 285:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ProtocolHandler(handle);
 286:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 287:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 288:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 289:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 290:../Dave/Generated/I2C_MASTER/i2c_master.c ****   Direction = Transmit, Tx FIFO enabled
 291:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 292:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (ptr_runtime->direction == (uint32_t)I2C_MASTER_DIRECTION_TRANSMIT)
 293:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 294:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->txFIFO_size > 0)
 295:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 296:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 297:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 298:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_DisableEvent(handle,(uint32_t)XMC_I2C_CH_EVENT_ACK);
 299:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TXFIFO_EnableEvent(handle->channel, (uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STAND
 300:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /*Fill the transmit FIFO */
 301:../Dave/Generated/I2C_MASTER/i2c_master.c ****         while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 302:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 303:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /* transmit each byte till index reaches to the last byte */
 304:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 305:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 306:../Dave/Generated/I2C_MASTER/i2c_master.c ****             /* load the FIFO, byte by byte till either FIFO is full or all data is loaded*/
 307:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_TransmitByte(handle, (uint8_t)ptr_runtime->tx_data[ptr_runtime->tx_data_inde
 308:../Dave/Generated/I2C_MASTER/i2c_master.c ****             ptr_runtime->tx_data_index++;
 309:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 310:../Dave/Generated/I2C_MASTER/i2c_master.c ****           else
 311:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 312:../Dave/Generated/I2C_MASTER/i2c_master.c ****             break;
 313:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 314:../Dave/Generated/I2C_MASTER/i2c_master.c ****         } /* end of while */
 315:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 316:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 317:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 318:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /* if index is reached to last byte and "bus acquired" flag is set to true, then issue Send
 319:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel, (uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STAN
 320:../Dave/Generated/I2C_MASTER/i2c_master.c ****       NVIC_ClearPendingIRQ(handle->config->tx_irqn);
 321:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 322:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /*make sure data is transmitted in FIFO*/
 323:../Dave/Generated/I2C_MASTER/i2c_master.c ****         while (!XMC_USIC_CH_TXFIFO_IsEmpty(handle->channel)){}
 324:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 325:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (ptr_runtime->bus_acquired == true)
 326:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 327:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_lSendStop_JumpTo_TxCallback(handle);
 328:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 329:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 330:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of  if(handle->config->txFIFO_size > 0) */
 331:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 332:../Dave/Generated/I2C_MASTER/i2c_master.c ****     Direction = transmit and Tx FIFO disabled
 333:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 334:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 335:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 336:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /* transmit each byte till the last byte */
 337:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 338:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 339:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_TransmitByte(handle, ptr_runtime->tx_data[ptr_runtime->tx_data_index]);
 340:../Dave/Generated/I2C_MASTER/i2c_master.c ****         ptr_runtime->tx_data_index++;
 341:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 342:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 343:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 344:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /* if index reaches last byte and bus_acquired flag is set to true, issue send stop */
 345:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->bus_acquired == true)
 346:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 347:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_lSendStop_JumpTo_TxCallback(handle);
 348:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 349:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 350:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 351:../Dave/Generated/I2C_MASTER/i2c_master.c ****   } /* end of if(ptr_runtime->direction == (uint32_t)I2C_MASTER_DIRECTION_TRANSMIT) */
 352:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 353:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 354:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 355:../Dave/Generated/I2C_MASTER/i2c_master.c ****   Direction = Receive, Tx, Rx FIFO enabled.
 356:../Dave/Generated/I2C_MASTER/i2c_master.c ****   Minimum FIFO value is calculated by comparing Tx FIFO and Rx FIFO size.
 357:../Dave/Generated/I2C_MASTER/i2c_master.c ****   If Rx FIFO is not enabled, default size of 2 is considered.
 358:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 359:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->txFIFO_size > 0)
 360:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 361:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if ((handle->config->rxFIFO_size > 0))
 362:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 363:../Dave/Generated/I2C_MASTER/i2c_master.c ****         fifo_min = (uint8_t)calculate_minfifosize(((uint32_t)1 << (uint32_t)handle->config->txFIFO_
 364:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                               ((uint32_t)1 << (uint32_t)handle->config->rxFIFO_size
 365:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 366:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 367:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 368:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /* if Rx FIFO is disabled, set minimum FIFO size as 2 */
 369:../Dave/Generated/I2C_MASTER/i2c_master.c ****         fifo_min = 2U;
 370:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 371:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 372:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel, (uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STAN
 373:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 374:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /* fill the FIFO */
 375:../Dave/Generated/I2C_MASTER/i2c_master.c ****       while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 376:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 377:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 378:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 379:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /* check for last byte and send_nack is set to true */
 380:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->se
 381:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 382:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveNACK(handle);
 383:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 384:../Dave/Generated/I2C_MASTER/i2c_master.c ****           else
 385:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 386:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveACK(handle);
 387:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 388:../Dave/Generated/I2C_MASTER/i2c_master.c ****           ptr_runtime->tx_data_index++;
 389:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 390:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /*if index reaches fifo size - break*/
 391:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if ((ptr_runtime->tx_data_index) >= fifo_min)
 392:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 393:../Dave/Generated/I2C_MASTER/i2c_master.c ****             break;
 394:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 395:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 396:../Dave/Generated/I2C_MASTER/i2c_master.c ****         else
 397:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 398:../Dave/Generated/I2C_MASTER/i2c_master.c ****           break;
 399:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 400:../Dave/Generated/I2C_MASTER/i2c_master.c ****       } /* end of while */
 401:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of if(handle->config->txFIFO_size > 0) */
 402:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 403:../Dave/Generated/I2C_MASTER/i2c_master.c ****    Direction = Receive, Tx FIFO disabled
 404:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
 405:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 406:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 407:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /* check for last byte and send_nack is set to true */
 408:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send_n
 409:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 410:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_ReceiveNACK(handle);
 411:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 412:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 413:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 414:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_ReceiveACK(handle);
 415:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 416:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->tx_data_index++;
 417:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 418:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 419:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 420:../Dave/Generated/I2C_MASTER/i2c_master.c ****    If last byte, then disable ACK event
 421:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
 422:../Dave/Generated/I2C_MASTER/i2c_master.c ****      if (handle->runtime->tx_data_index == handle->runtime->tx_data_count)
 423:../Dave/Generated/I2C_MASTER/i2c_master.c ****      {
 424:../Dave/Generated/I2C_MASTER/i2c_master.c ****        I2C_MASTER_DisableEvent(handle,(uint32_t)XMC_I2C_CH_EVENT_ACK);
 425:../Dave/Generated/I2C_MASTER/i2c_master.c ****      }
 426:../Dave/Generated/I2C_MASTER/i2c_master.c ****   } /* end of else */
 427:../Dave/Generated/I2C_MASTER/i2c_master.c ****  } /* end of else */
 428:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 429:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 430:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to issue Send Stop command and jump to callback routine */
 431:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStop_JumpTo_TxCallback(I2C_MASTER_t *const handle)
 432:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 433:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 434:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 435:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 436:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 437:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_DisableEvent(handle,((uint32_t)XMC_I2C_CH_EVENT_ACK ));
 438:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 439:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (ptr_runtime->send_stop == true)
 440:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 441:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->bus_acquired = false;
 442:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_SendStop(handle);
 443:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 444:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 445:../Dave/Generated/I2C_MASTER/i2c_master.c ****   while (XMC_USIC_CH_GetTransmitBufferStatus(handle->channel) == XMC_USIC_CH_TBUF_STATUS_BUSY){}
 446:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 447:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /*All data is transmitted*/
 448:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime->tx_busy = false;
 449:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 450:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->tx_cbhandler != NULL)
 451:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 452:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Execute the 'End of transmission' callback function*/
 453:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->tx_cbhandler();
 454:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 455:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 456:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 457:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 458:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 459:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @brief This function registers the receive request by configuring the I2C_MASTER
 460:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * receive FIFO/Standard buffer (depending on the user configuration). The data
 461:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * is received asynchronously. When the requested number of data bytes are received,
 462:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * optionally, the user configured callback function will be executed. If a callback
 463:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * function is not configured on the APP UI, the user has to poll for the status of
 464:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * rx_busy variable of the APP handle structure.
 465:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 466:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Note: In FIFO mode, FIFO trigger limit should be adjusted manually to
 467:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * read required amount of data from FIFO buffer.
 468:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 469:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 470:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  I2C_MASTER_t* I2C_MASTER APP handle pointer of type I2C_MASTER_t
 471:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  bool      flag for send_start
 472:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  uint32_t  slave address
 473:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  uint8_t*  Pointer to data array
 474:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  uint32_t  Total no of bytes to be read.
 475:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  bool      flag for send_stop
 476:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  bool      flag for send_nack
 477:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 478:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return  I2C_MASTER_STATUS_t I2C_MASTER_STATUS_SUCCESS if the request is accepted.
 479:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *                              I2C_MASTER_STATUS_BUSY if a reception is in progress.
 480:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 481:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 482:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * request is registered.
 483:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 484:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 485:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
 486:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_Receive(I2C_MASTER_t *handle, bool send_start, const uint32_t addres
 487:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                    const uint32_t count, bool send_stop, bool send_nack)
 488:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 489:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 490:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 491:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_BUSY;
 492:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 493:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->receive_mode == I2C_MASTER_TRANSFER_MODE_INTERRUPT)
 494:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 495:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
 496:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_StartReceiveIRQ(handle, send_start, address, data, count, send_stop, send_nac
 497:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 498:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 499:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else if (handle->config->receive_mode == I2C_MASTER_TRANSFER_MODE_DMA)
 500:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 501:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 502:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_UNSUPPORTED_MODE;
 503:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 504:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 505:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 506:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 507:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DIRECT_RX_ENABLED == 1)
 508:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_lStartReceivePolling(handle, send_start, address, data, count, send_stop, s
 509:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 510:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 511:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 512:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 513:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 514:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 515:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
 516:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 517:../Dave/Generated/I2C_MASTER/i2c_master.c ****      Rx FIFO data
 518:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 519:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReceive_FIFOData(I2C_MASTER_t * const handle, bool send_start, const uint32
 520:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                      const uint32_t count)
 521:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 522:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 523:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 524:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 525:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 526:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /*Clear the receive FIFO, configure the trigger lime
 527:../Dave/Generated/I2C_MASTER/i2c_master.c ****    * and enable the receive events*/
 528:../Dave/Generated/I2C_MASTER/i2c_master.c ****   XMC_USIC_CH_RXFIFO_Flush(handle->channel);
 529:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 530:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /*Configure the FIFO trigger limit based on the required data size*/
 531:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_lReconfigureRxFIFO(handle, count);
 532:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 533:../Dave/Generated/I2C_MASTER/i2c_master.c ****   XMC_USIC_CH_RXFIFO_EnableEvent(handle->channel,
 534:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                 (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD |
 535:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                            (uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE));
 536:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (send_start == true)
 537:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 538:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if(!((handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA) ||
 539:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT)))
 540:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 541:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_EnableEvent(handle, (uint32_t)XMC_I2C_CH_EVENT_ACK);
 542:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_I2C_CH_SetInterruptNodePointer(handle->channel,ptr_runtime->tx_ack_sr);
 543:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 544:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_lSendStart_Or_RepeatedStart(handle,address, (XMC_I2C_CH_CMD_t)XMC_I2C_CH_CMD_READ);
 545:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 546:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_TX_ENABLED)
 547:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if(handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA)
 548:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 549:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send_nac
 550:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 551:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ReceiveNACK(handle);
 552:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 553:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 554:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 555:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ReceiveACK(handle);
 556:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 557:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_index++;
 558:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 559:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 560:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT)
 561:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 562:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (handle->config->txFIFO_size != XMC_USIC_CH_FIFO_DISABLED)
 563:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 564:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Fill the transmit FIFO */
 565:../Dave/Generated/I2C_MASTER/i2c_master.c ****       while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 566:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 567:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 568:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 569:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send
 570:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 571:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_ReceiveNACK(handle);
 572:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 573:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 574:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 575:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_ReceiveACK(handle);
 576:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 577:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->tx_data_index++;
 578:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 579:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 580:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 581:../Dave/Generated/I2C_MASTER/i2c_master.c ****         break;
 582:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 583:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of while */
 584:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 585:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 586:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 587:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /* if it is last byte and send_nack true */
 588:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send_n
 589:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 590:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_ReceiveNACK(handle);
 591:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 592:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 593:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 594:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_ReceiveACK(handle);
 595:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 596:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_index++;
 597:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 598:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of if (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT) */
 599:../Dave/Generated/I2C_MASTER/i2c_master.c ****   } /* end of if (send_start == true) */
 600:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 601:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 602:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /* if Tx FIFO enabled */
 603:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->txFIFO_size > 0)
 604:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 605:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,
 606:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                      (uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD);
 607:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /*Fill the transmit FIFO */
 608:../Dave/Generated/I2C_MASTER/i2c_master.c ****       while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 609:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 610:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 611:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 612:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) &&
 613:../Dave/Generated/I2C_MASTER/i2c_master.c ****                (ptr_runtime->send_nack == true))
 614:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 615:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveNACK(handle);
 616:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 617:../Dave/Generated/I2C_MASTER/i2c_master.c ****           else
 618:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 619:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveACK(handle);
 620:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 621:../Dave/Generated/I2C_MASTER/i2c_master.c ****           ptr_runtime->tx_data_index++;
 622:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 623:../Dave/Generated/I2C_MASTER/i2c_master.c ****         else
 624:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 625:../Dave/Generated/I2C_MASTER/i2c_master.c ****           break;
 626:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 627:../Dave/Generated/I2C_MASTER/i2c_master.c ****       } /* end of while */
 628:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 629:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else  /* Tx FIFO disabled and Rx FIFO enabled */
 630:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 631:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 632:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 633:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) &&
 634:../Dave/Generated/I2C_MASTER/i2c_master.c ****              (ptr_runtime->send_nack == true))
 635:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 636:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_ReceiveNACK(handle);
 637:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 638:../Dave/Generated/I2C_MASTER/i2c_master.c ****         else
 639:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 640:../Dave/Generated/I2C_MASTER/i2c_master.c ****           XMC_I2C_CH_ClearStatusFlag(handle->channel, ((uint32_t)XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVE
 641:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                               (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDI
 642:../Dave/Generated/I2C_MASTER/i2c_master.c ****                           (uint32_t)XMC_I2C_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION|
 643:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                               (uint32_t)XMC_I2C_CH_STATUS_FLAG_RECEIVE_INDICATION |
 644:../Dave/Generated/I2C_MASTER/i2c_master.c ****                           (uint32_t)XMC_I2C_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION));
 645:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_ReceiveACK(handle);
 646:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 647:../Dave/Generated/I2C_MASTER/i2c_master.c ****         ptr_runtime->tx_data_index++;
 648:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 649:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of else */
 650:../Dave/Generated/I2C_MASTER/i2c_master.c ****    } /* end of  if(send_start == false) */
 651:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 652:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 653:../Dave/Generated/I2C_MASTER/i2c_master.c ****     Standard receive mode
 654:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 655:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReceive_StdData(I2C_MASTER_t * const handle, bool send_start, const uint32_
 656:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 657:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 658:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 659:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 660:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 661:../Dave/Generated/I2C_MASTER/i2c_master.c ****   XMC_USIC_CH_EnableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_STANDARD_RECEIVE 
 662:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                       (uint32_t)XMC_USIC_CH_EVENT_ALTERNATIVE_RECEI
 663:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 664:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (send_start == true)
 665:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 666:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if(!((handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA) ||
 667:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT)))
 668:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 669:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_EnableEvent(handle, (uint32_t)XMC_I2C_CH_EVENT_ACK);
 670:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_I2C_CH_SetInterruptNodePointer(handle->channel,ptr_runtime->tx_ack_sr);
 671:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 672:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_lSendStart_Or_RepeatedStart(handle, address, (XMC_I2C_CH_CMD_t)XMC_I2C_CH_CMD_READ);
 673:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 674:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if ((handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA) ||
 675:../Dave/Generated/I2C_MASTER/i2c_master.c ****         (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT))
 676:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 677:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send_nac
 678:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 679:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_ReceiveNACK(handle);
 680:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 681:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 682:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 683:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ReceiveACK(handle);
 684:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 685:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_index++;
 686:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 687:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 688:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 689:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 690:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 691:../Dave/Generated/I2C_MASTER/i2c_master.c ****      send_start flag is set to false and Tx FIFO is disabled
 692:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 693:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->txFIFO_size == 0)
 694:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 695:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->send_n
 696:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 697:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_ReceiveNACK(handle);
 698:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 699:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
 700:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 701:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_ReceiveACK(handle);
 702:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 703:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 704:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->tx_data_index++;
 705:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 706:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 707:../Dave/Generated/I2C_MASTER/i2c_master.c ****      send_start flag is set to false and Tx FIFO is enabled
 708:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 709:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 710:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 711:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STAND
 712:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 713:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /*Fill the transmit FIFO */
 714:../Dave/Generated/I2C_MASTER/i2c_master.c ****       while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 715:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 716:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 717:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 718:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->se
 719:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 720:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveNACK(handle);
 721:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 722:../Dave/Generated/I2C_MASTER/i2c_master.c ****           else
 723:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 724:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveACK(handle);
 725:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 726:../Dave/Generated/I2C_MASTER/i2c_master.c ****           ptr_runtime->tx_data_index++;
 727:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 728:../Dave/Generated/I2C_MASTER/i2c_master.c ****         else
 729:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 730:../Dave/Generated/I2C_MASTER/i2c_master.c ****           break;
 731:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 732:../Dave/Generated/I2C_MASTER/i2c_master.c ****       } /* end of while */
 733:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /* end of else */
 734:../Dave/Generated/I2C_MASTER/i2c_master.c ****   } /* end of else */
 735:../Dave/Generated/I2C_MASTER/i2c_master.c **** } /* end of function */
 736:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 737:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 738:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if ((I2C_MASTER_INTERRUPT_TX_ENABLED == 1) || (I2C_MASTER_INTERRUPT_RX_ENABLED == 1) || \
 739:../Dave/Generated/I2C_MASTER/i2c_master.c ****     (I2C_MASTER_DIRECT_TX_ENABLED == 1) || (I2C_MASTER_DIRECT_RX_ENABLED == 1))
 740:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to issue Send Start/Repeated Start command */
 741:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStart_Or_RepeatedStart(I2C_MASTER_t * handle,const uint32_t address,
 742:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                const XMC_I2C_CH_CMD_t cmd)
 743:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 744:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->runtime->bus_acquired == true)
 745:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 746:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_SendRepeatedStart(handle, (uint16_t)address, cmd);
 747:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 748:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 749:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 750:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->runtime->bus_acquired = true;
 751:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_SendStart(handle, (uint16_t)address, cmd);
 752:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 753:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 754:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 755:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 756:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1)
 757:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 758:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                 uint8_t *data, const uint32_t size, bool send_stop)
 759:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 760:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 761:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 762:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 763:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_BUSY;
 764:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 765:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 766:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* If send_stop is set to TRUE, bus_acquired flag is set to FALSE.
 767:../Dave/Generated/I2C_MASTER/i2c_master.c ****    If send_start is set to FALSE and bus_acquired is set to FALSE then API will return an error. */
 768:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (((send_start == false) && (handle->runtime->bus_acquired == false)) || (data == NULL) || (siz
 769:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 770:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_FAILURE;
 771:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 772:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 773:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 774:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->direction = (uint32_t)I2C_MASTER_DIRECTION_TRANSMIT;
 775:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 776:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (ptr_runtime->tx_busy == false)
 777:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 778:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*If there is no transmission in progress, obtain the address of data, size of data*/
 779:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data = data;
 780:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_count = size;
 781:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 782:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Initialize to first index and set the busy flag*/
 783:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_index = 0U;
 784:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_busy = true;
 785:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->send_stop = send_stop;
 786:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 787:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /* Enable ACK event */
 788:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_EnableEvent(handle, (uint32_t)XMC_I2C_CH_EVENT_ACK);
 789:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_I2C_CH_SetInterruptNodePointer(handle->channel,ptr_runtime->tx_ack_sr);
 790:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 791:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (send_start == true)
 792:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 793:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_lSendStart_Or_RepeatedStart(handle, address, (XMC_I2C_CH_CMD_t)XMC_I2C_CH_CMD_WRIT
 794:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 795:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 796:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 797:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /*Trigger the Ack interrupt*/
 798:../Dave/Generated/I2C_MASTER/i2c_master.c ****       XMC_USIC_CH_TriggerServiceRequest(handle->channel, (uint32_t)ptr_runtime->tx_ack_sr);
 799:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 800:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 801:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_SUCCESS;
 802:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 803:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 804:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 805:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 806:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 807:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_AbortTransmitIRQ(const I2C_MASTER_t *const handle)
 808:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 809:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->tx_busy = false;
 810:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->tx_data = NULL;
 811:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->bus_acquired = false;
 812:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 813:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /*Disable the transmit interrupts*/
 814:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->txFIFO_size != XMC_USIC_CH_FIFO_DISABLED)
 815:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 816:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Disable the transmit FIFO event*/
 817:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDAR
 818:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_TXFIFO_Flush(handle->channel);
 819:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 820:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_DisableEvent((I2C_MASTER_t *)handle,((uint32_t)XMC_I2C_CH_EVENT_ACK ));
 821:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 822:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 823:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 824:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
 825:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveIRQ(I2C_MASTER_t *handle, bool send_start, const uint32_
 826:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                uint8_t * data, const uint32_t count, bool send_stop
 827:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 828:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 829:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 830:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 831:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_BUSY;
 832:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 833:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 834:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (((handle == NULL) || ((send_start == false) && (handle->runtime->bus_acquired == false)) || (
 835:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (count == 0U)))
 836:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 837:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_FAILURE;
 838:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 839:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
 840:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 841:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (ptr_runtime->rx_busy == false)
 842:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 843:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->direction = (uint32_t)I2C_MASTER_DIRECTION_RECEIVE;
 844:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 845:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /* If no active reception in progress, obtain the address of data buffer and number of data b
 846:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->rx_data = data;
 847:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->rx_data_count = count;
 848:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data = data;
 849:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_count = count;
 850:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_busy = true;
 851:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->rx_busy = true;
 852:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->send_stop = send_stop;
 853:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->send_nack = send_nack;
 854:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->rx_data_index = 0U;
 855:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_index = 0U;
 856:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 857:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->rxFIFO_size > 0)
 858:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 859:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_lReceive_FIFOData(handle, send_start, address, count);
 860:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 861:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
 862:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 863:../Dave/Generated/I2C_MASTER/i2c_master.c ****       I2C_MASTER_lReceive_StdData(handle, send_start, address);
 864:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 865:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_SUCCESS;
 866:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 867:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 868:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
 869:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 870:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 871:../Dave/Generated/I2C_MASTER/i2c_master.c **** /*
 872:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Receive interrupt handler for the APP.
 873:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * This is a common interrupt handling function for different instances of the I2C_MASTER APP.
 874:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 875:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  handle I2C_MASTER APP handle pointer of type I2C_MASTER_t*
 876:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
 877:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return void
 878:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
 879:../Dave/Generated/I2C_MASTER/i2c_master.c **** void I2C_MASTER_ReceiveHandler(I2C_MASTER_t * const handle)
 880:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 881:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 882:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t fifo_lindex;
 883:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t fifo_min;
 884:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 885:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 886:../Dave/Generated/I2C_MASTER/i2c_master.c ****   fifo_lindex = 0U;
 887:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 888:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (ptr_runtime->rx_busy == true)
 889:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 890:../Dave/Generated/I2C_MASTER/i2c_master.c ****     if (handle->config->rxFIFO_size > 0)
 891:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 892:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /********************************************************************************************
 893:../Dave/Generated/I2C_MASTER/i2c_master.c ****        Rx FIFO enabled
 894:../Dave/Generated/I2C_MASTER/i2c_master.c ****       *********************************************************************************************
 895:../Dave/Generated/I2C_MASTER/i2c_master.c ****       while (I2C_MASTER_IsRXFIFOEmpty(handle) == false)
 896:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 897:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /*Read all the content of Receive FIFO */
 898:../Dave/Generated/I2C_MASTER/i2c_master.c ****         ptr_runtime->rx_data[ptr_runtime->rx_data_index] = (uint8_t)I2C_MASTER_GetReceivedByte(hand
 899:../Dave/Generated/I2C_MASTER/i2c_master.c ****         ptr_runtime->rx_data_index++;
 900:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 901:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->rx_data_index == ptr_runtime->rx_data_count)
 902:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 903:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /*Reception complete*/
 904:../Dave/Generated/I2C_MASTER/i2c_master.c ****           ptr_runtime->rx_busy = false;
 905:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 906:../Dave/Generated/I2C_MASTER/i2c_master.c ****             /*Disable both standard receive and alternative receive FIFO events*/
 907:../Dave/Generated/I2C_MASTER/i2c_master.c ****             XMC_USIC_CH_RXFIFO_DisableEvent(handle->channel,
 908:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                           (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDA
 909:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                      (uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERN
 910:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 911:../Dave/Generated/I2C_MASTER/i2c_master.c ****           break;
 912:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 913:../Dave/Generated/I2C_MASTER/i2c_master.c ****       } /* end of while(I2C_MASTER_IsRXFIFOEmpty(handle) == false)*/
 914:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 915:../Dave/Generated/I2C_MASTER/i2c_master.c ****       /*Set the trigger limit if data still to be received*/
 916:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (ptr_runtime->rx_data_index < ptr_runtime->rx_data_count)
 917:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 918:../Dave/Generated/I2C_MASTER/i2c_master.c ****         I2C_MASTER_lReconfigureRxFIFO(handle,(uint32_t)(ptr_runtime->rx_data_count - ptr_runtime->r
 919:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 920:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if ((handle->config->txFIFO_size > 0))
 921:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 922:../Dave/Generated/I2C_MASTER/i2c_master.c ****           fifo_min = (uint8_t)calculate_minfifosize(((uint32_t)1 << (uint32_t)handle->config->txFIF
 923:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                     ((uint32_t)1 << (uint32_t)handle->config->rxFIF
 924:../Dave/Generated/I2C_MASTER/i2c_master.c ****        }
 925:../Dave/Generated/I2C_MASTER/i2c_master.c ****        else
 926:../Dave/Generated/I2C_MASTER/i2c_master.c ****        {
 927:../Dave/Generated/I2C_MASTER/i2c_master.c ****           fifo_min = 2U;
 928:../Dave/Generated/I2C_MASTER/i2c_master.c ****        }
 929:../Dave/Generated/I2C_MASTER/i2c_master.c ****        /*******************************************************************************************
 930:../Dave/Generated/I2C_MASTER/i2c_master.c ****          Rx and Tx FIFO enabled
 931:../Dave/Generated/I2C_MASTER/i2c_master.c ****         *******************************************************************************************
 932:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (handle->config->txFIFO_size > 0)
 933:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 934:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /*Fill the transmit FIFO */
 935:../Dave/Generated/I2C_MASTER/i2c_master.c ****           while (I2C_MASTER_IsTXFIFOFull(handle) == false)
 936:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 937:../Dave/Generated/I2C_MASTER/i2c_master.c ****             if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 938:../Dave/Generated/I2C_MASTER/i2c_master.c ****             {
 939:../Dave/Generated/I2C_MASTER/i2c_master.c ****               if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime
 940:../Dave/Generated/I2C_MASTER/i2c_master.c ****               {
 941:../Dave/Generated/I2C_MASTER/i2c_master.c ****                 I2C_MASTER_ReceiveNACK(handle);
 942:../Dave/Generated/I2C_MASTER/i2c_master.c ****               }
 943:../Dave/Generated/I2C_MASTER/i2c_master.c ****               else
 944:../Dave/Generated/I2C_MASTER/i2c_master.c ****               {
 945:../Dave/Generated/I2C_MASTER/i2c_master.c ****                 I2C_MASTER_ReceiveACK(handle);
 946:../Dave/Generated/I2C_MASTER/i2c_master.c ****               }
 947:../Dave/Generated/I2C_MASTER/i2c_master.c ****               ptr_runtime->tx_data_index++;
 948:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 949:../Dave/Generated/I2C_MASTER/i2c_master.c ****               /* if fifo size- break */
 950:../Dave/Generated/I2C_MASTER/i2c_master.c ****               if ((++fifo_lindex) >= fifo_min)
 951:../Dave/Generated/I2C_MASTER/i2c_master.c ****               {
 952:../Dave/Generated/I2C_MASTER/i2c_master.c ****                 fifo_lindex = 0U;
 953:../Dave/Generated/I2C_MASTER/i2c_master.c ****                 break;
 954:../Dave/Generated/I2C_MASTER/i2c_master.c ****               }
 955:../Dave/Generated/I2C_MASTER/i2c_master.c ****             }/* end of if(handle->runtime->tx_data_index < handle->runtime->tx_data_count) */
 956:../Dave/Generated/I2C_MASTER/i2c_master.c ****             else
 957:../Dave/Generated/I2C_MASTER/i2c_master.c ****             {
 958:../Dave/Generated/I2C_MASTER/i2c_master.c ****               break;
 959:../Dave/Generated/I2C_MASTER/i2c_master.c ****             }
 960:../Dave/Generated/I2C_MASTER/i2c_master.c ****          }
 961:../Dave/Generated/I2C_MASTER/i2c_master.c ****        } /* end of  if((handle->config->txFIFO_size > 0)) */
 962:../Dave/Generated/I2C_MASTER/i2c_master.c ****        /*******************************************************************************************
 963:../Dave/Generated/I2C_MASTER/i2c_master.c ****           Rx FIFO is enabled, Tx FIFO disabled
 964:../Dave/Generated/I2C_MASTER/i2c_master.c ****        ********************************************************************************************
 965:../Dave/Generated/I2C_MASTER/i2c_master.c ****        else
 966:../Dave/Generated/I2C_MASTER/i2c_master.c ****        {
 967:../Dave/Generated/I2C_MASTER/i2c_master.c ****          if (((ptr_runtime->tx_data_index + 1U) == ptr_runtime->tx_data_count) && (ptr_runtime->sen
 968:../Dave/Generated/I2C_MASTER/i2c_master.c ****          {
 969:../Dave/Generated/I2C_MASTER/i2c_master.c ****            I2C_MASTER_ReceiveNACK(handle);
 970:../Dave/Generated/I2C_MASTER/i2c_master.c ****          }
 971:../Dave/Generated/I2C_MASTER/i2c_master.c ****          else
 972:../Dave/Generated/I2C_MASTER/i2c_master.c ****          {
 973:../Dave/Generated/I2C_MASTER/i2c_master.c ****            I2C_MASTER_ReceiveACK(handle);
 974:../Dave/Generated/I2C_MASTER/i2c_master.c ****          }
 975:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 976:../Dave/Generated/I2C_MASTER/i2c_master.c ****          ptr_runtime->tx_data_index++;
 977:../Dave/Generated/I2C_MASTER/i2c_master.c ****        }
 978:../Dave/Generated/I2C_MASTER/i2c_master.c ****      } /* end of if(ptr_runtime->rx_data_index < ptr_runtime->rx_data_count) */
 979:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 980:../Dave/Generated/I2C_MASTER/i2c_master.c ****      if last byte to receive then disable receive events and jump to callback routine
 981:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
 982:../Dave/Generated/I2C_MASTER/i2c_master.c ****      if (ptr_runtime->rx_data_index == ptr_runtime->rx_data_count)
 983:../Dave/Generated/I2C_MASTER/i2c_master.c ****      {
 984:../Dave/Generated/I2C_MASTER/i2c_master.c ****        /*Clear both standard receive and alternative receive FIFO events*/
 985:../Dave/Generated/I2C_MASTER/i2c_master.c ****        XMC_USIC_CH_RXFIFO_DisableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVE
 986:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                                    (uint32_t)XMC_USIC_CH_RXFIFO_EVE
 987:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 988:../Dave/Generated/I2C_MASTER/i2c_master.c ****        /*Disable both standard receive and alternative receive events*/
 989:../Dave/Generated/I2C_MASTER/i2c_master.c ****        XMC_USIC_CH_DisableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_ALTERNATIVE
 990:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                             (uint32_t)XMC_USIC_CH_EVENT_STANDARD_RE
 991:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 992:../Dave/Generated/I2C_MASTER/i2c_master.c ****        if (ptr_runtime->bus_acquired == true)
 993:../Dave/Generated/I2C_MASTER/i2c_master.c ****        {
 994:../Dave/Generated/I2C_MASTER/i2c_master.c ****          I2C_MASTER_lSendStop_JumpTo_RxCallback(handle);
 995:../Dave/Generated/I2C_MASTER/i2c_master.c ****        }
 996:../Dave/Generated/I2C_MASTER/i2c_master.c ****      }
 997:../Dave/Generated/I2C_MASTER/i2c_master.c ****     } /*  end of if(handle->config->rxFIFO_size > 0) */
 998:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
 999:../Dave/Generated/I2C_MASTER/i2c_master.c ****      Rx FIFO disabled
1000:../Dave/Generated/I2C_MASTER/i2c_master.c **** ***************************************************************************************************
1001:../Dave/Generated/I2C_MASTER/i2c_master.c ****     else
1002:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
1003:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->rx_data[ptr_runtime->rx_data_index] = (uint8_t)I2C_MASTER_GetReceivedByte(handle
1004:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->rx_data_index++;
1005:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1006:../Dave/Generated/I2C_MASTER/i2c_master.c ****       if (ptr_runtime->rx_data_index < ptr_runtime->rx_data_count)
1007:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
1008:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
1009:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
1010:../Dave/Generated/I2C_MASTER/i2c_master.c ****           /* if receive byte is end of byte and send_nack is true, send to receive Nack otherwise A
1011:../Dave/Generated/I2C_MASTER/i2c_master.c ****           if (((ptr_runtime->tx_data_index) == (ptr_runtime->tx_data_count - 1U)) && (ptr_runtime->
1012:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
1013:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveNACK(handle);
1014:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
1015:../Dave/Generated/I2C_MASTER/i2c_master.c ****           else
1016:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
1017:../Dave/Generated/I2C_MASTER/i2c_master.c ****             I2C_MASTER_ReceiveACK(handle);
1018:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
1019:../Dave/Generated/I2C_MASTER/i2c_master.c ****           ptr_runtime->tx_data_index++;
1020:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
1021:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
1022:../Dave/Generated/I2C_MASTER/i2c_master.c ****       else
1023:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
1024:../Dave/Generated/I2C_MASTER/i2c_master.c ****         /*Disable both standard receive and alternative receive events*/
1025:../Dave/Generated/I2C_MASTER/i2c_master.c ****         XMC_USIC_CH_DisableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_ALTERNATIV
1026:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                              (uint32_t)XMC_USIC_CH_EVENT_STANDARD_R
1027:../Dave/Generated/I2C_MASTER/i2c_master.c ****         if (ptr_runtime->bus_acquired == true)
1028:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
1029:../Dave/Generated/I2C_MASTER/i2c_master.c ****           I2C_MASTER_lSendStop_JumpTo_RxCallback(handle);
1030:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
1031:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
1032:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
1033:../Dave/Generated/I2C_MASTER/i2c_master.c ****   } /* end of  if(ptr_runtime->rx_busy == true)*/
1034:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
1035:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1036:../Dave/Generated/I2C_MASTER/i2c_master.c **** /* Function to issue Send Stop command and jump to receive callback routine */
1037:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lSendStop_JumpTo_RxCallback(I2C_MASTER_t *const handle)
1038:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
1039:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
1040:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1041:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
1042:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1043:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (ptr_runtime->send_stop == true)
1044:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1045:../Dave/Generated/I2C_MASTER/i2c_master.c ****     while (XMC_USIC_CH_GetTransmitBufferStatus(handle->channel) == XMC_USIC_CH_TBUF_STATUS_BUSY){}
1046:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1047:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->bus_acquired = false;
1048:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1049:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_SendStop(handle);
1050:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1051:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1052:../Dave/Generated/I2C_MASTER/i2c_master.c ****   while (XMC_USIC_CH_GetTransmitBufferStatus(handle->channel) == XMC_USIC_CH_TBUF_STATUS_BUSY){}
1053:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1054:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Reception complete */
1055:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime->rx_busy = false;
1056:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime->tx_busy = false;
1057:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1058:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->rx_cbhandler != NULL)
1059:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1060:../Dave/Generated/I2C_MASTER/i2c_master.c ****     /*Execute the 'End of reception' callback function*/
1061:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->rx_cbhandler();
1062:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1063:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
1064:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1065:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1066:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lAbortReceiveIRQ(const I2C_MASTER_t *const handle)
1067:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
1068:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Reset the user buffer pointer to null */
1069:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->rx_busy = false;
1070:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->tx_busy = false;
1071:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->rx_data = NULL;
1072:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1073:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->bus_acquired = false;
1074:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1075:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Disable the receive interrupts */
1076:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->rxFIFO_size != XMC_USIC_CH_FIFO_DISABLED)
1077:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1078:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_RXFIFO_DisableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_
1079:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                     (uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNA
1080:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1081:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
1082:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1083:../Dave/Generated/I2C_MASTER/i2c_master.c ****     XMC_USIC_CH_DisableEvent(handle->channel, (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_STANDARD_RECEI
1084:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                  (uint32_t)XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE));
1085:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1086:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_DisableEvent((I2C_MASTER_t *)handle,((uint32_t)XMC_I2C_CH_EVENT_ACK ));
1087:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
1088:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1089:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1090:../Dave/Generated/I2C_MASTER/i2c_master.c **** /*
1091:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Protocol interrupt handling function.
1092:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * The function is common for different instances of the I2C_MASTER APP.
1093:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1094:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param  handle I2C_MASTER APP handle pointer of type I2C_MASTER_t*
1095:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1096:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return void
1097:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
1098:../Dave/Generated/I2C_MASTER/i2c_master.c **** void I2C_MASTER_ProtocolHandler(I2C_MASTER_t * const handle)
1099:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
1100:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint32_t psr_status;
1101:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1102:../Dave/Generated/I2C_MASTER/i2c_master.c ****   psr_status = XMC_I2C_CH_GetStatusFlag(handle->channel);
1103:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1104:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Check for nack event */
1105:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if ((handle->config->nack_cbhandler != NULL) && (psr_status & (uint32_t)XMC_I2C_CH_STATUS_FLAG_NA
1106:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1107:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ClearFlag(handle,(uint32_t)XMC_I2C_CH_STATUS_FLAG_NACK_RECEIVED);
1108:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->nack_cbhandler();
1109:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1110:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1111:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Check for arbitration lost */
1112:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if ((handle->config->arbitration_cbhandler != NULL) && (psr_status & (uint32_t)XMC_I2C_CH_STATUS_
1113:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1114:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ClearFlag(handle,(uint32_t)XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST);
1115:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->arbitration_cbhandler();
1116:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1117:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1118:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Check for error detected */
1119:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if ((handle->config->error_cbhandler != NULL) && (psr_status & ((uint32_t)XMC_I2C_CH_STATUS_FLAG_
1120:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1121:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_ClearFlag(handle,(uint32_t)XMC_I2C_CH_STATUS_FLAG_ERROR);
1122:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->error_cbhandler();
1123:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1124:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
1125:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1126:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
1127:../Dave/Generated/I2C_MASTER/i2c_master.c **** /*
1128:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @brief A local function to reconfigure Receive FIFO with the given size and trigger limit.
1129:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Size is needed because the FIFO should be disabled before changing the trigger limit by
1130:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * clearing the FIFO size.
1131:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1132:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param I2C_MASTER_t * pointer to the I2C_MASTER APP handle
1133:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param uint32_t  number of bytes to be received.
1134:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1135:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return void.
1136:../Dave/Generated/I2C_MASTER/i2c_master.c ****  */
1137:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1138:../Dave/Generated/I2C_MASTER/i2c_master.c **** static void I2C_MASTER_lReconfigureRxFIFO(const I2C_MASTER_t * const handle, uint32_t data_size)
1139:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
  25              	 .loc 1 1139 0
  26              	 .cfi_startproc
  27              	.LVL0:
  28 0000 38B5     	 push {r3,r4,r5,lr}
  29              	.LCFI0:
  30              	 .cfi_def_cfa_offset 16
  31              	 .cfi_offset 3,-16
  32              	 .cfi_offset 4,-12
  33              	 .cfi_offset 5,-8
  34              	 .cfi_offset 14,-4
1140:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint32_t minfifo_value;
1141:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t tx_fifo_size;
1142:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t rx_fifo_size;
1143:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint8_t fifo_limit;
1144:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1145:../Dave/Generated/I2C_MASTER/i2c_master.c ****   rx_fifo_size = (uint8_t)((uint8_t)1 << handle->config->rxFIFO_size);
  35              	 .loc 1 1145 0
  36 0002 4468     	 ldr r4,[r0,#4]
1139:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint32_t minfifo_value;
  37              	 .loc 1 1139 0
  38 0004 0D1C     	 mov r5,r1
  39              	 .loc 1 1145 0
  40 0006 231C     	 mov r3,r4
  41 0008 0833     	 add r3,r3,#8
  42 000a D97F     	 ldrb r1,[r3,#31]
  43              	.LVL1:
  44 000c 0123     	 mov r3,#1
  45 000e 1A1C     	 mov r2,r3
1146:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1147:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if ((handle->config->txFIFO_size > 0))
  46              	 .loc 1 1147 0
  47 0010 0734     	 add r4,r4,#7
  48 0012 E47F     	 ldrb r4,[r4,#31]
1145:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
  49              	 .loc 1 1145 0
  50 0014 8A40     	 lsl r2,r2,r1
  51              	.LVL2:
  52              	 .loc 1 1147 0
  53 0016 002C     	 cmp r4,#0
  54 0018 01D0     	 beq .L2
1148:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1149:../Dave/Generated/I2C_MASTER/i2c_master.c ****     tx_fifo_size = (uint8_t)((uint8_t)1 << handle->config->txFIFO_size);
  55              	 .loc 1 1149 0
  56 001a A340     	 lsl r3,r3,r4
  57 001c DBB2     	 uxtb r3,r3
  58              	.LVL3:
  59              	.L2:
  60 001e D2B2     	 uxtb r2,r2
  61              	.LVL4:
  62 0020 AA42     	 cmp r2,r5
  63 0022 00D9     	 bls .L3
  64 0024 2A1C     	 mov r2,r5
  65              	.LVL5:
  66              	.L3:
  67 0026 9A42     	 cmp r2,r3
  68 0028 00D9     	 bls .L4
  69 002a 1A1C     	 mov r2,r3
  70              	.LVL6:
  71              	.L4:
1150:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1151:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
1152:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1153:../Dave/Generated/I2C_MASTER/i2c_master.c ****     tx_fifo_size = 1U;
1154:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1155:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1156:../Dave/Generated/I2C_MASTER/i2c_master.c ****   minfifo_value = (uint32_t)(calculate_minfifosize((uint32_t)tx_fifo_size, (uint32_t)rx_fifo_size))
1157:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1158:../Dave/Generated/I2C_MASTER/i2c_master.c ****   fifo_limit = (uint8_t)(calculate_minfifosize(data_size, minfifo_value));
1159:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1160:../Dave/Generated/I2C_MASTER/i2c_master.c ****   /* Set the limit value */
1161:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_SetRXFIFOTriggerLimit((I2C_MASTER_t *)handle, handle->config->rxFIFO_size, ((uint32_t)
  72              	 .loc 1 1161 0
  73 002c 013A     	 sub r2,r2,#1
  74              	.LBB190:
  75              	.LBB191:
  76              	 .file 2 "../Dave/Generated/I2C_MASTER/i2c_master.h"
   1:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
   2:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @file i2c_master.h
   3:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @date 2017-12-20
   4:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
   5:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * NOTE:
   6:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * regenerated.
   8:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
   9:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
  10:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @cond
  11:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
  12:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * I2C_MASTER v4.1.30 Configures USIC channel to transmit & receive data using I2C protocol.
  13:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  14:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  15:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * All rights reserved.
  16:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  17:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  18:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * following conditions are met:
  19:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  20:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  21:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * disclaimer.
  22:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  23:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  24:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * following disclaimer in the documentation and/or other materials provided with the distribution.
  25:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  26:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  27:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * products derived from this software without specific prior written permission.
  28:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  29:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  30:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  31:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  32:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  33:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  34:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  35:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  37:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  38:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * with Infineon Technologies AG (dave@infineon.com).
  39:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
  40:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  41:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Change History
  42:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * --------------
  43:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  44:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2015-02-16:
  45:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - Initial version<br>
  46:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  47:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2015-06-10:
  48:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - AbortTransmit and AbortReceive API return type modified. <br>
  49:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  50:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2015-08-31:
  51:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - DMA support APIs added
  52:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2015-10-20:
  53:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - Code snippets updated
  54:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2016-08-18:
  55:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - Documentation of slave address formatting improved.
  56:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2017-11-17:
  57:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - Added tx_irqn and rx_irqn to I2C_MASTER_CONFIG_t
  58:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 2017-12-20:
  59:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     - Added I2C_MASTER_FlushTxFifo(), I2C_MASTER_FlushRxFifo(), I2C_MASTER_DisableOutputs(), I2C
  60:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  61:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcond
  62:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
  63:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
  64:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  65:../Dave/Generated/I2C_MASTER/i2c_master.h **** #ifndef I2C_MASTER_H
  66:../Dave/Generated/I2C_MASTER/i2c_master.h **** #define I2C_MASTER_H
  67:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  68:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  69:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  70:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**************************************************************************************************
  71:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * HEADER FILES
  72:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
  73:../Dave/Generated/I2C_MASTER/i2c_master.h **** #include <xmc_gpio.h>
  74:../Dave/Generated/I2C_MASTER/i2c_master.h **** #include <xmc_i2c.h>
  75:../Dave/Generated/I2C_MASTER/i2c_master.h **** #include "i2c_master_conf.h"
  76:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  77:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if(UC_FAMILY == XMC4)
  78:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
  79:../Dave/Generated/I2C_MASTER/i2c_master.h **** #include "GLOBAL_DMA/global_dma.h"
  80:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
  81:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
  82:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  83:../Dave/Generated/I2C_MASTER/i2c_master.h **** #include <DAVE_Common.h>
  84:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  85:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  86:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef void(*i2c_master_fptr_cbhandler)(void);
  87:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  88:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**************************************************************************************************
  89:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * MACROS
  90:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
  91:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  92:../Dave/Generated/I2C_MASTER/i2c_master.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  93:../Dave/Generated/I2C_MASTER/i2c_master.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  94:../Dave/Generated/I2C_MASTER/i2c_master.h **** #error "I2C_MASTER requires XMC Peripheral Library v2.0.0 or higher"
  95:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
  96:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
  97:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**************************************************************************************************
  98:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * ENUMS
  99:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
 100:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 101:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @ingroup I2C_MASTER_enumerations
 102:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @{
 103:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 104:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 105:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Initialization status.
 106:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 107:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef enum I2C_MASTER_STATUS
 108:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 109:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_STATUS_SUCCESS = 0U,           /*!< I2C_MASTER SUCCESS */
 110:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_STATUS_FAILURE = 1U,           /*!< I2C_MASTER FAILURE */
 111:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_STATUS_BUSY = 2U,              /*!< I2C_MASTER BUSY */
 112:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_STATUS_UNSUPPORTED_MODE = 3U   /*!< I2C_MASTER UNSUPPORTED MODE */
 113:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_STATUS_t;
 114:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 115:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 116:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Direction
 117:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 118:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef enum I2C_MASTER_DIRECTION
 119:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 120:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_DIRECTION_TRANSMIT = 0U,   /*!< Direction indicates transmit */
 121:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_DIRECTION_RECEIVE = 1U     /*!< Direction indicates receive */
 122:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_DIRECTION_t;
 123:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 124:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 125:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Enum used to identify the transfer type used for either transmit or receive function.
 126:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 127:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef enum I2C_MASTER_TRANSFER_MODE
 128:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 129:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_INTERRUPT,  /**< Implement data transmit or receive using interrupts */
 130:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DMA,        /**< Implement data transmit or receive using DMA */
 131:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DIRECT      /**< This configuration exposes signals for external APP con
 132:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_TRANSFER_MODE_t;
 133:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 134:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @}
 135:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 136:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**************************************************************************************************
 137:../Dave/Generated/I2C_MASTER/i2c_master.h **** * DATA STRUCTURES
 138:../Dave/Generated/I2C_MASTER/i2c_master.h **** ***************************************************************************************************
 139:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 140:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 141:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @ingroup I2C_MASTER_datastructures
 142:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @{
 143:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 144:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 145:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Structure for DMA configuration.
 146:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 147:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
 148:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef struct I2C_MASTER_DMA_CONFIG
 149:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 150:../Dave/Generated/I2C_MASTER/i2c_master.h ****   const XMC_DMA_CH_CONFIG_t * dma_ch_config;   /**< Pointer to the DMA channel configuration.*/
 151:../Dave/Generated/I2C_MASTER/i2c_master.h ****   GLOBAL_DMA_t * global_dma;                   /**< Global DMA handle */
 152:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint8_t dma_channel;                         /**< DMA channel number */
 153:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_DMA_CONFIG_t;
 154:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 155:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 156:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Constant structure for holding the configuration parameters of I2C channel.
 157:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 158:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef struct I2C_MASTER_CONFIG
 159:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 160:../Dave/Generated/I2C_MASTER/i2c_master.h ****    const XMC_I2C_CH_CONFIG_t *brg_config;             /*!< Basic I2C configuration from the GUI wit
 161:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
 162:../Dave/Generated/I2C_MASTER/i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const transmit_dma_config; /**< Pointer to the DMA channel confi
 163:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                                    data transmission.*/
 164:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 165:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 166:../Dave/Generated/I2C_MASTER/i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const receive_dma_config;  /**< Pointer to the DMA channel confi
 167:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                                    data reception.*/
 168:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 169:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_config;         /*!< Function pointer to configure the MUX va
 170:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_enable_io;      /*!< Function pointer to enable SDA/SCL outpu
 171:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_disable_io;     /*!< Function pointer to disable SDA/SCL outp
 172:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 173:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler tx_cbhandler;            /*!< Function pointer to hold the callback fu
 174:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            called when the transmission is complete
 175:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler rx_cbhandler;            /*!< Function pointer to hold the callback fu
 176:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            called when the reception is complete*/
 177:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler nack_cbhandler;          /*!< Function pointer to hold the callback fu
 178:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            called when nack is received*/
 179:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler arbitration_cbhandler;   /*!< Function pointer to hold the callback fu
 180:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            called when arbitration lost is occured*
 181:../Dave/Generated/I2C_MASTER/i2c_master.h ****    i2c_master_fptr_cbhandler error_cbhandler;         /*!< Function pointer to hold the callback fu
 182:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            called when error is detected.*/
 183:../Dave/Generated/I2C_MASTER/i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t transmit_mode;          /**< Mode used for transmitting data. Data ca
 184:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 185:../Dave/Generated/I2C_MASTER/i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t receive_mode;           /**< Mode used for receiving data. Data can b
 186:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 187:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 188:../Dave/Generated/I2C_MASTER/i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t txFIFO_size;               /*!< TxFIFO size configuration*/
 189:../Dave/Generated/I2C_MASTER/i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t rxFIFO_size;               /*!< RxFIFO size configuration*/
 190:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 191:../Dave/Generated/I2C_MASTER/i2c_master.h ****    IRQn_Type tx_irqn;
 192:../Dave/Generated/I2C_MASTER/i2c_master.h ****    IRQn_Type rx_irqn; 
 193:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_CONFIG_t;
 194:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 195:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 196:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Structure to hold the dynamic variables for the I2C_MASTER communication.
 197:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 198:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef struct I2C_MASTER_RUNTIME
 199:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 200:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint8_t * tx_data;                     /*!< Pointer to the transmit data buffer*/
 201:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint8_t * rx_data;                     /*!< Pointer to the receive data buffer*/
 202:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t tx_data_count;                /*!< Number of bytes of data to be transmitted*/
 203:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile uint32_t tx_data_index;       /*!< Index to the byte to be transmitted next in the tx_da
 204:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t rx_data_count;                /*!< Number of bytes of data to be received*/
 205:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 206:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t rx_dma_data_count;            /*!< Number of bytes of data to be received-DMA mode*/
 207:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t rx_dma_data_index;            /*!< Index of bytes of data to be received-DMA mode*/
 208:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 209:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile uint32_t rx_data_index;       /*!< Indicates the number of bytes currently available in 
 210:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile uint32_t direction;           /*!< Indicates TRANSMIT/RECEIVE */
 211:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t send_stop;                    /*!< Indicates to stop the I2C */
 212:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint32_t send_nack;                    /*!< Indicates to send nack */
 213:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint8_t tx_ack_sr;                         /*!< Service request number assigned to transmit inter
 214:../Dave/Generated/I2C_MASTER/i2c_master.h ****   uint8_t rx_sr;                         /*!< Service request number assigned to receive interrupts
 215:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile bool tx_busy;                 /*!< Status flag to indicate busy when a transmission is a
 216:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile bool rx_busy;                 /*!< Status flag to indicate busy when a reception is assi
 217:../Dave/Generated/I2C_MASTER/i2c_master.h ****   volatile bool bus_acquired;            /*!< flag to indicate whether bus is acquired or not */
 218:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_RUNTIME_t;
 219:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 220:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 221:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 222:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Handler structure with pointers to dynamic and static parameters.
 223:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 224:../Dave/Generated/I2C_MASTER/i2c_master.h **** typedef struct I2C_MASTER
 225:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 226:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_USIC_CH_t *channel;                    /*!< USIC channel*/
 227:../Dave/Generated/I2C_MASTER/i2c_master.h ****   const I2C_MASTER_CONFIG_t * const config;  /*!< I2C configuration structure pointer*/
 228:../Dave/Generated/I2C_MASTER/i2c_master.h ****   I2C_MASTER_RUNTIME_t * const runtime;      /*!< Pointer to the structure holding all variables,
 229:../Dave/Generated/I2C_MASTER/i2c_master.h ****    	                                               that can change at runtime*/
 230:../Dave/Generated/I2C_MASTER/i2c_master.h **** } I2C_MASTER_t;
 231:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 232:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 233:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @}
 234:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 235:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 236:../Dave/Generated/I2C_MASTER/i2c_master.h **** #ifdef __cplusplus
 237:../Dave/Generated/I2C_MASTER/i2c_master.h **** extern "C" {
 238:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 239:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 240:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 241:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 242:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @ingroup I2C_MASTER_apidoc
 243:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @{
 244:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 245:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 246:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**************************************************************************************************
 247:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * API PROTOTYPES
 248:../Dave/Generated/I2C_MASTER/i2c_master.h ****  **************************************************************************************************
 249:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 250:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Get I2C_MASTER APP version.
 251:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return \a DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 252:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 253:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description: </b><br>
 254:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * The function can be used to check application software compatibility with a
 255:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * specific version of the APP.
 256:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 257:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 258:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 259:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 260:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 261:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 262:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_APP_VERSION_t version;
 263:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_Init();
 264:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    version = I2C_MASTER_GetAppVersion();
 265:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(version.major != 4U)
 266:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 267:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 268:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 269:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {}
 270:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 0;
 271:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 272:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 273:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 274:../Dave/Generated/I2C_MASTER/i2c_master.h **** DAVE_APP_VERSION_t I2C_MASTER_GetAppVersion(void);
 275:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 276:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief This function initializes the I2C_MASTER APP based on user provided configuration.
 277:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 278:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
 279:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 280:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description: </b><br>
 281:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * I2C configurations like channel selection,baud rate setting,
 282:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * FIFO configuration etc are done in this API.
 283:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Protocol specific interrupts can also be enabled using the I2C_MASTER_Init
 284:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * function.
 285:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 286:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 287:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 288:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 289:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 290:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 291:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 292:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   // Initializing the modules and the multiplexer
 293:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   DAVE_Init(); // I2C_MASTER_Init will be called from DAVE_Init()
 294:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   while(1)
 295:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {}
 296:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 0;
 297:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 298:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 299:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 300:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 301:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 302:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Init(const I2C_MASTER_t *const handle);
 303:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 304:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 305:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 306:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief  Receives the data from I2C slave device.
 307:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 308:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_start Flag to indicate that the start condition need to be send.
 309:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  address I2C slave device address.
 310:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  data buffer to receive data.
 311:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  count The number of bytes to be received from slave.
 312:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 313:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_nack The flag to indicate that the NACK condition need to be send for the last byte
 314:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 315:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>
 316:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * I2C_MASTER_Receive API can be used in Interrupt and Direct modes.\n
 317:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 318:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 319:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 320:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).\n
 321:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 322:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 323:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 324:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 325:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 326:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 327:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define BYTES_TO_READ 10
 328:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define BYTES_TO_TRANSMIT 10
 329:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 330:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 331:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 332:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 333:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 334:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 335:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  } PCA9502_REGADDR_t;
 336:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 337:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
 338:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t data = 0x55;
 339:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t rx_data;
 340:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 341:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 342:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 343:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   DAVE_STATUS_t init_status;  
 344:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   init_status = DAVE_Init();
 345:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 346:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {
 347:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     mem_address[0] = IO_STATE;//memory which need to be read from slave
 348:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     //Write data to IO EXPANDER
 349:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 350:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 351:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 352:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,&data,1,true);
 353:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 354:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 355:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     //Read data from IO EXPANDER
 356:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 357:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 358:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 359:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0,true,SLAVE_ADDRESS,&rx_data,1,true,true);
 360:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 361:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
 362:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   while(1)
 363:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   { }
 364:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  return 0;
 365:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
 366:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 367:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 368:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 369:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 370:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Receive(I2C_MASTER_t *handle, bool send_start, const uint32_t addres
 371:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                        uint8_t * data, const uint32_t count, bool send_stop, bool s
 372:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 373:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 374:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Transmits data to I2C slave device.
 375:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 376:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 377:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_start The flag to indicate that the start condition need to be send.
 378:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  address I2C slave device address.
 379:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  data buffer containing the data to transmit.
 380:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  size The number of bytes to be send to slave.
 381:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 382:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 383:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 384:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>
 385:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * I2C_MASTER_Transmit API can be used in Interrupt and Direct modes.\n
 386:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 387:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 388:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 389:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write). \n
 390:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 391:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 
 392:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 393:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 394:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 395:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 396:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 397:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 398:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 399:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 400:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 401:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  } PCA9502_REGADDR_t;
 402:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 403:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 404:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
 405:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 406:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 407:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 408:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 409:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 410:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 411:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 412:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = IO_STATE;//memory which need to be read from slave
 413:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Write data to IO EXPANDER
 414:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 415:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 416:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 417:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,5,true);
 418:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 419:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 420:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 421:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    { }
 422:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 423:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 0;
 424:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
 425:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 426:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 427:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 428:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 429:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Transmit(I2C_MASTER_t *handle, bool send_start, const uint32_t addre
 430:../Dave/Generated/I2C_MASTER/i2c_master.h **** 		                                uint8_t *data, const uint32_t size, bool send_stop);
 431:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 432:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 433:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Get the I2C flag status.
 434:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 435:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 436:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 437:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *			 	      bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be used to selec
 438:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                    multiple flags.
 439:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 440:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return uint32_t Flag status.
 441:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 442:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 443:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 444:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 445:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 446:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 447:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 448:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 449:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 450:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 451:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 452:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 453:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 454:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 455:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 456:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 457:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
 458:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
 459:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
 460:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 461:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 462:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {}
 463:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 464:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 0;
 465:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 466:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 467:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 468:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 469:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 470:../Dave/Generated/I2C_MASTER/i2c_master.h **** uint32_t I2C_MASTER_GetFlagStatus(const I2C_MASTER_t *handle, uint32_t flagtype);
 471:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 472:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 473:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Clear the I2C flag status.
 474:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 475:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 476:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 477:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                    The bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be 
 478:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                    multiple flags.
 479:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 480:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None <BR>
 481:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 482:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 483:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 484:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 485:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 486:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 487:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 488:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 489:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 490:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 491:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 492:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 493:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 494:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 495:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 496:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
 497:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
 498:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
 499:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 500:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 501:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 502:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {}
 503:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 504:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 0;
 505:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
 506:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 507:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 508:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 509:../Dave/Generated/I2C_MASTER/i2c_master.h **** void I2C_MASTER_ClearFlag(const I2C_MASTER_t *handle, uint32_t flagtype);
 510:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 511:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 512:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Aborts the ongoing data transmission.
 513:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 514:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 515:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 516:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 517:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If there is a transmission in progress, it will be stopped. Once the transmission is stopped, 
 518:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * user can start a new transmission without delay.
 519:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 520:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 521:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 522:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 523:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 524:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 525:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 526:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 527:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 528:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t tx_buf[50] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
 529:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 530:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 531:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 532:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 533:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 534:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 535:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 536:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 537:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_AbortTransmit(&I2C_MASTER_0);
 538:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
 539:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 540:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 541:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 542:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1U)
 543:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 544:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 545:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 546:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
 547:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 548:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 549:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
 550:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 551:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 552:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortTransmit(const I2C_MASTER_t *const handle);
 553:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 554:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 555:../Dave/Generated/I2C_MASTER/i2c_master.h **** * @brief Stops the active data reception request.
 556:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 557:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 558:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 559:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 560:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If a reception is in progress, it will be stopped. When a reception request
 561:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * is active, user will not be able to place a new receive request till the active
 562:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * reception is complete. This API can stop the progressing reception to make
 563:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * a new receive request.
 564:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 565:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 566:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 567:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 568:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 569:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 570:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 571:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 572:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 573:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 574:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   uint8_t rx_buf[25];
 575:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   uint8_t tx_buf[2];
 576:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   DAVE_STATUS_t init_status;
 577:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   init_status = DAVE_Init();
 578:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 579:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {
 580:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     //send the address from which data to be transfered
 581:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     tx_buf[0] = 0;
 582:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 583:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 584:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 585:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_AbortReceive(&I2C_MASTER_0);
 586:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_SendStop(&I2C_MASTER_0);
 587:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 588:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 589:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 590:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 591:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
 592:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   while(1U)
 593:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {
 594:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
 595:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 596:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 1U;
 597:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
 598:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 599:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
 600:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 601:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 602:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortReceive(const I2C_MASTER_t *const handle);
 603:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 604:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 605:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1U) || defined(DOXYGEN)
 606:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 607:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Registers a request for transmitting data over I2C channel using DMA.
 608:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 609:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 610:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  block_size size of the block
 611:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  addr    address\n
 612:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 613:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 614:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 615:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 616:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 617:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 618:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 619:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * request is registered.
 620:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 621:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 622:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * The data transmission is accomplished using DMA. User can configure a callback function in the A
 623:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. The function uses AP
 624:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * structure to store the status of transmission.
 625:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * This function only registers a data transmission request, if there is no active transmission in 
 626:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Actual data transmission happens through DMA channel.
 627:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * A maximum of 4095 bytes can be transmitted in one API call. This limit is because of the DMA sin
 628:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Callback function is executed when all the data bytes are transmitted.
 629:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 630:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 631:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * the completion of data transmission.
 632:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If data more than the block size of 4095 have to be transmitted, user will have to transmit them
 633:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * calls to this API.
 634:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>
 635:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * I2C_MASTER_StartTransmitDMA API can be used in DMA mode.
 636:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Transmit should be configured as "DMA" mode in advanced settings tab. \n
 637:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 638:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 639:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 640:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 641:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 642:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 643:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 644:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 645:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 646:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 647:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
 648:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 649:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 650:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 651:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 652:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 653:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 654:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 655:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 656:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 657:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    {
 658:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	      // wait for ACK
 659:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    }
 660:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 661:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
 662:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 663:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 664:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    {
 665:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	      // wait for ACK
 666:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    }
 667:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 668:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // trigger the DMA
 669:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitDMA(&I2C_MASTER_0, sizeof(Send_Data), Send_Data);
 670:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 671:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 672:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
 673:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 674:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 675:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
 676:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
 677:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
 678:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 679:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
 680:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
 681:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
 682:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 683:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 684:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitDMA(const I2C_MASTER_t *const handle, uint32_t block_si
 685:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 686:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 687:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1U) || defined(DOXYGEN)
 688:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 689:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel using DMA.
 690:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 691:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 692:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 693:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param block_size  size of the block
 694:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  addr  address \n
 695:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 696:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 697:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 698:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 699:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 700:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 701:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 702:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 703:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * configured callback function will be executed.
 704:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * This function only registers a request to receive a number of data bytes from a USIC channel.
 705:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * When all the requested number of data bytes are received, the configured callback function will 
 706:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If a callback function is not configured, the user has to poll for the value of the variable, \a
 707:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * handle->runtime->rx_busy to be false. The value is updated to \a false when all the requested nu
 708:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * are received.
 709:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * A maximum of 4095 bytes can be received in one API call. This limit is because of the DMA single
 710:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 711:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveDMA API can be used only in DMA mode
 712:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Receive should be configured as "DMA" mode in advanced settings tab \n
 713:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 714:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 715:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 716:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 717:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 718:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 719:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 720:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 721:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 722:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 723:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  //Pre condition:
 724:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  //Transmit mode and receive mode should be configured to "DMA" in advanced settings tab
 725:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 726:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t ReadData[256];
 727:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 728:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 729:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 730:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 731:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 732:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 733:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 734:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 735:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 736:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    {
 737:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	      // wait for ACK
 738:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    }
 739:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 740:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
 741:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 742:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 743:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    {
 744:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	      // wait for ACK
 745:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    }
 746:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 747:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
 748:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 749:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    {
 750:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	      // wait for ACK
 751:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *	    }
 752:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 753:../Dave/Generated/I2C_MASTER/i2c_master.h ****  
 754:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartReceiveDMA(&I2C_MASTER_0, 200, ReadData);
 755:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 756:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 757:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
 758:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 759:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 760:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
 761:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
 762:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
 763:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 764:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
 765:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 766:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  @endcode
 767:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 768:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 769:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveDMA(const I2C_MASTER_t *const handle, uint32_t block_siz
 770:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 771:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 772:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1U)
 773:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 774:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Registers a request for transmitting data over I2C_MASTER channel.
 775:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 776:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 777:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_start flag to indicate the start condition
 778:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  address slave address
 779:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  data    pointer to buffer
 780:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  size    number of bytes
 781:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_stop flag to indicate the stop condition\n
 782:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum supported by uint32_t.
 783:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 784:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 785:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 786:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 787:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 788:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 789:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * request is registered.
 790:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 791:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 792:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * The data transmission is accomplished using transmit interrupt. User can configure a callback fu
 793:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. If transmit FIFO is 
 794:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * the trigger limit is set to 1. So the transmit interrupt will be generated when all the data in 
 795:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * from FIFO. The function uses APP handle's runtime structure to store the data pointer, count, da
 796:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * status of transmission. This function only registers a data transmission request if there is no 
 797:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * in progress.
 798:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Actual data transmission happens in the transmit interrupt service routine. A trigger is generat
 799:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * interrupt to start loading the data. If transmit FIFO is configured, the data is filled into the
 800:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Transmit interrupt will be generated next time when the transmit FIFO is empty. At this point of
 801:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * some more data to be transmitted, it is loaded to the FIFO again. When FIFO is not enabled, data
 802:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * byte at a time. On transmission of each byte an interrupt is generated and the next byte is tran
 803:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * interrupt service routine. Callback function is executed when all the data bytes are transmitted
 804:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of t
 805:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * structure( \a handle->runtime->tx_busy ) to check for the completion of data transmission.<br>
 806:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartTransmitIRQ API can be used only in Interrupt mode.
 807:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Transmit should be configured as "Interrupt" mode in advanced settings tab.\n
 808:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 809:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 810:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 811:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).
 812:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 813:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 814:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 815:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 816:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 817:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 818:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
 819:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 820:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 821:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 822:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 823:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 824:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 825:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 826:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 827:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Write data to IO EXPANDER
 828:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 829:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 830:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 831:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,64,true);
 832:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 833:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 834:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 835:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    { }
 836:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 837:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 0;
 838:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 839:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 840:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 841:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 842:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 843:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 844:../Dave/Generated/I2C_MASTER/i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 845:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                 uint8_t *data, const uint32_t size, bool send_stop)
 846:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 847:../Dave/Generated/I2C_MASTER/i2c_master.h **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1U)
 848:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 849:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel.
 850:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 851:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 852:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 853:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_start flag to indicate the start condition
 854:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  address slave address
 855:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  data    pointer to buffer
 856:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  count    number of bytes
 857:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_stop flag to indicate the stop condition
 858:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  send_nack flag to indicate the nack condition\n
 859:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum value supported by type uint32_t.
 860:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 861:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 862:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 863:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 864:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 865:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 866:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 867:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 868:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * configured callback function will be executed. Based on the UI configuration, either standard re
 869:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * receive FIFO is used for data reception. An interrupt is configured for reading received data fr
 870:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * function only registers a request to receive a number of data bytes from a USIC channel. If FIFO
 871:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * reception, the FIFO limit is dynamically configured to optimally utilize the CPU load.  When all
 872:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * of data bytes are received, the configured callback function will be executed. If a callback fun
 873:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * configured, the user has to poll for the value of the variable, \a handle->runtime->rx_busy to b
 874:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * is updated to \a false when all the requested number of data bytes are received.<br>
 875:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveIRQ API can be used only in Interrupt mode.
 876:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Receive should be configured as "Interrupt" mode in advanced settings tab.\n
 877:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 878:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 879:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 880:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).
 881:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 882:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 883:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 884:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
 885:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 886:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t rx_buffer[64];
 887:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
 888:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 889:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 890:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 891:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 892:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 893:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 894:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 895:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 896:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     //Write data to IO EXPANDER
 897:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 898:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 899:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 900:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,rx_buffer,64,true, true);
 901:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 902:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 903:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1)
 904:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    { }
 905:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 0;
 906:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 907:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 908:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode<BR> </p>
 909:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 910:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 911:../Dave/Generated/I2C_MASTER/i2c_master.h ****  I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 912:../Dave/Generated/I2C_MASTER/i2c_master.h ****                                                uint8_t * data, const uint32_t count, bool send_stop
 913:../Dave/Generated/I2C_MASTER/i2c_master.h **** #endif
 914:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 915:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 916:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 917:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Gets the transmit FIFO event flags.
 918:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 919:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 920:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 921:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return uint32_t: Status of the STBI and TBERI bits in TRBSR register in
 922:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                      their bit positions.\n
 923:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                      \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t for the bitmask of event
 924:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 925:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 926:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Function reads the value of TRBSR register. It masks the standard transmit buffer interrupt flag
 927:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * buffer error flag before providing the value.
 928:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * User has to mask the bits of interest before checking the status.
 929:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>: Enable transmit fifo in Advanced settings tab. <br>
 930:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 931:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 932:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 933:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 934:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 935:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 936:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
 937:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 938:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 939:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 940:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
 941:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 942:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 943:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 944:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
 945:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
 946:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 947:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 948:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
 949:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
 950:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
 951:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
 952:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
 953:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 954:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
 955:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
 956:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 957:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
 958:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
 959:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
 960:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
 961:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
 962:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
 963:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
 964:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 965:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
 966:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetTXFIFOStatus(const I2C_MASTER_t* const handle)
 967:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
 968:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetTXFIFOStatus: invalid handle", (handle != NULL))
 969:../Dave/Generated/I2C_MASTER/i2c_master.h ****   return XMC_USIC_CH_TXFIFO_GetEvent(handle->channel);
 970:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 971:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
 972:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
 973:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Configures trigger limit for the transmit FIFO.
 974:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 975:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 976:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  size   FIFO size
 977:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  limit Value of transmit FIFO filling level, transition below which the interrupt should 
 978:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               \bRange: 0 to transmit FIFO size.\n
 979:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               e.g, If transmit FIFO size is 16, and limit is configured as 8, FIFO standard tran
 980:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               will be generated when the FIFO filling level drops from 8 to 7.\n
 981:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 982:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None\n
 983:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 984:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
 985:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Transmit FIFO trigger limit is configured by setting its value in the TBCTR register.
 986:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Transmit FIFO is configured to generate interrupt when the FIFO filling level drops
 987:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * below the trigger limit.
 988:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 989:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
 990:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
 991:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 992:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 993:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
 994:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 995:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
 996:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
 997:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
 998:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
 999:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1000:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1001:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1002:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1003:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Configure transmit fifo trigger limit, draining level as 10
1004:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1005:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // Execution will happen two times in the interrupt handler as the limit is set to 10
1006:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, Send_Data, 16, true);
1007:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1008:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1009:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1010:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1011:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1012:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1013:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1014:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1015:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1016:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1017:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1018:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1019:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1020:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1021:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetTXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1022:../Dave/Generated/I2C_MASTER/i2c_master.h **** 		                                              const uint32_t limit)
1023:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1024:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetTXFIFOTriggerLimit: invalid handle", (handle != NULL))
1025:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
1026:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1027:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1028:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Configures trigger limit for the receive FIFO.
1029:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1030:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1031:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  size   FIFO size
1032:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  limit Value of receive FIFO filling level, transition above which the interrupt should b
1033:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               \bRange: 0 to receive FIFO size.\n
1034:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               e.g, If receive FIFO size is 16, and limit is configured as 8, FIFO receive buffer
1035:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *               will be generated when the FIFO filling level rises from 8 to 9.\n
1036:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1037:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None\n
1038:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1039:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1040:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Receive FIFO trigger limit is configured by setting its value in the RBCTR register.
1041:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Receive FIFO is configured to generate interrupt when the FIFO filling level rises
1042:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * above the trigger limit.
1043:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1044:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1045:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1046:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1047:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1048:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1049:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1050:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1051:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t Rx_Data[256];
1052:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1053:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1054:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1055:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1056:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1057:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1058:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1059:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Configure receive fifo trigger limit to filling level as 10
1060:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1061:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // Execution will happen two times in the receive interrupt handler as the limit is set to 
1062:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, Rx_Data, 16, true, true);
1063:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
1064:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1065:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1066:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1067:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1068:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1069:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1070:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1071:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1072:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1073:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1074:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1075:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1076:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1077:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetRXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1078:../Dave/Generated/I2C_MASTER/i2c_master.h **** 		                                              const uint32_t limit)
1079:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1080:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetRXFIFOTriggerLimit: invalid handle", (handle != NULL))
1081:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
  77              	 .loc 2 1081 0
  78 002e 0068     	 ldr r0,[r0]
  79              	.LVL7:
  80 0030 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
  81              	.LVL8:
  82              	.LBE191:
  83              	.LBE190:
1162:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
  84              	 .loc 1 1162 0
  85              	 
  86              	.LVL9:
  87 0034 38BD     	 pop {r3,r4,r5,pc}
  88              	 .cfi_endproc
  89              	.LFE175:
  91              	 .section .text.I2C_MASTER_lSendStop_JumpTo_TxCallback,"ax",%progbits
  92              	 .align 1
  93              	 .code 16
  94              	 .thumb_func
  96              	I2C_MASTER_lSendStop_JumpTo_TxCallback:
  97              	.LFB163:
 432:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
  98              	 .loc 1 432 0
  99              	 .cfi_startproc
 100              	.LVL10:
 101              	.LBB200:
 102              	.LBB201:
1082:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1083:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1084:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1085:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Checks if the transmit FIFO is full.
1086:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1087:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1088:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1089:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return bool Status of transmit FIFO filling level.
1090:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *              \bRange: \atrue- if transmit FIFO is full.<br>
1091:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                       \afalse- if transmit FIFO is not full.<br>
1092:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1093:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while filling
1094:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * data to the transmit FIFO.
1095:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>NOTE: </b><br>: Transmit should be "Direct" mode in advanced settings tab.<br>
1096:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1097:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1098:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1099:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1100:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1101:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1102:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1103:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1104:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t send_data[] = "Infineon Technologies";
1105:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1106:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1107:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t status;
1108:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    status = DAVE_Init();           // Initialization of DAVE APPs
1109:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1110:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1111:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1112:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1113:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1114:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1115:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1116:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1117:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1118:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &send_data[0], 10, false);
1119:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  //Wait when Tx FIFO is full
1120:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  while(!I2C_MASTER_IsTXFIFOFull(&I2C_MASTER_0))
1121:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1122:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_Transmit(&I2C_MASTER_0, false, SLAVE_ADDRESS, &send_data[0], 10, false);
1123:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1124:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  while(1U)
1125:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1126:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1127:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * }
1128:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1129:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1130:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsTXFIFOFull(const I2C_MASTER_t* const handle)
1131:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1132:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsTXFIFOFull: invalid handle", (handle != NULL))
1133:../Dave/Generated/I2C_MASTER/i2c_master.h ****   return XMC_USIC_CH_TXFIFO_IsFull(handle->channel);
1134:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1135:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1136:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1137:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Checks if the receive FIFO is empty.
1138:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1139:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1140:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1141:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return bool Status of receive FIFO filling level.
1142:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *              \bRange: \atrue- if receive FIFO is empty.<br>
1143:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *                       \afalse- if receive FIFO still has data.<br>
1144:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1145:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while reading data from the receive FIFO
1146:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1147:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1148:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1149:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1150:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1151:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1152:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1153:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1154:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1155:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t rec_data[64];
1156:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1157:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1158:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1159:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1160:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1161:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1162:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1163:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1164:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1165:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1166:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
1167:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1168:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1169:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1170:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1171:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1172:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1173:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1174:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1175:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1176:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1177:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1178:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1179:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(index < 16)
1180:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1181:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1182:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        index++;
1183:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1184:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait when Rx FIFO is empty
1185:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1186:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1187:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1188:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1189:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1190:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   while(1U)
1191:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {
1192:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
1193:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1194:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1195:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1196:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsRXFIFOEmpty(const I2C_MASTER_t* const handle)
1197:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1198:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsRXFIFOEmpty: invalid handle", (handle != NULL))
1199:../Dave/Generated/I2C_MASTER/i2c_master.h ****   return XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel);
1200:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1201:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1202:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1203:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Gets the status of event flags related to receive FIFO.
1204:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1205:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1206:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1207:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1208:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return uint32_t: Status of standard receive buffer event, alternative receive buffer event and 
1209:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * error event in their bit positions in TRBSR register.\n
1210:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for event bitmasks. Multiple events' status c
1211:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * comparison using \a OR operation.
1212:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1213:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1214:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * It provides the status of standard receive buffer event, alternative receive buffer event and re
1215:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * event.
1216:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Function masks the TRBSR register with the bitmask of SRBI, ARBI and RBERI flags. User has to ma
1217:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * interest before checking the status.
1218:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1219:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1220:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1221:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1222:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1223:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   #define SLAVE_ADDRESS 0xA0
1224:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   uint8_t mem_address[2];
1225:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   int main(void)
1226:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   {
1227:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     DAVE_STATUS_t init_status;
1228:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1229:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     init_status = DAVE_Init();
1230:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     if(init_status == DAVE_STATUS_SUCCESS)
1231:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     {
1232:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       mem_address[0] = 0x00;//memory which need to be read from slave
1233:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       //Configure receive fifo trigger limit as 10
1234:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1235:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1236:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1237:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1238:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1239:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0
1240:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1241:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1242:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     }
1243:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     else
1244:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     {
1245:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1246:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1247:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1248:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1249:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     }
1250:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      return 1U;
1251:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
1252:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1253:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1254:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1255:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetRXFIFOStatus(const I2C_MASTER_t* const handle)
1256:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1257:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetRXFIFOStatus: invalid handle", (handle != NULL))
1258:../Dave/Generated/I2C_MASTER/i2c_master.h ****   return XMC_USIC_CH_RXFIFO_GetEvent(handle->channel);
1259:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1260:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1261:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1262:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to
1263:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * transmit FIFO.
1264:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1265:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1266:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1267:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  flag Value with event bits at their bit positions in TRBSR register to be cleared.\n
1268:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t. Multiple events can be combined 
1269:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *             \a OR operation.
1270:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1271:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return    None
1272:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1273:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1274:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Function clears a status bit in TRBSR register using the TRBSCR register. But the function does 
1275:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * value with the bit positions restricted to transmit FIFO status bits. User should ensure that th
1276:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * appropriately masked.
1277:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1278:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1279:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1280:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1281:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1282:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1283:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
1284:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1285:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1286:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1287:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1288:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1289:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1290:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1291:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = 0x00; //memory which need to be read from slave
1292:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
1293:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1294:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1295:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1296:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
1297:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1298:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
1299:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
1300:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
1301:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1302:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1303:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1304:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1305:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1306:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1307:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1308:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1309:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1310:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1311:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1312:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1313:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1314:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearTXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1315:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1316:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearTXFIFOStatus: invalid handle", (handle != NULL))
1317:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_USIC_CH_TXFIFO_ClearEvent(handle->channel, flag);
1318:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1319:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1320:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1321:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to receive FIFO. It should be used 
1322:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * of standard receive buffer interrupt, alternative receive buffer interrupt and receive buffer er
1323:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1324:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1325:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1326:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  flag Value with event bits at the bit positions in TRBSR register to be cleared.\n
1327:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for providing events.
1328:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *             Multiple events can be input by using \a OR operation.
1329:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1330:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return    None
1331:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1332:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1333:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Function clears a status bit in TRBSR using the TRBSCR register.
1334:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * The function does not mask the input value to clear only receive buffer
1335:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * events. So user should appropriately mask the input value before calling
1336:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * the function.
1337:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1338:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1339:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1340:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1341:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1342:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1343:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  uint8_t mem_address[2];
1344:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1345:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1346:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1347:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1348:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1349:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1350:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1351:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
1352:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Configure receive fifo trigger limit as 10
1353:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1354:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1355:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1356:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1357:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1358:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0)
1359:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1360:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1361:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1362:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1363:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1364:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1365:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1366:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1367:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1368:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1369:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1370:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1371:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1372:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1373:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1374:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearRXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1375:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1376:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearRXFIFOStatus: invalid handle", (handle != NULL))
1377:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_USIC_CH_RXFIFO_ClearEvent(handle->channel, flag);
1378:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1379:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1380:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1381:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Provides the received data from receive buffer.
1382:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1383:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1384:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return uint8_t: Data read from RBUF.\n
1385:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1386:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1387:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * This can be used in receive mode "Direct" to read the received data.
1388:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * If Rx FIFO is not configured, function reads the value of RBUF register.
1389:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Otherwise it reads the data from OUTR register.
1390:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1391:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1392:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1393:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1394:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1395:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1396:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1397:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1398:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t rec_data[10];
1399:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t index = 0,loc_index = 0;
1400:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1401:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1402:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1403:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1404:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1405:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1406:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1407:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1408:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1409:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1410:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
1411:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1412:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1413:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1414:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1415:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1416:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1417:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1418:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1419:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1420:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        // wait for ACK
1421:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1422:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1423:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(index < 16)
1424:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1425:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1426:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *         index++;
1427:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1428:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait when Rx FIFO is empty
1429:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1430:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1431:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1432:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1433:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1434:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1435:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1436:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1437:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1438:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1439:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1440:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1441:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1442:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1443:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1444:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1445:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1446:../Dave/Generated/I2C_MASTER/i2c_master.h **** /* Wrapper to the LLD API for reading back the value of the RBUF or OUTR register */
1447:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE uint8_t I2C_MASTER_GetReceivedByte(I2C_MASTER_t * const handle)
1448:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1449:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetReceivedByte: invalid handle", (handle != NULL))
1450:../Dave/Generated/I2C_MASTER/i2c_master.h ****   return (uint8_t)XMC_I2C_CH_GetReceivedData(handle->channel);
1451:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1452:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1453:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1454:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Transmits single byte using I2C protocol.
1455:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1456:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1457:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  byte data byte to transmit. \n
1458:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None\n
1459:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 
1460:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1461:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1462:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1463:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1464:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1465:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1466:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1467:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1468:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1469:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t status;
1470:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1471:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    status = DAVE_Init();
1472:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1473:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1474:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1475:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1476:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1477:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1478:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1479:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1480:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1481:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1482:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1483:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1484:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1485:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // wait for ACK
1486:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1487:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1488:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1489:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1490:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1491:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // wait for ACK
1492:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1493:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1494:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1U)
1495:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1496:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1497:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1498:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1499:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1500:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_TransmitByte(I2C_MASTER_t * const handle, uint8_t byte)
1501:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1502:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_TransmitByte: invalid handle", (handle != NULL))
1503:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterTransmit(handle->channel, byte);
1504:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1505:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1506:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Enables the selected protocol events for interrupt generation.
1507:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1508:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1509:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  event  Protocol events to be enabled for interrupt generation. \n
1510:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1511:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *         combined using the bitwise OR operation.\n
1512:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None\n
1513:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1514:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1515:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Enables the events by configuring CCR or PCR register based on the event.
1516:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * When the event is enabled, an interrupt can be generated on occurrence of the event.
1517:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * The API should be used only for \a Direct mode related events. Using this API for non \a Direct 
1518:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * may not yield expected result.
1519:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1520:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1521:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1522:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1523:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1524:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1525:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1526:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1527:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t status;
1528:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1529:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    status = DAVE_Init();
1530:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1531:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1532:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1533:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1534:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1535:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1536:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1537:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1538:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1539:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1540:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_EnableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1541:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1U)
1542:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1543:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1544:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1545:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1546:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1547:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_EnableEvent(I2C_MASTER_t * const handle, uint32_t event)
1548:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1549:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_EnableEvent: invalid handle", (handle != NULL))
1550:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_EnableEvent(handle->channel, event);
1551:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1552:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1553:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Disables selected events from generating interrupt.
1554:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1555:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1556:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param  event  Events to be disabled from generating interrupt. \n
1557:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1558:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *         combined using the bitwise OR operation.\n
1559:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1560:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1561:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1562:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Events are disabled by clearing their respective bits in either CCR, TBCTR or RBCTR.
1563:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1564:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1565:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1566:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1567:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declar
1568:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1569:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1570:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1571:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t status;
1572:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1573:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    status = DAVE_Init();
1574:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1575:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1576:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1577:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1578:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1579:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1580:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1581:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1582:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1583:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1584:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    I2C_MASTER_DisableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1585:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    while(1U)
1586:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1587:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1588:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1589:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1590:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1591:../Dave/Generated/I2C_MASTER/i2c_master.h ****  */
1592:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_DisableEvent(I2C_MASTER_t * const handle, uint32_t event)
1593:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1594:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_DisableEvent: invalid handle", (handle != NULL))
1595:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_DisableEvent(handle->channel, event);
 103              	 .loc 2 1595 0
 104 0000 8021     	 mov r1,#128
 105              	.LBE201:
 106              	.LBE200:
 432:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 107              	 .loc 1 432 0
 108 0002 38B5     	 push {r3,r4,r5,lr}
 109              	.LCFI1:
 110              	 .cfi_def_cfa_offset 16
 111              	 .cfi_offset 3,-16
 112              	 .cfi_offset 4,-12
 113              	 .cfi_offset 5,-8
 114              	 .cfi_offset 14,-4
 435:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 115              	 .loc 1 435 0
 116 0004 8568     	 ldr r5,[r0,#8]
 117              	.LVL11:
 432:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 118              	 .loc 1 432 0
 119 0006 041C     	 mov r4,r0
 120              	.LBB203:
 121              	.LBB202:
 122              	 .loc 2 1595 0
 123 0008 C905     	 lsl r1,r1,#23
 124 000a 0068     	 ldr r0,[r0]
 125              	.LVL12:
 126 000c FFF7FEFF 	 bl XMC_I2C_CH_DisableEvent
 127              	.LVL13:
 128              	.LBE202:
 129              	.LBE203:
 439:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 130              	 .loc 1 439 0
 131 0010 EB69     	 ldr r3,[r5,#28]
 132 0012 012B     	 cmp r3,#1
 133 0014 0AD1     	 bne .L9
 441:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_SendStop(handle);
 134              	 .loc 1 441 0
 135 0016 2B1C     	 mov r3,r5
 136 0018 0022     	 mov r2,#0
 137 001a 2833     	 add r3,r3,#40
 138 001c 2068     	 ldr r0,[r4]
 139              	.LVL14:
 140 001e 1A70     	 strb r2,[r3]
 141              	.LBB204:
 142              	.LBB205:
 143              	.LBB206:
 144              	.LBB207:
 145              	 .file 3 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc/xmc_i2c.h"
   1:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
   2:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @file xmc_i2c.h
   3:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @date 2019-05-07
   4:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   5:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @cond
   6:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  **************************************************************************************************
   7:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
   9:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * All rights reserved.                        
  11:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                             
  12:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * following conditions are met:   
  14:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                                                              
  15:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * disclaimer.                        
  17:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 
  18:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 
  21:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                                                              
  24:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *                                                                              
  32:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  **************************************************************************************************
  35:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  36:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Change History
  37:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * --------------
  38:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  39:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-02-20:
  40:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Initial <br>
  41:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *      
  42:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-05-20:
  43:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Description updated <br>
  44:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_TriggerServiceRequest() and XMC_I2C_CH_SelectInterruptNodePointer() <br>
  45:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  46:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-06-20:
  47:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  49:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-08-27:
  50:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for external input for BRG configuration:XMC_I2C_CH_ConfigExternalInputSignalTo
  51:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  52:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-09-01:
  53:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added APIs for enabling or disabling the ACK response to a 0x00 slave address: XMC_I2C_CH_
  54:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *       XMC_I2C_CH_DisableSlaveAcknowledgeTo00(). <br>
  55:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_SetInputSource() API for avoiding complete DXCR register overwriting. 
  56:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Modified XMC_I2C_CH_EVENT_t enum for supporting XMC_I2C_CH_EnableEvent() and XMC_I2C_CH_Di
  57:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *       for supporting multiple events configuration <br>
  58:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  59:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-02:
  60:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix 10bit addressing
  61:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  62:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2015-10-07:
  63:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Fix register access in XMC_I2C_CH_EnableSlaveAcknowledgeTo00() and XMC_I2C_CH_DisableSlave
  64:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Naming of APIs modified: from XMC_I2C_CH_EnableSlaveAcknowledgeTo00() to  XMC_I2C_CH_Enabl
  65:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *       and from XMC_I2C_CH_DisableSlaveAcknowledgeTo00() to XMC_I2C_CH_DisableAcknowledgeAddress0
  66:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  67:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-05-20:
  68:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableDataTransmission() and XMC_I2C_CH_DisableDataTransmission()
  69:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  70:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2016-08-17:
  71:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Improved documentation of slave address passing
  72:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  73:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2017-10-25:
  74:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_EnableMasterClock() and XMC_I2C_CH_DisableMasterClock()
  75:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  76:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 2019-05-07:
  77:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added normal_divider_mode to XMC_I2C_CH_CONFIG_t configuration structure.
  78:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *       It selects normal divider mode for baudrate generator instead of default fractional divide
  79:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *     - Added XMC_I2C_CH_SetBaudrateEx()
  80:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  81:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @endcond 
  82:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
  83:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
  84:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
  85:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #ifndef XMC_I2C_H
  86:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_H
  87:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
  88:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
  89:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * HEADER FILES
  90:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
  91:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
  92:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #include "xmc_usic.h"
  93:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
  94:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
  95:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup XMClib XMC Peripheral Library
  96:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
  97:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
  98:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
  99:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 100:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @addtogroup I2C
 101:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief Inter Integrated Circuit(IIC) driver for the XMC microcontroller family. 
 102:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 103:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * USIC IIC Features: <br>
 104:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *  * Two-wire interface, with one line for shift clock transfer and synchronization (shift clock S
 105:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Communication in standard mode (100 kBit/s) or in fast mode (up to 400 kBit/s) <br>
 106:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Support of 7-bit addressing, as well as 10-bit addressing <br>
 107:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Master mode operation, where the IIC controls the bus transactions and provides the clock sign
 108:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Slave mode operation, where an external master controls the bus transactions and provides the 
 109:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Multi-master mode operation, where several masters can be connected to the bus and bus arbitra
 110:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 	  The master/slave operation of an IIC bus participant can change from frame to frame. <br>
 111:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Efficient frame handling (low software effort), also allowing DMA transfers <br>
 112:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *	* Powerful interrupt handling due to multitude of indication flags <br>
 113:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @{
 114:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 115:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 116:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 117:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * MACROS
 118:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 119:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 120:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC0)
 121:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH0 XMC_USIC0_CH0                   /**< USIC0 channel 0 base address */
 122:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C0_CH1 XMC_USIC0_CH1                   /**< USIC0 channel 1 base address */
 123:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 124:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 125:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC1)
 126:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH0 XMC_USIC1_CH0                   /**< USIC1 channel 0 base address */
 127:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C1_CH1 XMC_USIC1_CH1                   /**< USIC1 channel 1 base address */
 128:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 129:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 130:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #if defined(USIC2)
 131:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH0 XMC_USIC2_CH0                   /**< USIC2 channel 0 base address */
 132:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C2_CH1 XMC_USIC2_CH1                   /**< USIC2 channel 1 base address */
 133:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 134:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 135:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #define XMC_I2C_10BIT_ADDR_GROUP       (0x7800U)	 /**< Value to verify the address is 10-bit or not
 136:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 137:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 138:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * ENUMS
 139:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 140:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 141:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 142:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C Status
 143:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 144:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS
 145:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** {
 146:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_OK,      /**< Status OK */
 147:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_ERROR,   /**< Status ERROR */
 148:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_BUSY     /**< Status BUSY */
 149:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_t;
 150:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 151:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 152:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C status
 153:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 154:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_STATUS_FLAG
 155:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** {
 156:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_SELECT = USIC_CH_PSR_IICMode_SLSEL_Msk,                     /**< Sla
 157:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_WRONG_TDF_CODE_FOUND = USIC_CH_PSR_IICMode_WTDF_Msk,              /**< Wro
 158:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_SCR_Msk,           /**< Sta
 159:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_RSCR_Msk, /**< Rep
 160:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED = USIC_CH_PSR_IICMode_PCR_Msk,            /**< Sto
 161:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_NACK_RECEIVED = USIC_CH_PSR_IICMode_NACK_Msk,                     /**< NAC
 162:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST = USIC_CH_PSR_IICMode_ARL_Msk,                   /**< Arb
 163:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_SLAVE_READ_REQUESTED = USIC_CH_PSR_IICMode_SRR_Msk,               /**< Sla
 164:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ERROR = USIC_CH_PSR_IICMode_ERR_Msk,                              /**< Err
 165:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED = USIC_CH_PSR_IICMode_ACK_Msk,                       /**< ACK
 166:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_IICMode_RSIF_Msk,         /**< Rec
 167:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_IICMode_DLIF_Msk,              /**< Dat
 168:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_IICMode_TSIF_Msk,         /**< Tra
 169:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_IICMode_TBIF_Msk,        /**< Tra
 170:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_RIF_Msk,                 /**< Rec
 171:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_IICMode_AIF_Msk,     /**< Alt
 172:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_IICMode_BRGIF_Msk    /**< Bau
 173:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_STATUS_FLAG_t;
 174:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 175:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 176:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C receiver status. The received data byte is available at the bit
 177:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * positions RBUF[7:0], whereas the additional information is monitored at the bit positions
 178:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** *  RBUF[12:8].
 179:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 180:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_RECEIVER_STATUS_FLAG
 181:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** {
 182:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ACK = 0x1U,      /**< Bit 8:  Value of Received Acknowledgement b
 183:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_FIN = 0x2U,      /**< Bit 9:  A 1 at this bit position indicates 
 184:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 followed by the address reception t
 185:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 been received. A 0 at this bit posi
 186:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_MODE = 0x4U,     /**< Bit 10: A 0 at this bit position indicates 
 187:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 when the device has been in slave m
 188:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ERR = 0x8U,      /**< Bit 11: A 1 at this bit position indicates 
 189:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 data byte in the receive buffer */
 190:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_RECEIVER_STATUS_FLAG_ADR = 0x10       /**< Bit 12: A 0 at this bit position indicates 
 191:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****                                                                 has been received. A 1 indicates a 
 192:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_RECEIVER_STATUS_FLAG_t;
 193:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 194:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 195:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C commands
 196:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 197:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_CMD
 198:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** {
 199:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_WRITE,                            /**< I2C Command Write */
 200:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_CMD_READ                              /**< I2C Command Read */
 201:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CMD_t;
 202:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 203:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 204:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C events
 205:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 206:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_EVENT
 207:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** {
 208:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk,  /**< Receive start event */
 209:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk,  /**< Data lost event */
 210:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk,  /**< Transmit shift event */
 211:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk,  /**< Transmit buffer event */
 212:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,   /**< Receive event */
 213:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,   /**< Alternate receive event */
 214:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 215:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 216:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_SCRIEN_Msk,             /**< Star
 217:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_REPEATED_START_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_RSCRIEN_Msk,   /**< Repe
 218:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_STOP_CONDITION_RECEIVED = USIC_CH_PCR_IICMode_PCRIEN_Msk,              /**< Stop
 219:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_NACK = USIC_CH_PCR_IICMode_NACKIEN_Msk,                                /**< NACK
 220:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ARBITRATION_LOST = USIC_CH_PCR_IICMode_ARLIEN_Msk,                     /**< Arbi
 221:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_SLAVE_READ_REQUEST = USIC_CH_PCR_IICMode_SRRIEN_Msk,                   /**< Slav
 222:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ERROR = USIC_CH_PCR_IICMode_ERRIEN_Msk,	                              /**< Error
 223:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_EVENT_ACK = USIC_CH_PCR_IICMode_ACKIEN_Msk                                   /**< ACK 
 224:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_EVENT_t;
 225:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 226:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 227:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C input stage selection
 228:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 229:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INPUT
 230:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** {
 231:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA = 0U,   /**< selection of sda input stage */
 232:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 233:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA1 = 3U,
 234:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SDA2 = 5U,
 235:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #endif  
 236:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL = 1U,  /**< selection of scl input stage */
 237:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #if UC_FAMILY == XMC1
 238:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INPUT_SCL1 = 4U
 239:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #endif  
 240:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INPUT_t;
 241:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 242:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 243:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * I2C channel interrupt node pointers
 244:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 245:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** typedef enum XMC_I2C_CH_INTERRUPT_NODE_POINTER
 246:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** {
 247:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 248:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 249:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 250:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 251:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_I2C_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 252:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_INTERRUPT_NODE_POINTER_t;
 253:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 254:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 255:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * DATA STRUCTURES
 256:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 257:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 258:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @brief I2C_CH configuration structure
 259:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 260:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** typedef struct XMC_I2C_CH_CONFIG
 261:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** {
 262:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   uint32_t baudrate;   /**< baud rate configuration upto max of 400KHz */
 263:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   bool normal_divider_mode; /**< Selects normal divider mode for baudrate generator instead of defa
 264:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   uint16_t address;    /**< slave address 
 265:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 7-bit address needs to be left shifted it by 1.
 266:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****                             A 10-bit address needs to be ORed with XMC_I2C_10BIT_ADDR_GROUP. */
 267:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** } XMC_I2C_CH_CONFIG_t;
 268:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 269:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /*******************************************************************************
 270:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * API PROTOTYPES
 271:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *******************************************************************************/
 272:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 273:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #ifdef __cplusplus
 274:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** extern "C" {
 275:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** #endif
 276:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 277:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 278:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 279:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param config  Constant pointer to I2C channel config structure of type @ref XMC_I2C_CH_CONFIG_t
 280:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 281:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 282:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 283:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 284:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Initializes the I2C \a channel.<br>
 285:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 286:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 287:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Configures the data format in SCTR register. Sets the slave address, baud rate. Enables transmit
 288:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * and disables parity generation.<br>
 289:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 290:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 291:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_Enable()\n\n
 292:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 293:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 294:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_Init(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_CONFIG_t *const config);
 295:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 296:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 297:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 298:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 299:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 300:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 301:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 302:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 303:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 304:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 305:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 306:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 307:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 308:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 309:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 310:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 311:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 312:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 313:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 314:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 315:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param rate  baud rate of I2C channel
 316:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param normal_divider_mode Selects normal divider mode for baudrate generator instead of default
 317:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 318:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 319:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 320:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 321:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the rate of I2C \a channel.
 322:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 323:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 324:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Standard over sampling is considered if rate <= 100KHz and fast over sampling is considered if r
 325:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 326:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 327:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetBaudrate()\n\n
 328:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 329:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, uint32_t rate, bool norm
 330:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 331:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 332:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 333:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 334:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 335:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 336:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 337:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C \a channel.
 338:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 339:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 340:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation mode to I2C mode using CCR register.
 341:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 342:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 343:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 344:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 345:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_Start(XMC_USIC_CH_t *const channel)
 346:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** {
 347:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_I2C);
 348:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** }
 349:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 350:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 351:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 352:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 353:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return @ref XMC_I2C_CH_STATUS_t<br>
 354:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 355:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 356:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C \a channel.<br>
 357:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 358:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 359:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the USIC input operation to IDLE mode using CCR register.
 360:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 361:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 362:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetMode()\n\n
 363:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 364:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** XMC_I2C_CH_STATUS_t XMC_I2C_CH_Stop(XMC_USIC_CH_t *const channel);
 365:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 366:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 367:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 368:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number in the range of 0-5
 369:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 370:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 371:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 372:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for protocol interrupt.<br>
 373:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 374:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 375:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * To generate interrupt for an event, node pointer should be configured with service request numbe
 376:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 377:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 378:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Note:</b><br>
 379:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * NVIC node should be separately enabled to generate the interrupt. After setting the node pointer
 380:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 381:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 382:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent(), NVIC_SetPriority(), NVIC_EnableIRQ(), XMC_I2C_CH_SetInputSource()<br>
 383:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 384:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 385:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****                                                         const uint8_t service_request)
 386:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** {
 387:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL, service
 388:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** }
 389:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 390:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 391:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 392:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 393:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				  \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref XM
 394:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
 395:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: @ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
 396:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  			@ref XMC_I2C_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
 397:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param service_request Service request number.\n
 398:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 						  \b Range: 0 to 5.
 399:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 400:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 401:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 402:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the interrupt node for USIC channel events. \n\n
 403:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
 404:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 405:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 406:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 407:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 408:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent() \n\n\n
 409:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 410:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SelectInterruptNodePointer(XMC_USIC_CH_t *const channel,
 411:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****                                                            const XMC_I2C_CH_INTERRUPT_NODE_POINTER_
 412:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****                                                            const uint32_t service_request)
 413:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** {
 414:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, (XMC_USIC_CH_INTERRUPT_NODE_POINTER_t)interrupt_node
 415:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 		                                       (uint32_t)service_request);
 416:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** }
 417:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 418:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 419:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 420:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 				   \b Range: @ref XMC_I2C0_CH0, @ref XMC_I2C0_CH1,@ref XMC_I2C1_CH0,@ref XMC_I2C1_CH1,@ref X
 421:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param  service_request_line service request number of the event to be triggered. \n
 422:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 			\b Range: 0 to 5.
 423:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None
 424:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 425:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description</b><br>
 426:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Trigger a I2C interrupt service request.\n\n
 427:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * When the I2C service request is triggered, the NVIC interrupt associated with it will be
 428:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * generated if enabled.
 429:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 430:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><BR>
 431:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SelectInterruptNodePointer() \n\n\n
 432:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 433:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t 
 434:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** {
 435:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_TriggerServiceRequest(channel, (uint32_t)service_request_line);
 436:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** }
 437:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 438:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 439:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 440:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param input I2C channel input stage of type @ref XMC_I2C_CH_INPUT_t
 441:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param source Input source select for the input stage(0->DX0A, 1->DX1A, .. 7->DX7G)
 442:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 443:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 444:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 445:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the input source for I2C \a channel.<br>
 446:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Defines the input stage for the corresponding input line.
 447:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 448:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note After configuring the input source for corresponding channel, interrupt node pointer is se
 449:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 450:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 451:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_SetInptSource(), XMC_USIC_CH_SetInterruptNodePointer()
 452:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 453:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 454:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_I2C_CH_INPUT
 455:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** {
 456:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->DXCR[input] =  (uint32_t)(channel->DXCR[input] & (~USIC_CH_DX0CR_INSW_Msk)) | USIC_CH_DX
 457:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   XMC_USIC_CH_SetInputSource(channel, (XMC_USIC_CH_INPUT_t)input, source);
 458:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** }
 459:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 460:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 461:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 462:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param address I2C slave address
 463:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 464:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 465:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 466:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sets the I2C \a channel slave address.<br>
 467:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 468:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 469:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Address is set in PCR_IICMode register by checking if it is in 10-bit address group or 7-bit add
 470:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is 10-bit mode otherwis
 471:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address should include an additional bit at the LSB for read/write indication. For
 472:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. A 10-bit address should be provided with the identifier 0b11110xx at the mo
 473:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * address 0x305 should be provided as 0x7b05(bitwise OR with 0x7800).
 474:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 475:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 476:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetSlaveAddress()\n\n
 477:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 478:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SetSlaveAddress(XMC_USIC_CH_t *const channel, const uint16_t address);
 479:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 480:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 481:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel handler of type @ref XMC_USIC_CH_t
 482:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint16_t Slave address<br>
 483:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 484:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 485:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the I2C \a channel slave address.<br>
 486:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 487:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 488:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Returns the address using PCR_IICMode register by checking if it is in 10-bit address group or 7
 489:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * (If first five bits of address are assigned with 0xF0, then address mode is considered as 10-bit
 490:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note A 7-bit address will include an additional bit at the LSB. For example, address 0x05 will 
 491:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * 10-bit address will not include the 10-bit address identifier 0b11110xx at the most signifcant b
 492:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 493:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 494:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_SetSlaveAddress()\n\n
 495:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 496:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** uint16_t XMC_I2C_CH_GetSlaveAddress(const XMC_USIC_CH_t *const channel);
 497:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 498:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 499:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 500:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 501:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 502:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 503:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 504:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 505:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Starts the I2C master \a channel.<br>
 506:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 507:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 508:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Start condition with read/write command by updating IN/TBUF register based on FIFO/non
 509:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 510:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 511:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 512:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 513:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 514:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 515:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 516:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 517:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2C_CH_CMD
 518:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 519:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 520:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 521:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param addr I2C master address
 522:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param command read/write command
 523:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 524:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 525:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 526:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition from I2C master \a channel.<br>
 527:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 528:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 529:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the repeated start condition with read/write command by updating IN/TBUF register based on
 530:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @note Address(addr) should reserve an additional bit at the LSB for read/write indication. For e
 531:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 532:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 533:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * followed by 1-bit field for read/write).
 534:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 535:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 536:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 537:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 538:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterRepeatedStart(XMC_USIC_CH_t *const channel, const uint16_t addr, const XMC_I2
 539:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 540:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 541:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 542:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 543:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 544:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 545:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Stops the I2C master \a channel.<br>
 546:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 547:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 548:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on F
 549:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 550:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 551:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit(), XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 552:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 553:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterStop(XMC_USIC_CH_t *const channel);
 554:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 555:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 556:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 557:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 558:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 559:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 560:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 561:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C master \a channel.<br>
 562:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 563:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 564:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 565:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 566:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 567:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus()\n\n
 568:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 569:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 570:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 571:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 572:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 573:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param data data to transmit from I2C \a channel
 574:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 575:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 576:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 577:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Transmit the data from the I2C slave \a channel.<br>
 578:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 579:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 580:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 581:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 582:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 583:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(),XMC_I2C_CH_ClearStatusFlag()\n\n
 584:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 585:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_SlaveTransmit(XMC_USIC_CH_t *const channel, const uint8_t data);
 586:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 587:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 588:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 589:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 590:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 591:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 592:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Ack request from I2C master \a channel.<br>
 593:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 594:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 595:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FIF
 596:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 597:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 598:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 599:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 600:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveAck(XMC_USIC_CH_t *const channel);
 601:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 602:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 603:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 604:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 605:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 606:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 607:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Sends the Nack request from I2C master \a channel.<br>
 608:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 609:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 610:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the transmit buffer status is busy or not and thereby updates IN/TBUF register based on FI
 611:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 612:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 613:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 614:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 615:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_MasterReceiveNack(XMC_USIC_CH_t *const channel);
 616:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 617:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 618:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 619:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t OUTR/RBUF register data<br>
 620:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 621:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 622:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Reads the data from I2C \a channel.<br>
 623:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 624:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par
 625:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Data is read by using OUTR/RBUF register based on FIFO/non-FIFO modes.
 626:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 627:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 628:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 629:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 630:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** uint8_t XMC_I2C_CH_GetReceivedData(const XMC_USIC_CH_t *const channel);
 631:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 632:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 633:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 634:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint8_t Receiver status flag<br>
 635:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 636:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 637:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Gets the receiver status of I2C \a channel using RBUF register of bits 8-12 which gives informat
 638:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 639:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 640:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_MasterTransmit()\n\n
 641:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 642:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint8_t XMC_I2C_CH_GetReceiverStatusFlag(XMC_USIC_CH_t *const channel)
 643:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** {
 644:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   return((uint8_t)((channel->RBUF) >> 8U));
 645:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** }
 646:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 647:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 648:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 649:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 650:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 651:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 652:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 653:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Enables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 654:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 655:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 656:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_DisableEvent()\n\n
 657:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 658:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_EnableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 659:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 660:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 661:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 662:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param event ORed values of @ref XMC_I2C_CH_EVENT_t enum
 663:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 664:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 665:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 666:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Disables the input parameter @ref XMC_I2C_CH_EVENT_t event using PCR_IICMode register.
 667:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 668:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 669:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_EnableEvent()\n\n
 670:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 671:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** void XMC_I2C_CH_DisableEvent(XMC_USIC_CH_t *const channel, uint32_t event);
 672:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 673:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 674:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 675:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return uint32_t Status byte<br>
 676:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 677:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 678:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Retrieves the status byte of I2C \a channel using PSR_IICMode register.\n
 679:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 680:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 681:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_ClearStatusFlag()\n\n
 682:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 683:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE uint32_t XMC_I2C_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 684:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** {
 685:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   return (channel->PSR_IICMode);
 686:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** }
 687:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** 
 688:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** /**
 689:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param channel Constant pointer to USIC channel structure of type @ref XMC_USIC_CH_t
 690:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @param flag Status flag
 691:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * @return None<br>
 692:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 693:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Description:</b><br>
 694:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * Clears the status flag of I2C \a channel by setting the input parameter \a flag in PSCR register
 695:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  *
 696:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * \par<b>Related APIs:</b><br>
 697:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  * XMC_I2C_CH_GetStatusFlag()\n\n
 698:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****  */
 699:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** __STATIC_INLINE void XMC_I2C_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, uint32_t flag)
 700:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** {
 701:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h ****   channel->PSCR |= flag;
 146              	 .loc 3 701 0
 147 0020 C36C     	 ldr r3,[r0,#76]
 148 0022 1032     	 add r2,r2,#16
 149 0024 1343     	 orr r3,r2
 150 0026 C364     	 str r3,[r0,#76]
 151              	.LBE207:
 152              	.LBE206:
1596:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1597:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1598:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1599:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Receives the ACK from slave
1600:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1601:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1602:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1603:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1604:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * After transmitting a byte, master receives the ack from slave.<br>
1605:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1606:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1607:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1608:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1609:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1610:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1611:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1612:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1613:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1614:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1615:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1616:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1617:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t rec_data[64];
1618:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1619:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1620:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1621:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1622:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1623:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1624:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1625:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1626:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1627:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
1628:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1629:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1630:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1631:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1632:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1633:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1634:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1635:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1636:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1637:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1638:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1639:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1640:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(index < 16)
1641:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1642:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1643:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        index++;
1644:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1645:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait when Rx FIFO is empty
1646:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1647:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1648:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1649:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1650:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1651:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1652:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1653:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1654:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1655:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1656:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1657:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1658:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1659:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1660:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1661:../Dave/Generated/I2C_MASTER/i2c_master.h **** */
1662:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveACK(I2C_MASTER_t * const handle)
1663:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1664:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveACK: invalid handle", (handle != NULL))
1665:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterReceiveAck(handle->channel);
1666:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1667:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1668:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Receives the NACK from slave
1669:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1670:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1671:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1672:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1673:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * After transmitting a byte, master receives the nack from slave.<br>
1674:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1675:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1676:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1677:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1678:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1679:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1680:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1681:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1682:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1683:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1684:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint32_t index = 0, loc_index = 0;
1685:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t rec_data[64];
1686:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1687:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1688:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1689:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1690:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1691:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1692:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1693:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1694:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1695:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // write to address 0
1696:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1697:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1698:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1699:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1700:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1701:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1702:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1703:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1704:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1705:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1706:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1707:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1708:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(index < 16)
1709:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1710:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1711:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        index++;
1712:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1713:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      // only for the last byte
1714:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ReceiveNACK(&I2C_MASTER_0);
1715:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //Wait when Rx FIFO is empty
1716:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1717:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1718:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1719:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1720:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1721:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1722:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1723:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1724:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1725:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1726:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1727:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1728:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1729:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1730:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1731:../Dave/Generated/I2C_MASTER/i2c_master.h **** */
1732:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveNACK(I2C_MASTER_t * const handle)
1733:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1734:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveNACK: invalid handle", (handle != NULL))
1735:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterReceiveNack(handle->channel);
1736:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1737:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1738:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Sends stop command to slave
1739:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1740:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1741:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1742:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1743:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * At the end of transmission, sends a stop command to slave <br>
1744:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.<br>
1745:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1746:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1747:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1748:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1749:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1750:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1751:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1752:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1753:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1754:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1755:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1756:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1757:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1758:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1759:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1760:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       // wait for ACK
1761:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1762:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1763:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //send the address to which data to be transfered
1764:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1765:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1766:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1767:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1768:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1769:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1770:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
1771:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1772:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1773:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1774:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1775:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1776:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1777:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1778:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1779:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1780:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1781:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1782:../Dave/Generated/I2C_MASTER/i2c_master.h **** */
1783:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendStop(I2C_MASTER_t * const handle)
1784:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1785:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendStop: invalid handle", (handle != NULL))
1786:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED);
1787:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterStop(handle->channel);
 153              	 .loc 2 1787 0
 154 0028 FFF7FEFF 	 bl XMC_I2C_CH_MasterStop
 155              	.LVL15:
 156              	.L9:
 157              	.LBE205:
 158              	.LBE204:
 445:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 159              	 .loc 1 445 0 discriminator 1
 160 002c 2168     	 ldr r1,[r4]
 161              	.L10:
 162              	.LVL16:
 163              	.LBB208:
 164              	.LBB209:
 165              	 .file 4 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2019-07-01
   4:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
   7:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  77:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  78:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  79:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  80:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  81:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  82:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  83:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  84:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  85:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  86:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  87:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  88:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  89:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-07-01:
  90:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Changed XMC_USIC_CH_SetBaudrateEx() input parameter types
  91:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  92:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  93:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  94:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
  95:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
  96:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  97:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  98:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  99:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
 100:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 101:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 102:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 103:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 104:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 105:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 106:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 107:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 108:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 109:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 110:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 111:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 112:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 113:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 114:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 115:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 116:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 117:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 118:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 119:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 120:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 121:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 122:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 123:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 124:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 125:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 126:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 127:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 128:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 129:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 130:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 131:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 132:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 133:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 134:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 135:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 136:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 137:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 138:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 139:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 140:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 141:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 142:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 143:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 144:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 145:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 146:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 147:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 148:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 149:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 150:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 151:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 152:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 153:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 154:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 155:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 156:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 157:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 158:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 159:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 160:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 161:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 162:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 163:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 164:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 165:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 166:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 167:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 168:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 169:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 170:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 171:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 172:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 173:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 174:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 175:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 176:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 177:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 178:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 179:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 180:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 181:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 182:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 183:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 184:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 185:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 186:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 187:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 188:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 189:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 190:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 191:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 192:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 193:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 194:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 195:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 196:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 197:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 198:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 199:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 200:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 201:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 202:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 203:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 204:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 205:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 206:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 207:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 208:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 209:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 210:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 211:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 212:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 213:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 214:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 215:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 216:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 217:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 218:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 219:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 220:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 221:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 222:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 223:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 224:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 225:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 226:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 227:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 228:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 229:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 230:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 231:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 232:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 233:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 234:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 235:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 236:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 237:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 238:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 239:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 240:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 241:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 242:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 243:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 244:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 245:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 246:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 247:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 248:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 249:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 250:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 251:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 252:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 253:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 254:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 255:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 256:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 257:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 258:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 259:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 260:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 261:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 262:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 263:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 264:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 265:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 266:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 267:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 268:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 269:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 270:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 271:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 272:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 273:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 274:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 275:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 276:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 277:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 278:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 279:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 280:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 281:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 282:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 283:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 284:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 285:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 286:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 287:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 288:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 289:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 290:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 291:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 292:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 293:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 294:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 295:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 296:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 297:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 298:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 299:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 300:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 301:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 303:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 304:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 305:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 306:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 307:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 308:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 309:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 310:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 311:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 312:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 313:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 314:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 315:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 316:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 317:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 318:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 319:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 320:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 321:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 322:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 323:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 324:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 325:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 326:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 327:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 328:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 329:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 330:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 332:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 333:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 334:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 335:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 336:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 337:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 338:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 339:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 340:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 341:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 342:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 343:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 344:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 345:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 346:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 347:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 348:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 349:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 350:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 351:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 352:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 353:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 354:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 355:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 356:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 357:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 358:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 359:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 360:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 361:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 362:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 363:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 364:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 365:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 366:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 367:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 368:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 369:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 370:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 371:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 372:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 373:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 374:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 375:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 376:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 377:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 378:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 379:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 380:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 381:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 382:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 383:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 384:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 385:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 386:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 387:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 388:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 389:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 390:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 391:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 392:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 393:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 394:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 395:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 396:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 397:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 398:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 399:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 400:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 401:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 402:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 403:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 404:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 405:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 406:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 407:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 408:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 409:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 410:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 411:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 412:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 413:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 414:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 415:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 416:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 417:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 418:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 419:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 420:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 421:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 422:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 423:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 424:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 425:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 426:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 427:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 428:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 431:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 433:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 435:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 436:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 437:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 438:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 439:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 440:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 441:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 442:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 443:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 444:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 445:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 446:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 447:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 448:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 449:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 450:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 451:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 452:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 453:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 454:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 455:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 456:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 457:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 458:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 459:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 460:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 461:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 462:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 463:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 464:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 465:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 466:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 467:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 468:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 469:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 470:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 471:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 472:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 473:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 474:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 475:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 476:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 477:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 478:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 479:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 480:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 481:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 482:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 483:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 484:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 485:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 486:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 487:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 488:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 489:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 490:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 491:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 492:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 493:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 494:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 495:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 496:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 497:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 498:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 499:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 500:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 501:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 502:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 503:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 504:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 505:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 506:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 507:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 508:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 509:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 510:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 511:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 512:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   };
 513:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 514:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 515:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 516:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 517:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 518:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 519:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 520:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 521:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 522:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   };
 523:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 524:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 525:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 526:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 527:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 528:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 529:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 530:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 531:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 532:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 533:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 534:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 535:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 536:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 537:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 538:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 539:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 540:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 541:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 542:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 543:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 544:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 545:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 546:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 547:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 548:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 549:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 550:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 551:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 552:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 553:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 554:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 555:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 556:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 557:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 558:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 559:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 560:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 561:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 562:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 563:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 564:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 565:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 566:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 567:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 568:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 569:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 570:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 571:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 572:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 573:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 574:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 575:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 576:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 577:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 578:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 579:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 580:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 581:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 582:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 583:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 584:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 585:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 586:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 587:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 588:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 589:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 590:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 591:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 592:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 593:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 594:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 595:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 596:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 597:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 598:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 599:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 600:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 601:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 602:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 603:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 604:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 605:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 606:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 607:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 608:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 609:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 610:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 611:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 612:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 613:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 614:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 615:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 616:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 617:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 618:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 619:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 620:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 621:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 622:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 623:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 624:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 625:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 626:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 627:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 628:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 629:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 630:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 631:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 632:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 633:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 634:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 635:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 636:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 637:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 638:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 639:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 640:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 641:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 642:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 643:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 644:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 645:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 646:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 647:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 648:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 649:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 650:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 651:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 652:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 653:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 654:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 655:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 656:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 657:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 658:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 659:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 660:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 661:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 662:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 663:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 664:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 665:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 666:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 667:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 668:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 669:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 670:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 671:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 672:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 673:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 674:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 675:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 676:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 677:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 678:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 679:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 680:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 681:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 682:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 683:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 684:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 685:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 686:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 687:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 688:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 689:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 690:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 691:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 692:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 693:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 694:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 695:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 696:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 697:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 698:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 699:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 700:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 701:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 702:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 703:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 704:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 705:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 706:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 707:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 708:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 709:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 710:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 711:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 712:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 713:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 714:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 715:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 716:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 717:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 718:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 719:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 720:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 721:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 722:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 723:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 724:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 725:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 726:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 727:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 728:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 729:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 730:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 731:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 732:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 733:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 734:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 735:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 736:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 737:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 738:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 739:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 740:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 741:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 742:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 743:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 744:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 745:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 746:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 747:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 748:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 749:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 750:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 751:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 752:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 753:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 754:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 755:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 756:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 757:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 758:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 759:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 760:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 761:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 762:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 763:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 764:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 765:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 766:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 767:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 768:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 769:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 770:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 771:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 772:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 773:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 774:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 775:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 776:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 777:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 778:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 779:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 780:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 781:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 782:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 783:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 784:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 785:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 786:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 787:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 788:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 789:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 790:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 791:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 792:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 793:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 794:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 795:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 796:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 797:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 798:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 799:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 800:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 801:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 802:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 803:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 804:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 805:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 806:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 807:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 808:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 809:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 810:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 811:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 812:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 813:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 814:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 815:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 816:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 817:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 818:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 819:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 820:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 821:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 822:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 823:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 824:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 825:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 826:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 827:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 828:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 829:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 830:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 831:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 832:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 833:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 834:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 835:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 836:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 837:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 838:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 839:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 840:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 841:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 842:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 843:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 844:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 845:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 846:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 847:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 848:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 849:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 850:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 851:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 852:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 853:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 854:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 855:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 856:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 857:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 858:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 859:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 860:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 861:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 862:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 863:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 864:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 865:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 866:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 867:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 868:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 869:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 870:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 871:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 872:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 873:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 875:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 876:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 877:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 878:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 879:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 880:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 881:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 882:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 883:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 884:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 885:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 886:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 887:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 888:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 889:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 890:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 891:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 892:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 893:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 894:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 895:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 896:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 897:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 898:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 899:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 900:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 901:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 902:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 903:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 904:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 905:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 906:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 907:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 908:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 909:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 910:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 911:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 912:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 913:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 914:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 915:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 916:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 917:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 918:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 919:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 920:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 921:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 922:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 923:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 924:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 925:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 926:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 927:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 928:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 929:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 930:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 931:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 932:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 933:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 934:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 935:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 936:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 937:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 938:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 939:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 940:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 941:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 942:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 943:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 944:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 945:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 946:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 947:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 948:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 949:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 950:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 951:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 952:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 953:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 954:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 955:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 956:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 957:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 958:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 959:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 960:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 961:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 962:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 963:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 964:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 965:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 966:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 967:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 968:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 969:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 970:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 971:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 972:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 973:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 974:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 975:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 976:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 977:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 978:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 979:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 980:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 981:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 982:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 983:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 984:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 985:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 986:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 987:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 988:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 989:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 990:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 991:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 992:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 993:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 994:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 995:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 996:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 997:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 998:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 999:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1000:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1001:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1002:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1003:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1004:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1005:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1006:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1007:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1008:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1010:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1011:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1012:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
1013:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
1014:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1015:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
1016:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
1017:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1018:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1019:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1020:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1021:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1022:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1023:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1024:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1025:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1026:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1027:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1028:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1029:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1030:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1031:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1032:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1033:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
1034:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1035:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1036:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1037:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1038:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1039:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1040:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1041:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1042:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1043:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1044:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
1045:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
1046:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1047:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1048:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1049:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
1050:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1051:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
1052:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1053:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
1054:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1055:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1056:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1057:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1058:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1059:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1060:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
1061:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
1062:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1063:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1064:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1065:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
1066:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
1067:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1068:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1069:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1070:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
1071:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1072:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
1073:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint16_t data,
1074:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint32_t transmit_control_information)
1075:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1076:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
1077:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1078:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1079:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1080:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1081:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1082:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1083:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
1084:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
1085:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1086:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1087:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1088:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1089:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1090:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1091:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1092:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1093:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1094:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1095:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1096:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1097:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1098:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1099:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1100:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1101:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1102:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1103:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1104:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b Range: minimum= 1, maximum= 16. \n
1105:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *             e.g: For word length of 8, \a word_length should be provided as 8.
1106:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1107:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1108:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1109:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1110:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1111:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1112:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1113:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1114:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1115:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetShiftDirection(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_
1116:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1117:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_SDIR_Msk)) | (uint32_t)shift_direction;
1118:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1119:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1120:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1121:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1122:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1123:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1124:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Captured counter value 
1125:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1126:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1127:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1128:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The value of the counter is captured if one of the trigger signals DX0T or DX1T are activated by
1129:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1130:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetCaptureTimerValue(const XMC_USIC_CH_t *const channel)
1131:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1132:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return channel->CMTR;
1133:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1134:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1135:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1136:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1137:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1138:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  mode divider mode ::XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t \n
1139:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  step divider \n
1140:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL resulting divider = 1023 - step \n
1141:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL resulting divider = 1023 / step \n
1142:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1143:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1144:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1145:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1146:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The fractional divider generates its output frequency fFD by either dividing the input frequency
1147:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1148:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1149:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFractionalDivider(XMC_USIC_CH_t *const channel, const XMC_USIC_
1150:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1151:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FDR = mode | step;
1152:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1153:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1154:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1155:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1156:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1157:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1158:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1159:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1160:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1161:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1162:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1163:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1164:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1165:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1166:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly. 
1167:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1168:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1169:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1170:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1171:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1172:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1173:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1174:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1175:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1176:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1177:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1178:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1179:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1180:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1181:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1182:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1183:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1184:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1185:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1186:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1187:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1188:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1189:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1190:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1191:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1192:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1193:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1194:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1195:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1196:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
1197:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1198:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1199:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1200:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1201:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1202:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1203:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1204:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1205:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1206:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1207:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1208:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1209:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1210:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1211:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1212:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1213:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1214:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
1215:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1216:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1217:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
1218:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1219:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1220:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1221:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1222:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1223:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1224:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1225:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1226:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1227:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1228:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1229:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1230:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1231:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1232:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1233:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1234:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1235:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1236:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1237:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1238:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1239:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1240:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1241:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                          const uint32_t service_request);
1242:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1243:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1244:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1245:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1246:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1247:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1248:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1249:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1250:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1251:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1252:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1253:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1254:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1255:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1256:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1257:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1258:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1259:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1260:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1261:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
 166              	 .loc 4 1261 0 discriminator 1
 167 002e 7F22     	 mov r2,#127
 168 0030 8B6B     	 ldr r3,[r1,#56]
 169 0032 9343     	 bic r3,r2
 170              	.LBE209:
 171              	.LBE208:
 445:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 172              	 .loc 1 445 0 discriminator 1
 173 0034 DBB2     	 uxtb r3,r3
 174 0036 802B     	 cmp r3,#128
 175 0038 F9D0     	 beq .L10
 448:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 176              	 .loc 1 448 0
 177 003a 0023     	 mov r3,#0
 178 003c 0735     	 add r5,r5,#7
 179              	.LVL17:
 180 003e EB77     	 strb r3,[r5,#31]
 181              	.LVL18:
 450:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 182              	 .loc 1 450 0
 183 0040 6368     	 ldr r3,[r4,#4]
 184 0042 1B69     	 ldr r3,[r3,#16]
 185 0044 002B     	 cmp r3,#0
 186 0046 00D0     	 beq .L8
 453:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 187              	 .loc 1 453 0
 188 0048 9847     	 blx r3
 189              	.LVL19:
 190              	.L8:
 455:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 191              	 .loc 1 455 0
 192              	 
 193              	.LVL20:
 194              	.LVL21:
 195 004a 38BD     	 pop {r3,r4,r5,pc}
 196              	 .cfi_endproc
 197              	.LFE163:
 199              	 .section .text.I2C_MASTER_lSendStart_Or_RepeatedStart,"ax",%progbits
 200              	 .align 1
 201              	 .code 16
 202              	 .thumb_func
 204              	I2C_MASTER_lSendStart_Or_RepeatedStart:
 205              	.LFB167:
 743:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->runtime->bus_acquired == true)
 206              	 .loc 1 743 0
 207              	 .cfi_startproc
 208              	.LVL22:
 209 0000 10B5     	 push {r4,lr}
 210              	.LCFI2:
 211              	 .cfi_def_cfa_offset 8
 212              	 .cfi_offset 4,-8
 213              	 .cfi_offset 14,-4
 744:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 214              	 .loc 1 744 0
 215 0002 8368     	 ldr r3,[r0,#8]
 216 0004 89B2     	 uxth r1,r1
 217              	.LVL23:
 218 0006 2833     	 add r3,r3,#40
 219 0008 1C78     	 ldrb r4,[r3]
 220 000a 0068     	 ldr r0,[r0]
 221              	.LVL24:
 222 000c 002C     	 cmp r4,#0
 223 000e 06D0     	 beq .L17
 224              	.LVL25:
 225              	.LBB220:
 226              	.LBB221:
 227              	.LBB222:
 228              	.LBB223:
 229              	.LBB224:
 230              	 .loc 3 701 0
 231 0010 0824     	 mov r4,#8
 232 0012 C36C     	 ldr r3,[r0,#76]
 233 0014 2343     	 orr r3,r4
 234 0016 C364     	 str r3,[r0,#76]
 235              	.LBE224:
 236              	.LBE223:
1788:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1789:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1790:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Sends start command to slave
1791:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1792:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param address slave address
1793:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param cmd     command
1794:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1795:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1796:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1797:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Before start of transmission, sends a start command to slave. \n
1798:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
1799:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
1800:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
1801:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).<br>
1802:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet. <br
1803:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1804:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1805:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1806:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>
1807:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1808:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1809:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1810:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1811:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1812:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1813:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1814:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1815:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1816:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1817:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1818:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1819:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1820:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1821:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      //send the address to which data to be transfered
1822:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1823:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1824:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1825:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1826:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1827:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1828:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1829:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1830:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       XMC_DEBUG("main: Application initialization failed");
1831:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       while(1U)
1832:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       {
1833:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *       }
1834:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1835:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    return 1U;
1836:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   }
1837:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1838:../Dave/Generated/I2C_MASTER/i2c_master.h **** */
1839:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendStart(I2C_MASTER_t * const handle, const uint32_t address,
1840:../Dave/Generated/I2C_MASTER/i2c_master.h **** 		                                  const XMC_I2C_CH_CMD_t cmd)
1841:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1842:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendStart: invalid handle", (handle != NULL))
1843:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_START_CONDITION_RECEIVED);
1844:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterStart(handle->channel, (uint16_t)address, cmd);
1845:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
1846:../Dave/Generated/I2C_MASTER/i2c_master.h **** /**
1847:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @brief Sends repeated start command to slave
1848:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1849:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param address slave address
1850:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @param cmd     command
1851:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @return None
1852:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1853:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * \par<b>Description:</b><br>
1854:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Before start of transmission, sends a repeatedstart command to slave if bus acquired is true.\n
1855:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
1856:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
1857:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
1858:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * followed by 1-bit field for read/write).<br>
1859:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet. <br
1860:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * Example Usage:
1861:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @code
1862:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1863:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
1864:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1865:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  int main(void)
1866:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  {
1867:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    DAVE_STATUS_t init_status;
1868:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    uint8_t rx_buf[256];
1869:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1870:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    init_status = DAVE_Init();
1871:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1872:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1873:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_MasterStart(I2C_MASTER_0.channel, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1874:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1875:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1876:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1877:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1878:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1879:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     //send the address to which data to be transfered
1880:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1881:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED)
1882:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     {
1883:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     }
1884:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1885:../Dave/Generated/I2C_MASTER/i2c_master.h **** 
1886:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1887:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED)
1888:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     {
1889:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     }
1890:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *
1891:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1892:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * 	   memset(rx_buf,0,16);
1893:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, false, SLAVE_ADDRESS, rx_buf, 16, true, true);
1894:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1895:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    else
1896:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    {
1897:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1898:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      while(1U)
1899:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      {
1900:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *      }
1901:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *    }
1902:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *   return 1U;
1903:../Dave/Generated/I2C_MASTER/i2c_master.h ****  *  }
1904:../Dave/Generated/I2C_MASTER/i2c_master.h ****  * @endcode
1905:../Dave/Generated/I2C_MASTER/i2c_master.h **** */
1906:../Dave/Generated/I2C_MASTER/i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendRepeatedStart(I2C_MASTER_t * const handle, const uint32_t addre
1907:../Dave/Generated/I2C_MASTER/i2c_master.h **** 		                                          const XMC_I2C_CH_CMD_t cmd)
1908:../Dave/Generated/I2C_MASTER/i2c_master.h **** {
1909:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendRepeatedStart: invalid handle", (handle != NULL))
1910:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_REPEATED_START_CONDITION_RECEI
1911:../Dave/Generated/I2C_MASTER/i2c_master.h ****   XMC_I2C_CH_MasterRepeatedStart(handle->channel, (uint16_t)address, cmd);
 237              	 .loc 2 1911 0
 238 0018 FFF7FEFF 	 bl XMC_I2C_CH_MasterRepeatedStart
 239              	.LVL26:
 240 001c 07E0     	 b .L16
 241              	.LVL27:
 242              	.L17:
 243              	.LBE222:
 244              	.LBE221:
 245              	.LBE220:
 750:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_SendStart(handle, (uint16_t)address, cmd);
 246              	 .loc 1 750 0
 247 001e 0124     	 mov r4,#1
 248 0020 1C70     	 strb r4,[r3]
 249              	.LVL28:
 250              	.LBB225:
 251              	.LBB226:
 252              	.LBB227:
 253              	.LBB228:
 254              	 .loc 3 701 0
 255 0022 C36C     	 ldr r3,[r0,#76]
 256 0024 0334     	 add r4,r4,#3
 257 0026 2343     	 orr r3,r4
 258 0028 C364     	 str r3,[r0,#76]
 259              	.LBE228:
 260              	.LBE227:
1844:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 261              	 .loc 2 1844 0
 262 002a FFF7FEFF 	 bl XMC_I2C_CH_MasterStart
 263              	.LVL29:
 264              	.L16:
 265              	.LBE226:
 266              	.LBE225:
 753:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 267              	 .loc 1 753 0
 268              	 
 269 002e 10BD     	 pop {r4,pc}
 270              	 .cfi_endproc
 271              	.LFE167:
 273              	 .section .text.I2C_MASTER_lSendStop_JumpTo_RxCallback,"ax",%progbits
 274              	 .align 1
 275              	 .code 16
 276              	 .thumb_func
 278              	I2C_MASTER_lSendStop_JumpTo_RxCallback:
 279              	.LFB172:
1038:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 280              	 .loc 1 1038 0
 281              	 .cfi_startproc
 282              	.LVL30:
 283 0000 38B5     	 push {r3,r4,r5,lr}
 284              	.LCFI3:
 285              	 .cfi_def_cfa_offset 16
 286              	 .cfi_offset 3,-16
 287              	 .cfi_offset 4,-12
 288              	 .cfi_offset 5,-8
 289              	 .cfi_offset 14,-4
1041:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 290              	 .loc 1 1041 0
 291 0002 8468     	 ldr r4,[r0,#8]
 292              	.LVL31:
1038:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 293              	 .loc 1 1038 0
 294 0004 051C     	 mov r5,r0
1043:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 295              	 .loc 1 1043 0
 296 0006 E369     	 ldr r3,[r4,#28]
 297 0008 012B     	 cmp r3,#1
 298 000a 10D1     	 bne .L20
1045:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 299              	 .loc 1 1045 0
 300 000c 0068     	 ldr r0,[r0]
 301              	.LVL32:
 302              	.L21:
 303              	.LBB237:
 304              	.LBB238:
 305              	 .loc 4 1261 0 discriminator 1
 306 000e 7F22     	 mov r2,#127
 307 0010 836B     	 ldr r3,[r0,#56]
 308 0012 9343     	 bic r3,r2
 309              	.LBE238:
 310              	.LBE237:
1045:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 311              	 .loc 1 1045 0 discriminator 1
 312 0014 DBB2     	 uxtb r3,r3
 313 0016 802B     	 cmp r3,#128
 314 0018 F9D0     	 beq .L21
1047:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 315              	 .loc 1 1047 0
 316 001a 231C     	 mov r3,r4
 317 001c 0022     	 mov r2,#0
 318 001e 2833     	 add r3,r3,#40
 319 0020 1A70     	 strb r2,[r3]
 320              	.LVL33:
 321              	.LBB239:
 322              	.LBB240:
 323              	.LBB241:
 324              	.LBB242:
 325              	 .loc 3 701 0
 326 0022 C36C     	 ldr r3,[r0,#76]
 327 0024 1032     	 add r2,r2,#16
 328 0026 1343     	 orr r3,r2
 329 0028 C364     	 str r3,[r0,#76]
 330              	.LBE242:
 331              	.LBE241:
1787:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 332              	 .loc 2 1787 0
 333 002a FFF7FEFF 	 bl XMC_I2C_CH_MasterStop
 334              	.LVL34:
 335              	.L20:
 336              	.LBE240:
 337              	.LBE239:
1052:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 338              	 .loc 1 1052 0 discriminator 1
 339 002e 2968     	 ldr r1,[r5]
 340              	.L22:
 341              	.LVL35:
 342              	.LBB243:
 343              	.LBB244:
 344              	 .loc 4 1261 0 discriminator 1
 345 0030 7F22     	 mov r2,#127
 346 0032 8B6B     	 ldr r3,[r1,#56]
 347 0034 9343     	 bic r3,r2
 348              	.LBE244:
 349              	.LBE243:
1052:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 350              	 .loc 1 1052 0 discriminator 1
 351 0036 DBB2     	 uxtb r3,r3
 352 0038 802B     	 cmp r3,#128
 353 003a F9D0     	 beq .L22
1055:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime->tx_busy = false;
 354              	 .loc 1 1055 0
 355 003c 221C     	 mov r2,r4
 356 003e 0023     	 mov r3,#0
 357 0040 0832     	 add r2,r2,#8
1056:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 358              	 .loc 1 1056 0
 359 0042 0734     	 add r4,r4,#7
 360              	.LVL36:
1055:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime->tx_busy = false;
 361              	 .loc 1 1055 0
 362 0044 D377     	 strb r3,[r2,#31]
 363              	.LVL37:
1056:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 364              	 .loc 1 1056 0
 365 0046 E377     	 strb r3,[r4,#31]
1058:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 366              	 .loc 1 1058 0
 367 0048 6B68     	 ldr r3,[r5,#4]
 368 004a 5B69     	 ldr r3,[r3,#20]
 369 004c 002B     	 cmp r3,#0
 370 004e 00D0     	 beq .L19
1061:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 371              	 .loc 1 1061 0
 372 0050 9847     	 blx r3
 373              	.LVL38:
 374              	.L19:
1063:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 375              	 .loc 1 1063 0
 376              	 
 377              	.LVL39:
 378              	.LVL40:
 379 0052 38BD     	 pop {r3,r4,r5,pc}
 380              	 .cfi_endproc
 381              	.LFE172:
 383              	 .section .text.I2C_MASTER_GetAppVersion,"ax",%progbits
 384              	 .align 1
 385              	 .global I2C_MASTER_GetAppVersion
 386              	 .code 16
 387              	 .thumb_func
 389              	I2C_MASTER_GetAppVersion:
 390              	.LFB157:
 183:../Dave/Generated/I2C_MASTER/i2c_master.c ****   DAVE_APP_VERSION_t version;
 391              	 .loc 1 183 0
 392              	 .cfi_startproc
 393              	.LVL41:
 191:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 394              	 .loc 1 191 0
 395 0000 0148     	 ldr r0,.L30
 183:../Dave/Generated/I2C_MASTER/i2c_master.c ****   DAVE_APP_VERSION_t version;
 396              	 .loc 1 183 0
 397 0002 82B0     	 sub sp,sp,#8
 398              	.LCFI4:
 399              	 .cfi_def_cfa_offset 8
 191:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 400              	 .loc 1 191 0
 401 0004 02B0     	 add sp,sp,#8
 402              	 
 403 0006 7047     	 bx lr
 404              	.L31:
 405              	 .align 2
 406              	.L30:
 407 0008 04011E00 	 .word 1966340
 408              	 .cfi_endproc
 409              	.LFE157:
 411              	 .section .text.I2C_MASTER_Init,"ax",%progbits
 412              	 .align 1
 413              	 .global I2C_MASTER_Init
 414              	 .code 16
 415              	 .thumb_func
 417              	I2C_MASTER_Init:
 418              	.LFB158:
 195:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 419              	 .loc 1 195 0
 420              	 .cfi_startproc
 421              	.LVL42:
 422 0000 08B5     	 push {r3,lr}
 423              	.LCFI5:
 424              	 .cfi_def_cfa_offset 8
 425              	 .cfi_offset 3,-8
 426              	 .cfi_offset 14,-4
 207:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 427              	 .loc 1 207 0
 428 0002 0123     	 mov r3,#1
 198:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 429              	 .loc 1 198 0
 430 0004 0028     	 cmp r0,#0
 431 0006 03D0     	 beq .L33
 201:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 432              	 .loc 1 201 0
 433 0008 4368     	 ldr r3,[r0,#4]
 434 000a 5B68     	 ldr r3,[r3,#4]
 435 000c 9847     	 blx r3
 436              	.LVL43:
 203:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 437              	 .loc 1 203 0
 438 000e 0023     	 mov r3,#0
 439              	.LVL44:
 440              	.L33:
 210:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 441              	 .loc 1 210 0
 442 0010 181C     	 mov r0,r3
 443              	 
 444 0012 08BD     	 pop {r3,pc}
 445              	 .cfi_endproc
 446              	.LFE158:
 448              	 .section .text.I2C_MASTER_GetFlagStatus,"ax",%progbits
 449              	 .align 1
 450              	 .global I2C_MASTER_GetFlagStatus
 451              	 .code 16
 452              	 .thumb_func
 454              	I2C_MASTER_GetFlagStatus:
 455              	.LFB159:
 214:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint32_t status;
 456              	 .loc 1 214 0
 457              	 .cfi_startproc
 458              	.LVL45:
 217:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 459              	 .loc 1 217 0
 460 0000 0368     	 ldr r3,[r0]
 461              	.LVL46:
 220:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 462              	 .loc 1 220 0
 463              	 
 464              	.LBB245:
 465              	.LBB246:
 685:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** }
 466              	 .loc 3 685 0
 467 0002 986C     	 ldr r0,[r3,#72]
 468              	.LVL47:
 469              	.LBE246:
 470              	.LBE245:
 219:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 471              	 .loc 1 219 0
 472 0004 0840     	 and r0,r1
 220:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 473              	 .loc 1 220 0
 474 0006 7047     	 bx lr
 475              	 .cfi_endproc
 476              	.LFE159:
 478              	 .section .text.I2C_MASTER_ClearFlag,"ax",%progbits
 479              	 .align 1
 480              	 .global I2C_MASTER_ClearFlag
 481              	 .code 16
 482              	 .thumb_func
 484              	I2C_MASTER_ClearFlag:
 485              	.LFB160:
 224:../Dave/Generated/I2C_MASTER/i2c_master.c ****   XMC_I2C_CH_ClearStatusFlag(handle->channel,flagtype);
 486              	 .loc 1 224 0
 487              	 .cfi_startproc
 488              	.LVL48:
 225:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 489              	 .loc 1 225 0
 490 0000 0268     	 ldr r2,[r0]
 491              	.LVL49:
 226:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 492              	 .loc 1 226 0
 493              	 
 494              	.LBB247:
 495              	.LBB248:
 496              	 .loc 3 701 0
 497 0002 D36C     	 ldr r3,[r2,#76]
 498 0004 1943     	 orr r1,r3
 499              	.LVL50:
 500 0006 D164     	 str r1,[r2,#76]
 501              	.LBE248:
 502              	.LBE247:
 226:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 503              	 .loc 1 226 0
 504 0008 7047     	 bx lr
 505              	 .cfi_endproc
 506              	.LFE160:
 508              	 .section .text.I2C_MASTER_StartTransmitIRQ,"ax",%progbits
 509              	 .align 1
 510              	 .global I2C_MASTER_StartTransmitIRQ
 511              	 .code 16
 512              	 .thumb_func
 514              	I2C_MASTER_StartTransmitIRQ:
 515              	.LFB168:
 759:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 516              	 .loc 1 759 0
 517              	 .cfi_startproc
 518              	.LVL51:
 519 0000 F7B5     	 push {r0,r1,r2,r4,r5,r6,r7,lr}
 520              	.LCFI6:
 521              	 .cfi_def_cfa_offset 32
 522              	 .cfi_offset 0,-32
 523              	 .cfi_offset 1,-28
 524              	 .cfi_offset 2,-24
 525              	 .cfi_offset 4,-20
 526              	 .cfi_offset 5,-16
 527              	 .cfi_offset 6,-12
 528              	 .cfi_offset 7,-8
 529              	 .cfi_offset 14,-4
 759:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 530              	 .loc 1 759 0
 531 0002 0192     	 str r2,[sp,#4]
 532 0004 08AA     	 add r2,sp,#32
 533              	.LVL52:
 534 0006 0F1C     	 mov r7,r1
 535 0008 02CA     	 ldmia r2!,{r1}
 536              	.LVL53:
 537 000a 061C     	 mov r6,r0
 538 000c 1278     	 ldrb r2,[r2]
 539              	.LVL54:
 764:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 540              	 .loc 1 764 0
 541 000e 8468     	 ldr r4,[r0,#8]
 542              	.LVL55:
 759:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 543              	 .loc 1 759 0
 544 0010 9446     	 mov ip,r2
 768:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 545              	 .loc 1 768 0
 546 0012 002F     	 cmp r7,#0
 547 0014 05D1     	 bne .L38
 768:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 548              	 .loc 1 768 0 is_stmt 0 discriminator 1
 549 0016 221C     	 mov r2,r4
 550 0018 2832     	 add r2,r2,#40
 551 001a 1278     	 ldrb r2,[r2]
 770:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 552              	 .loc 1 770 0 is_stmt 1 discriminator 1
 553 001c 0120     	 mov r0,#1
 554              	.LVL56:
 768:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 555              	 .loc 1 768 0 discriminator 1
 556 001e 002A     	 cmp r2,#0
 557 0020 2ED0     	 beq .L39
 558              	.L38:
 770:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 559              	 .loc 1 770 0 discriminator 3
 560 0022 0120     	 mov r0,#1
 768:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 561              	 .loc 1 768 0 discriminator 3
 562 0024 002B     	 cmp r3,#0
 563 0026 2BD0     	 beq .L39
 768:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 564              	 .loc 1 768 0 is_stmt 0 discriminator 4
 565 0028 0029     	 cmp r1,#0
 566 002a 29D0     	 beq .L39
 774:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 567              	 .loc 1 774 0 is_stmt 1
 568 002c 0022     	 mov r2,#0
 569 002e A261     	 str r2,[r4,#24]
 776:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 570              	 .loc 1 776 0
 571 0030 E21D     	 add r2,r4,#7
 572 0032 D57F     	 ldrb r5,[r2,#31]
 763:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 573              	 .loc 1 763 0
 574 0034 0018     	 add r0,r0,r0
 776:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 575              	 .loc 1 776 0
 576 0036 EDB2     	 uxtb r5,r5
 577 0038 002D     	 cmp r5,#0
 578 003a 21D1     	 bne .L39
 779:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_count = size;
 579              	 .loc 1 779 0
 580 003c 2360     	 str r3,[r4]
 784:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->send_stop = send_stop;
 581              	 .loc 1 784 0
 582 003e 0123     	 mov r3,#1
 583              	.LVL57:
 780:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 584              	 .loc 1 780 0
 585 0040 A160     	 str r1,[r4,#8]
 783:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_busy = true;
 586              	 .loc 1 783 0
 587 0042 E560     	 str r5,[r4,#12]
 588              	.LBB255:
 589              	.LBB256:
1550:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 590              	 .loc 2 1550 0
 591 0044 8021     	 mov r1,#128
 592              	.LBE256:
 593              	.LBE255:
 784:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->send_stop = send_stop;
 594              	 .loc 1 784 0
 595 0046 D377     	 strb r3,[r2,#31]
 785:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 596              	 .loc 1 785 0
 597 0048 6346     	 mov r3,ip
 598              	.LBB260:
 599              	.LBB257:
1550:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 600              	 .loc 2 1550 0
 601 004a 3068     	 ldr r0,[r6]
 602              	.LBE257:
 603              	.LBE260:
 785:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 604              	 .loc 1 785 0
 605 004c E361     	 str r3,[r4,#28]
 606              	.LVL58:
 607              	.LBB261:
 608              	.LBB258:
1550:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 609              	 .loc 2 1550 0
 610 004e C905     	 lsl r1,r1,#23
 611              	.LBE258:
 612              	.LBE261:
 789:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 613              	 .loc 1 789 0
 614 0050 0534     	 add r4,r4,#5
 615              	.LVL59:
 616              	.LBB262:
 617              	.LBB259:
1550:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 618              	 .loc 2 1550 0
 619 0052 FFF7FEFF 	 bl XMC_I2C_CH_EnableEvent
 620              	.LVL60:
 621              	.LBE259:
 622              	.LBE262:
 623              	.LBB263:
 624              	.LBB264:
 387:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** }
 625              	 .loc 3 387 0
 626 0056 E27F     	 ldrb r2,[r4,#31]
 627 0058 3068     	 ldr r0,[r6]
 628 005a 1021     	 mov r1,#16
 629 005c FFF7FEFF 	 bl XMC_USIC_CH_SetInterruptNodePointer
 630              	.LVL61:
 631              	.LBE264:
 632              	.LBE263:
 791:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 633              	 .loc 1 791 0
 634 0060 002F     	 cmp r7,#0
 635 0062 06D0     	 beq .L40
 793:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 636              	 .loc 1 793 0
 637 0064 301C     	 mov r0,r6
 638 0066 0199     	 ldr r1,[sp,#4]
 639 0068 2A1C     	 mov r2,r5
 640 006a FFF7FEFF 	 bl I2C_MASTER_lSendStart_Or_RepeatedStart
 641              	.LVL62:
 801:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 642              	 .loc 1 801 0
 643 006e 281C     	 mov r0,r5
 644 0070 06E0     	 b .L39
 645              	.L40:
 646              	.LBB265:
 647              	.LBB266:
1262:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1263:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1264:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1265:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1266:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1267:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1268:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1269:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1270:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1271:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1272:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1273:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1274:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1275:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1276:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte. 
1277:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1278:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1279:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1280:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1281:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1282:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1283:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1284:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1285:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
1286:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1287:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1288:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1289:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1290:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1291:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1292:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1293:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1294:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1295:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1296:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *                              
1297:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1298:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1299:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1300:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1301:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1302:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1303:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1304:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1305:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1306:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1307:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                          const XMC_USIC_CH_START_TRANSMISION_MODE_t
1308:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1309:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1310:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1311:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1312:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1313:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1314:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1315:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1316:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1317:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1318:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1319:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1320:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1321:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1322:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1323:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1324:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1325:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1326:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1327:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1328:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output
1329:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1330:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1331:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1332:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1333:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1334:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1335:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1336:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1337:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1338:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1339:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1340:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the 
1341:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1342:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1343:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1344:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1345:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1346:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1347:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1348:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1349:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1350:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1351:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_SELMD_Msk |
1352:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_WAMD_Msk |
1353:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_HPCMD_Msk))) |
1354:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                          (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1355:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1356:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1357:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1358:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1359:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1360:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1361:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1362:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1363:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1364:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1365:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1366:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1367:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1368:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1369:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1370:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1371:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1372:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1373:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1374:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1375:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1376:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1377:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1378:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1379:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1380:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1381:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1382:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1383:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1384:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1385:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1386:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1387:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1388:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1389:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1390:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1391:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1392:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1393:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1394:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1395:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1396:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1397:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1398:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1399:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1400:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1401:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1402:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1403:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1404:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1405:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1406:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1407:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1408:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1409:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1410:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1411:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1412:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1413:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1414:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1415:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1416:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1417:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1418:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1419:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be 
1420:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled. 
1421:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1422:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1423:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1424:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1425:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1426:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1427:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
 648              	 .loc 4 1427 0
 649 0072 8023     	 mov r3,#128
 650 0074 E17F     	 ldrb r1,[r4,#31]
 651 0076 5B02     	 lsl r3,r3,#9
 652 0078 8B40     	 lsl r3,r3,r1
 653              	.LBE266:
 654              	.LBE265:
 801:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 655              	 .loc 1 801 0
 656 007a 381C     	 mov r0,r7
 798:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 657              	 .loc 1 798 0
 658 007c 3268     	 ldr r2,[r6]
 659              	.LVL63:
 660              	.LBB268:
 661              	.LBB267:
 662              	 .loc 4 1427 0
 663 007e 9366     	 str r3,[r2,#104]
 664              	.LVL64:
 665              	.L39:
 666              	.LBE267:
 667              	.LBE268:
 805:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 668              	 .loc 1 805 0
 669              	 
 670              	.LVL65:
 671 0080 FEBD     	 pop {r1,r2,r3,r4,r5,r6,r7,pc}
 672              	 .cfi_endproc
 673              	.LFE168:
 675              	 .section .text.I2C_MASTER_Transmit,"ax",%progbits
 676              	 .align 1
 677              	 .global I2C_MASTER_Transmit
 678              	 .code 16
 679              	 .thumb_func
 681              	I2C_MASTER_Transmit:
 682              	.LFB161:
 231:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 683              	 .loc 1 231 0
 684              	 .cfi_startproc
 685              	.LVL66:
 686 0000 F7B5     	 push {r0,r1,r2,r4,r5,r6,r7,lr}
 687              	.LCFI7:
 688              	 .cfi_def_cfa_offset 32
 689              	 .cfi_offset 0,-32
 690              	 .cfi_offset 1,-28
 691              	 .cfi_offset 2,-24
 692              	 .cfi_offset 4,-20
 693              	 .cfi_offset 5,-16
 694              	 .cfi_offset 6,-12
 695              	 .cfi_offset 7,-8
 696              	 .cfi_offset 14,-4
 231:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 697              	 .loc 1 231 0
 698 0002 08AC     	 add r4,sp,#32
 699              	.LVL67:
 700 0004 40CC     	 ldmia r4!,{r6}
 701              	.LVL68:
 702 0006 2578     	 ldrb r5,[r4]
 236:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 703              	 .loc 1 236 0
 704 0008 4468     	 ldr r4,[r0,#4]
 705              	.LVL69:
 706 000a 0534     	 add r4,r4,#5
 707 000c E77F     	 ldrb r7,[r4,#31]
 234:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 708              	 .loc 1 234 0
 709 000e 0224     	 mov r4,#2
 236:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 710              	 .loc 1 236 0
 711 0010 002F     	 cmp r7,#0
 712 0012 04D1     	 bne .L48
 239:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 713              	 .loc 1 239 0
 714 0014 0096     	 str r6,[sp]
 715 0016 0195     	 str r5,[sp,#4]
 716 0018 FFF7FEFF 	 bl I2C_MASTER_StartTransmitIRQ
 717              	.LVL70:
 718 001c 041C     	 mov r4,r0
 719              	.LVL71:
 720              	.L48:
 256:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 721              	 .loc 1 256 0
 722 001e 201C     	 mov r0,r4
 723              	 
 724              	.LVL72:
 725 0020 FEBD     	 pop {r1,r2,r3,r4,r5,r6,r7,pc}
 726              	 .cfi_endproc
 727              	.LFE161:
 729              	 .section .text.I2C_MASTER_StartReceiveIRQ,"ax",%progbits
 730              	 .align 1
 731              	 .global I2C_MASTER_StartReceiveIRQ
 732              	 .code 16
 733              	 .thumb_func
 735              	I2C_MASTER_StartReceiveIRQ:
 736              	.LFB170:
 827:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 737              	 .loc 1 827 0
 738              	 .cfi_startproc
 739              	.LVL73:
 740 0000 F7B5     	 push {r0,r1,r2,r4,r5,r6,r7,lr}
 741              	.LCFI8:
 742              	 .cfi_def_cfa_offset 32
 743              	 .cfi_offset 0,-32
 744              	 .cfi_offset 1,-28
 745              	 .cfi_offset 2,-24
 746              	 .cfi_offset 4,-20
 747              	 .cfi_offset 5,-16
 748              	 .cfi_offset 6,-12
 749              	 .cfi_offset 7,-8
 750              	 .cfi_offset 14,-4
 827:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 751              	 .loc 1 827 0
 752 0002 0092     	 str r2,[sp]
 753 0004 08AA     	 add r2,sp,#32
 754              	.LVL74:
 755 0006 0E1C     	 mov r6,r1
 756 0008 02CA     	 ldmia r2!,{r1}
 757              	.LVL75:
 758 000a 051C     	 mov r5,r0
 759 000c 1278     	 ldrb r2,[r2]
 760              	.LVL76:
 832:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 761              	 .loc 1 832 0
 762 000e 8468     	 ldr r4,[r0,#8]
 763              	.LVL77:
 827:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 764              	 .loc 1 827 0
 765 0010 171C     	 mov r7,r2
 766 0012 0AAA     	 add r2,sp,#40
 767              	.LVL78:
 768 0014 1278     	 ldrb r2,[r2]
 769              	.LVL79:
 770 0016 0192     	 str r2,[sp,#4]
 834:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (count == 0U)))
 771              	 .loc 1 834 0
 772 0018 002E     	 cmp r6,#0
 773 001a 06D1     	 bne .L51
 834:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (count == 0U)))
 774              	 .loc 1 834 0 is_stmt 0 discriminator 2
 775 001c 221C     	 mov r2,r4
 776 001e 2832     	 add r2,r2,#40
 777 0020 1278     	 ldrb r2,[r2]
 837:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 778              	 .loc 1 837 0 is_stmt 1 discriminator 2
 779 0022 0120     	 mov r0,#1
 780              	.LVL80:
 834:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (count == 0U)))
 781              	 .loc 1 834 0 discriminator 2
 782 0024 002A     	 cmp r2,#0
 783 0026 00D1     	 bne .LCB787
 784 0028 07E1     	 b .L52
 785              	.LCB787:
 786              	.L51:
 837:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 787              	 .loc 1 837 0 discriminator 4
 788 002a 0120     	 mov r0,#1
 834:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (count == 0U)))
 789              	 .loc 1 834 0 discriminator 4
 790 002c 002B     	 cmp r3,#0
 791 002e 00D1     	 bne .LCB791
 792 0030 03E1     	 b .L52
 793              	.LCB791:
 834:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (count == 0U)))
 794              	 .loc 1 834 0 is_stmt 0 discriminator 5
 795 0032 0029     	 cmp r1,#0
 796 0034 00D1     	 bne .LCB793
 797 0036 00E1     	 b .L52
 798              	.LCB793:
 841:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 799              	 .loc 1 841 0 is_stmt 1
 800 0038 0822     	 mov r2,#8
 801 003a 9446     	 mov ip,r2
 802 003c A444     	 add ip,ip,r4
 803 003e 6246     	 mov r2,ip
 804 0040 D27F     	 ldrb r2,[r2,#31]
 831:../Dave/Generated/I2C_MASTER/i2c_master.c ****   ptr_runtime = handle->runtime;
 805              	 .loc 1 831 0
 806 0042 0018     	 add r0,r0,r0
 841:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 807              	 .loc 1 841 0
 808 0044 D2B2     	 uxtb r2,r2
 809 0046 002A     	 cmp r2,#0
 810 0048 00D0     	 beq .LCB802
 811 004a F6E0     	 b .L52
 812              	.LCB802:
 843:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 813              	 .loc 1 843 0
 814 004c 0138     	 sub r0,r0,#1
 846:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->rx_data_count = count;
 815              	 .loc 1 846 0
 816 004e 6360     	 str r3,[r4,#4]
 848:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_count = count;
 817              	 .loc 1 848 0
 818 0050 2360     	 str r3,[r4]
 850:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->rx_busy = true;
 819              	 .loc 1 850 0
 820 0052 E31D     	 add r3,r4,#7
 821              	.LVL81:
 843:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 822              	 .loc 1 843 0
 823 0054 A061     	 str r0,[r4,#24]
 847:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data = data;
 824              	 .loc 1 847 0
 825 0056 2161     	 str r1,[r4,#16]
 849:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_busy = true;
 826              	 .loc 1 849 0
 827 0058 A160     	 str r1,[r4,#8]
 850:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->rx_busy = true;
 828              	 .loc 1 850 0
 829 005a D877     	 strb r0,[r3,#31]
 851:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->send_stop = send_stop;
 830              	 .loc 1 851 0
 831 005c 6346     	 mov r3,ip
 832 005e D877     	 strb r0,[r3,#31]
 853:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->rx_data_index = 0U;
 833              	 .loc 1 853 0
 834 0060 019B     	 ldr r3,[sp,#4]
 854:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->tx_data_index = 0U;
 835              	 .loc 1 854 0
 836 0062 6261     	 str r2,[r4,#20]
 853:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->rx_data_index = 0U;
 837              	 .loc 1 853 0
 838 0064 2362     	 str r3,[r4,#32]
 857:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 839              	 .loc 1 857 0
 840 0066 6B68     	 ldr r3,[r5,#4]
 855:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 841              	 .loc 1 855 0
 842 0068 E260     	 str r2,[r4,#12]
 857:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 843              	 .loc 1 857 0
 844 006a 1A1C     	 mov r2,r3
 852:../Dave/Generated/I2C_MASTER/i2c_master.c ****     ptr_runtime->send_nack = send_nack;
 845              	 .loc 1 852 0
 846 006c E761     	 str r7,[r4,#28]
 857:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 847              	 .loc 1 857 0
 848 006e 0832     	 add r2,r2,#8
 849 0070 D27F     	 ldrb r2,[r2,#31]
 850 0072 2868     	 ldr r0,[r5]
 851 0074 002A     	 cmp r2,#0
 852 0076 7ED0     	 beq .L53
 853              	.LVL82:
 854              	.LBB330:
 855              	.LBB331:
 856              	.LBB332:
 857              	.LBB333:
1428:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1429:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1430:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1431:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1432:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1433:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1434:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1435:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1436:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1437:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1438:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1439:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1440:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1441:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1442:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1443:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1444:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                 const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buf
1445:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1446:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
1447:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1448:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1449:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1450:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1451:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1452:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1453:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1454:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1455:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1456:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1457:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1458:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the 
1459:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1460:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1461:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1462:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1463:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1464:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1465:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                      const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive
1466:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1467:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1468:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1469:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1470:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1471:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1472:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1473:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1474:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1475:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1476:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1477:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1478:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1479:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1480:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1481:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1482:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1483:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1484:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1485:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1486:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1487:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1488:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1489:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1490:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1491:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1492:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1493:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1494:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1495:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1496:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1497:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1498:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1499:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1500:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1501:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1502:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1503:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1504:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1505:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1506:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1507:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1508:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1509:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1510:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the 
1511:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1512:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1513:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1514:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1515:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1516:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1517:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1518:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1519:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1520:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1521:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1522:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1523:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1524:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1525:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1526:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1527:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1528:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1529:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1530:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1531:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1532:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1533:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1534:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1535:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1536:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1537:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1538:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1539:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1540:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1541:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
1542:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1543:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1544:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1545:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1546:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1547:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1548:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1549:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1550:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1551:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1552:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1553:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1554:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent(). 
1555:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1556:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1557:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1558:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1559:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1560:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1561:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1562:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1563:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
1564:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1565:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1566:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1567:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1568:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1569:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1570:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1571:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1572:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1573:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1574:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1575:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1576:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1577:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1578:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1579:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1580:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1581:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1582:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1583:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1584:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1585:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1586:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1587:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1588:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1589:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1590:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1591:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
1592:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1593:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1594:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1595:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1596:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1597:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1598:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1599:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1600:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1601:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1602:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1603:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1604:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1605:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1606:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1607:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1608:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1609:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1610:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1611:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1612:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1613:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1614:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1615:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1616:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1617:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1618:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1619:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1620:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1621:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1622:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1623:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1624:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1625:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1626:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1627:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1628:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1629:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1630:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1631:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1632:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1633:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1634:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1635:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1636:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1637:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1638:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1639:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1640:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1641:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1642:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1643:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1644:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1645:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1646:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1647:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1648:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1649:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1650:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1651:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1652:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1653:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1654:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1655:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1656:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1657:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1658:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1659:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1660:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1661:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1662:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1663:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1664:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1665:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1666:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1667:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1668:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1669:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1670:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1671:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1672:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1673:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1674:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1675:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1676:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
1677:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1678:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1679:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1680:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1681:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1682:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1683:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1684:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1685:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1686:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1687:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1688:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1689:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1690:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1691:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1692:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1693:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1694:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1695:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
1696:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1697:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1698:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1699:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1700:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1701:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1702:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1703:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1704:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1705:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1706:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1707:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO, 
1708:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1709:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1710:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1711:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1712:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1713:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1714:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1715:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
1716:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1717:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1718:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1719:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1720:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1721:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Transmit FIFO filling level. \n 
1722:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= transmit FIFO size.
1723:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1724:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1725:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO filling level. \n\n
1726:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word written to the FIFO, filling level is updated. The API gives the value
1727:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level.
1728:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1729:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1730:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1731:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1732:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1733:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1734:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_TBFLVL_Msk) >> USIC_CH_TRBSR_TBFLVL_Pos);
1735:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1736:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1737:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1738:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1739:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1740:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard transmit and transmit buffer error events. @ref XMC_USIC_CH_TXFIFO_EV
1741:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1742:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1743:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO event status. \n\n
1744:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event
1745:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bit positions in the TRBSR register in the returned value.
1746:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the @ref XMC_USIC_CH_TXFIFO_EVENT_t enumeration for checking the status of 
1747:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1748:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1749:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1750:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1751:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1752:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_ClearEvent() \n\n\n
1753:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1754:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1755:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1756:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_STBI_Msk |
1757:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_TBERI_Msk));
1758:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1759:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1760:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1761:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1762:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1763:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Transmit FIFO events to be cleared. \n
1764:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			     \b Range: @ref XMC_USIC_CH_TXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_TXFIFO_EVENT_ERROR.
1765:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1766:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1767:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1768:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the transmit FIFO event flags in the status register. \n\n
1769:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1770:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value. 
1771:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events
1772:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of 
1773:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1774:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1775:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1776:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent() \n\n\n
1777:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1778:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1779:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const uint32_t event)
1780:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1781:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1782:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1783:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1784:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1785:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1786:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1787:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1788:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1789:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1790:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1791:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of receive FIFO filling level to be considered for generating events. \n
1792:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1793:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1794:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1795:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1796:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the receive FIFO. \n\n
1797:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channe
1798:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1799:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * from where received data can be put. \a size represents the size of receive FIFO as a multiple o
1800:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO
1801:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * event or alternative receive buffer event is generated when the FIFO filling level exceeds the \
1802:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1803:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1804:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent(), XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1805:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
1806:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
1807:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1808:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1809:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1810:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1811:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1812:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1813:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1814:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1815:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1816:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for receive FIFO filling level to be considered for generating events. \n
1817:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1818:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1819:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1820:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1821:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the receive FIFO. \n\n
1822:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the receive FIFO. The API shall be used for the 
1823:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execut
1824:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1825:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1826:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()\ n\n\n
1827:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1828:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1829:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1830:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1831:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1832:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1833:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1834:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1835:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1836:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1837:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1838:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1839:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1840:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_t.
1841:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1842:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.<br>
1843:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1844:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1845:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1846:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1847:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1848:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1849:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1850:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1851:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1852:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR |= event;
1853:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1854:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1855:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1856:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1857:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1858:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1859:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. \n
1860:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ERR
1861:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			@ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE.
1862:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1863:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1864:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1865:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the selected interrupt events related to receive FIFO. \n\n
1866:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1867:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_RXFIFO_GetEvent(). 
1868:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration \a XMC_USIC_CH_RXFIFO_EVENT_CONF. For pr
1869:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1870:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1871:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1872:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent(), XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1873:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1874:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1875:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1876:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR &= (uint32_t)~event;
1877:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1878:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1879:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1880:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1881:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1882:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the receive FIFO events. \n
1883:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1884:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 					@ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1885:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation.\n
1886:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: 0 to 5.
1887:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1888:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1889:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1890:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the receive FIFO events. \n\n
1891:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1892:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1893:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1894:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * A receive FIFO event can generate an interrupt only if the interrupt node is configured for the 
1895:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1896:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1897:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1898:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1899:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1900:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1901:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1902:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1903:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1904:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
1905:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1906:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1907:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1908:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1909:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1910:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Value read from the receive FIFO. \n
1911:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 16bit data. Length of data depends on the word length configuration.
1912:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1913:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1914:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets data from the receive FIFO. \n\n
1915:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO should be read only if data is availble in the FIFO. This can be checked using
1916:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * the API XMC_USIC_CH_RXFIFO_IsEmpty(). Receive FIFO error flag will be set if an attempt is made
1917:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO. To read all the received data, user should keep reading data
1918:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * until receive FIFO is empty.
1919:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1920:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1921:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent() \n\n\n
1922:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1923:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint16_t XMC_USIC_CH_RXFIFO_GetData(XMC_USIC_CH_t *const channel)
1924:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1925:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint16_t)(channel->OUTR);
1926:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1927:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1928:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1929:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1930:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1931:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1932:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1933:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1934:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of receive FIFO. \n\n
1935:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO contents will be cleared and the filling level will be reset to 0.
1936:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1937:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1938:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetLevel() \n\n\n
1939:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1940:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_Flush(XMC_USIC_CH_t *const channel)
1941:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1942:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;
 858              	 .loc 4 1942 0
 859 0078 8023     	 mov r3,#128
 860 007a FC30     	 add r0,r0,#252
 861              	.LVL83:
 862 007c DB01     	 lsl r3,r3,#7
 863 007e C361     	 str r3,[r0,#28]
 864              	.LBE333:
 865              	.LBE332:
 531:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 866              	 .loc 1 531 0
 867 0080 281C     	 mov r0,r5
 868 0082 FFF7FEFF 	 bl I2C_MASTER_lReconfigureRxFIFO
 869              	.LVL84:
 533:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                 (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD |
 870              	 .loc 1 533 0
 871 0086 2868     	 ldr r0,[r5]
 872              	.LVL85:
 873              	.LBB334:
 874              	.LBB335:
1852:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 875              	 .loc 4 1852 0
 876 0088 C021     	 mov r1,#192
 877 008a 021C     	 mov r2,r0
 878 008c FC32     	 add r2,r2,#252
 879 008e 1369     	 ldr r3,[r2,#16]
 880 0090 C905     	 lsl r1,r1,#23
 881 0092 0B43     	 orr r3,r1
 882 0094 1361     	 str r3,[r2,#16]
 883 0096 6B68     	 ldr r3,[r5,#4]
 884              	.LBE335:
 885              	.LBE334:
 536:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 886              	 .loc 1 536 0
 887 0098 002E     	 cmp r6,#0
 888 009a 39D0     	 beq .L54
 538:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT)))
 889              	 .loc 1 538 0
 890 009c 0533     	 add r3,r3,#5
 891 009e DB7F     	 ldrb r3,[r3,#31]
 892 00a0 013B     	 sub r3,r3,#1
 893 00a2 012B     	 cmp r3,#1
 894 00a4 09D9     	 bls .L55
 895              	.LVL86:
 896              	.LBB336:
 897              	.LBB337:
1550:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 898              	 .loc 2 1550 0
 899 00a6 8021     	 mov r1,#128
 900 00a8 C905     	 lsl r1,r1,#23
 901 00aa FFF7FEFF 	 bl XMC_I2C_CH_EnableEvent
 902              	.LVL87:
 903              	.LBE337:
 904              	.LBE336:
 542:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 905              	 .loc 1 542 0
 906 00ae 631D     	 add r3,r4,#5
 907              	.LBB338:
 908              	.LBB339:
 387:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** }
 909              	 .loc 3 387 0
 910 00b0 DA7F     	 ldrb r2,[r3,#31]
 911 00b2 2868     	 ldr r0,[r5]
 912 00b4 1021     	 mov r1,#16
 913 00b6 FFF7FEFF 	 bl XMC_USIC_CH_SetInterruptNodePointer
 914              	.LVL88:
 915              	.L55:
 916              	.LBE339:
 917              	.LBE338:
 544:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 918              	 .loc 1 544 0
 919 00ba 0122     	 mov r2,#1
 920 00bc 281C     	 mov r0,r5
 921 00be 0099     	 ldr r1,[sp]
 922 00c0 FFF7FEFF 	 bl I2C_MASTER_lSendStart_Or_RepeatedStart
 923              	.LVL89:
 560:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 924              	 .loc 1 560 0
 925 00c4 6B68     	 ldr r3,[r5,#4]
 926 00c6 5A1D     	 add r2,r3,#5
 927 00c8 D27F     	 ldrb r2,[r2,#31]
 928 00ca 022A     	 cmp r2,#2
 929 00cc 00D0     	 beq .LCB916
 930 00ce 93E0     	 b .L90
 931              	.LCB916:
 562:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 932              	 .loc 1 562 0
 933 00d0 0733     	 add r3,r3,#7
 934 00d2 DB7F     	 ldrb r3,[r3,#31]
 935 00d4 002B     	 cmp r3,#0
 936 00d6 70D0     	 beq .L96
 937              	.L57:
 938 00d8 2868     	 ldr r0,[r5]
 939              	.LVL90:
 940              	.LBB340:
 941              	.LBB341:
 942              	.LBB342:
1695:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 943              	 .loc 4 1695 0
 944 00da 031C     	 mov r3,r0
 945 00dc FC33     	 add r3,r3,#252
 946 00de 9B69     	 ldr r3,[r3,#24]
 947              	.LBE342:
 948              	.LBE341:
 949              	.LBE340:
 565:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 950              	 .loc 1 565 0
 951 00e0 DB04     	 lsl r3,r3,#19
 952 00e2 00D5     	 bpl .LCB937
 953 00e4 88E0     	 b .L90
 954              	.LCB937:
 567:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 955              	 .loc 1 567 0
 956 00e6 E368     	 ldr r3,[r4,#12]
 957 00e8 A268     	 ldr r2,[r4,#8]
 958 00ea 9342     	 cmp r3,r2
 959 00ec 00D3     	 bcc .LCB941
 960 00ee 83E0     	 b .L90
 961              	.LCB941:
 569:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 962              	 .loc 1 569 0
 963 00f0 E368     	 ldr r3,[r4,#12]
 964 00f2 0133     	 add r3,r3,#1
 965 00f4 9342     	 cmp r3,r2
 966 00f6 05D1     	 bne .L60
 967 00f8 236A     	 ldr r3,[r4,#32]
 968 00fa 012B     	 cmp r3,#1
 969 00fc 02D1     	 bne .L60
 970              	.LVL91:
 971              	.LBB343:
 972              	.LBB344:
1735:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 973              	 .loc 2 1735 0
 974 00fe FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveNack
 975              	.LVL92:
 976 0102 01E0     	 b .L61
 977              	.LVL93:
 978              	.L60:
 979              	.LBE344:
 980              	.LBE343:
 981              	.LBB345:
 982              	.LBB346:
1665:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 983              	 .loc 2 1665 0
 984 0104 FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveAck
 985              	.LVL94:
 986              	.L61:
 987              	.LBE346:
 988              	.LBE345:
 577:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 989              	 .loc 1 577 0
 990 0108 E368     	 ldr r3,[r4,#12]
 991 010a 0133     	 add r3,r3,#1
 992 010c E360     	 str r3,[r4,#12]
 993 010e E3E7     	 b .L57
 994              	.LVL95:
 995              	.L54:
 603:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 996              	 .loc 1 603 0
 997 0110 0733     	 add r3,r3,#7
 998 0112 DB7F     	 ldrb r3,[r3,#31]
 999 0114 002B     	 cmp r3,#0
 1000 0116 1DD0     	 beq .L65
 1001              	.LVL96:
 1002              	.LBB347:
 1003              	.LBB348:
1563:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 1004              	 .loc 4 1563 0
 1005 0118 D168     	 ldr r1,[r2,#12]
 1006 011a 484B     	 ldr r3,.L97
 1007 011c 0B40     	 and r3,r1
 1008 011e D360     	 str r3,[r2,#12]
 1009              	.LVL97:
 1010              	.L66:
 1011 0120 2868     	 ldr r0,[r5]
 1012              	.LVL98:
 1013              	.LBE348:
 1014              	.LBE347:
 1015              	.LBB349:
 1016              	.LBB350:
 1017              	.LBB351:
1695:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 1018              	 .loc 4 1695 0
 1019 0122 031C     	 mov r3,r0
 1020 0124 FC33     	 add r3,r3,#252
 1021 0126 9B69     	 ldr r3,[r3,#24]
 1022              	.LBE351:
 1023              	.LBE350:
 1024              	.LBE349:
 608:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 1025              	 .loc 1 608 0
 1026 0128 DB04     	 lsl r3,r3,#19
 1027 012a 65D4     	 bmi .L90
 610:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 1028              	 .loc 1 610 0
 1029 012c E368     	 ldr r3,[r4,#12]
 1030 012e A268     	 ldr r2,[r4,#8]
 1031 0130 9342     	 cmp r3,r2
 1032 0132 61D2     	 bcs .L90
 612:../Dave/Generated/I2C_MASTER/i2c_master.c ****                (ptr_runtime->send_nack == true))
 1033              	 .loc 1 612 0
 1034 0134 E368     	 ldr r3,[r4,#12]
 1035 0136 0133     	 add r3,r3,#1
 1036 0138 9342     	 cmp r3,r2
 1037 013a 05D1     	 bne .L67
 1038 013c 236A     	 ldr r3,[r4,#32]
 1039 013e 012B     	 cmp r3,#1
 1040 0140 02D1     	 bne .L67
 1041              	.LVL99:
 1042              	.LBB352:
 1043              	.LBB353:
1735:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1044              	 .loc 2 1735 0
 1045 0142 FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveNack
 1046              	.LVL100:
 1047 0146 01E0     	 b .L68
 1048              	.LVL101:
 1049              	.L67:
 1050              	.LBE353:
 1051              	.LBE352:
 1052              	.LBB354:
 1053              	.LBB355:
1665:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1054              	 .loc 2 1665 0
 1055 0148 FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveAck
 1056              	.LVL102:
 1057              	.L68:
 1058              	.LBE355:
 1059              	.LBE354:
 621:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 1060              	 .loc 1 621 0
 1061 014c E368     	 ldr r3,[r4,#12]
 1062 014e 0133     	 add r3,r3,#1
 1063 0150 E360     	 str r3,[r4,#12]
 1064 0152 E5E7     	 b .L66
 1065              	.LVL103:
 1066              	.L65:
 631:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 1067              	 .loc 1 631 0
 1068 0154 E368     	 ldr r3,[r4,#12]
 1069 0156 A268     	 ldr r2,[r4,#8]
 1070 0158 9342     	 cmp r3,r2
 1071 015a 4DD2     	 bcs .L90
 633:../Dave/Generated/I2C_MASTER/i2c_master.c ****              (ptr_runtime->send_nack == true))
 1072              	 .loc 1 633 0
 1073 015c E368     	 ldr r3,[r4,#12]
 1074 015e 0133     	 add r3,r3,#1
 1075 0160 9342     	 cmp r3,r2
 1076 0162 02D1     	 bne .L70
 1077 0164 236A     	 ldr r3,[r4,#32]
 1078 0166 012B     	 cmp r3,#1
 1079 0168 3ED0     	 beq .L91
 1080              	.L70:
 1081              	.LVL104:
 1082              	.LBB356:
 1083              	.LBB357:
 1084              	 .loc 3 701 0
 1085 016a F222     	 mov r2,#242
 1086 016c C36C     	 ldr r3,[r0,#76]
 1087 016e 1202     	 lsl r2,r2,#8
 1088 0170 1343     	 orr r3,r2
 1089 0172 C364     	 str r3,[r0,#76]
 1090              	.LVL105:
 1091 0174 3BE0     	 b .L77
 1092              	.LVL106:
 1093              	.L53:
 1094              	.LBE357:
 1095              	.LBE356:
 1096              	.LBE331:
 1097              	.LBE330:
 1098              	.LBB358:
 1099              	.LBB359:
 1100              	.LBB360:
 1101              	.LBB361:
1196:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 1102              	 .loc 4 1196 0
 1103 0176 026C     	 ldr r2,[r0,#64]
 1104 0178 171C     	 mov r7,r2
 1105 017a C022     	 mov r2,#192
 1106 017c 1202     	 lsl r2,r2,#8
 1107 017e 1743     	 orr r7,r2
 1108 0180 0764     	 str r7,[r0,#64]
 1109              	.LBE361:
 1110              	.LBE360:
 664:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 1111              	 .loc 1 664 0
 1112 0182 002E     	 cmp r6,#0
 1113 0184 25D0     	 beq .L72
 666:../Dave/Generated/I2C_MASTER/i2c_master.c ****      (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT)))
 1114              	 .loc 1 666 0
 1115 0186 0533     	 add r3,r3,#5
 1116 0188 DB7F     	 ldrb r3,[r3,#31]
 1117 018a 013B     	 sub r3,r3,#1
 1118 018c 012B     	 cmp r3,#1
 1119 018e 09D9     	 bls .L73
 1120              	.LVL107:
 1121              	.LBB362:
 1122              	.LBB363:
1550:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1123              	 .loc 2 1550 0
 1124 0190 8021     	 mov r1,#128
 1125 0192 C905     	 lsl r1,r1,#23
 1126 0194 FFF7FEFF 	 bl XMC_I2C_CH_EnableEvent
 1127              	.LVL108:
 1128              	.LBE363:
 1129              	.LBE362:
 670:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 1130              	 .loc 1 670 0
 1131 0198 631D     	 add r3,r4,#5
 1132              	.LBB364:
 1133              	.LBB365:
 387:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** }
 1134              	 .loc 3 387 0
 1135 019a DA7F     	 ldrb r2,[r3,#31]
 1136 019c 2868     	 ldr r0,[r5]
 1137 019e 1021     	 mov r1,#16
 1138 01a0 FFF7FEFF 	 bl XMC_USIC_CH_SetInterruptNodePointer
 1139              	.LVL109:
 1140              	.L73:
 1141              	.LBE365:
 1142              	.LBE364:
 672:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 1143              	 .loc 1 672 0
 1144 01a4 281C     	 mov r0,r5
 1145 01a6 0099     	 ldr r1,[sp]
 1146 01a8 0122     	 mov r2,#1
 1147 01aa FFF7FEFF 	 bl I2C_MASTER_lSendStart_Or_RepeatedStart
 1148              	.LVL110:
 674:../Dave/Generated/I2C_MASTER/i2c_master.c ****         (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DIRECT))
 1149              	 .loc 1 674 0
 1150 01ae 6B68     	 ldr r3,[r5,#4]
 1151 01b0 0533     	 add r3,r3,#5
 1152 01b2 DB7F     	 ldrb r3,[r3,#31]
 1153 01b4 013B     	 sub r3,r3,#1
 1154 01b6 012B     	 cmp r3,#1
 1155 01b8 1ED8     	 bhi .L90
 1156              	.LVL111:
 1157              	.L96:
 677:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 1158              	 .loc 1 677 0
 1159 01ba E368     	 ldr r3,[r4,#12]
 1160 01bc A268     	 ldr r2,[r4,#8]
 1161 01be 0133     	 add r3,r3,#1
 1162 01c0 9342     	 cmp r3,r2
 1163 01c2 04D1     	 bne .L74
 1164 01c4 236A     	 ldr r3,[r4,#32]
 1165 01c6 012B     	 cmp r3,#1
 1166 01c8 01D1     	 bne .L74
 1167              	.LVL112:
 1168              	.LBB366:
 1169              	.LBB367:
1735:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1170              	 .loc 2 1735 0
 1171 01ca 2868     	 ldr r0,[r5]
 1172 01cc 0CE0     	 b .L91
 1173              	.L74:
 1174              	.LVL113:
 1175              	.LBE367:
 1176              	.LBE366:
 1177              	.LBB368:
 1178              	.LBB369:
1665:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1179              	 .loc 2 1665 0
 1180 01ce 2868     	 ldr r0,[r5]
 1181 01d0 0DE0     	 b .L77
 1182              	.LVL114:
 1183              	.L72:
 1184              	.LBE369:
 1185              	.LBE368:
 693:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 1186              	 .loc 1 693 0
 1187 01d2 0733     	 add r3,r3,#7
 1188 01d4 DB7F     	 ldrb r3,[r3,#31]
 1189 01d6 002B     	 cmp r3,#0
 1190 01d8 10D1     	 bne .L76
 695:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 1191              	 .loc 1 695 0
 1192 01da E368     	 ldr r3,[r4,#12]
 1193 01dc 0133     	 add r3,r3,#1
 1194 01de 8B42     	 cmp r3,r1
 1195 01e0 05D1     	 bne .L77
 1196 01e2 019B     	 ldr r3,[sp,#4]
 1197 01e4 012B     	 cmp r3,#1
 1198 01e6 02D1     	 bne .L77
 1199              	.LVL115:
 1200              	.L91:
 1201              	.LBB370:
 1202              	.LBB371:
1735:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1203              	 .loc 2 1735 0
 1204 01e8 FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveNack
 1205              	.LVL116:
 1206 01ec 01E0     	 b .L78
 1207              	.L77:
 1208              	.LVL117:
 1209              	.LBE371:
 1210              	.LBE370:
 1211              	.LBB372:
 1212              	.LBB373:
1665:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1213              	 .loc 2 1665 0
 1214 01ee FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveAck
 1215              	.LVL118:
 1216              	.L78:
 1217              	.LBE373:
 1218              	.LBE372:
 704:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 1219              	 .loc 1 704 0
 1220 01f2 E368     	 ldr r3,[r4,#12]
 1221 01f4 0133     	 add r3,r3,#1
 1222 01f6 E360     	 str r3,[r4,#12]
 1223              	.L90:
 1224              	.LBE359:
 1225              	.LBE358:
 865:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 1226              	 .loc 1 865 0
 1227 01f8 0020     	 mov r0,#0
 1228 01fa 1EE0     	 b .L52
 1229              	.LVL119:
 1230              	.L76:
 1231              	.LBB384:
 1232              	.LBB383:
 1233              	.LBB374:
 1234              	.LBB375:
1563:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 1235              	 .loc 4 1563 0
 1236 01fc FC30     	 add r0,r0,#252
 1237              	.LVL120:
 1238 01fe C268     	 ldr r2,[r0,#12]
 1239 0200 0E4B     	 ldr r3,.L97
 1240 0202 1340     	 and r3,r2
 1241 0204 C360     	 str r3,[r0,#12]
 1242              	.LVL121:
 1243              	.L79:
 1244 0206 2868     	 ldr r0,[r5]
 1245              	.LVL122:
 1246              	.LBE375:
 1247              	.LBE374:
 1248              	.LBB376:
 1249              	.LBB377:
 1250              	.LBB378:
1695:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 1251              	 .loc 4 1695 0
 1252 0208 031C     	 mov r3,r0
 1253 020a FC33     	 add r3,r3,#252
 1254 020c 9B69     	 ldr r3,[r3,#24]
 1255              	.LBE378:
 1256              	.LBE377:
 1257              	.LBE376:
 714:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 1258              	 .loc 1 714 0
 1259 020e DB04     	 lsl r3,r3,#19
 1260 0210 F2D4     	 bmi .L90
 716:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 1261              	 .loc 1 716 0
 1262 0212 E368     	 ldr r3,[r4,#12]
 1263 0214 A268     	 ldr r2,[r4,#8]
 1264 0216 9342     	 cmp r3,r2
 1265 0218 EED2     	 bcs .L90
 718:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 1266              	 .loc 1 718 0
 1267 021a E368     	 ldr r3,[r4,#12]
 1268 021c 0133     	 add r3,r3,#1
 1269 021e 9342     	 cmp r3,r2
 1270 0220 05D1     	 bne .L80
 1271 0222 236A     	 ldr r3,[r4,#32]
 1272 0224 012B     	 cmp r3,#1
 1273 0226 02D1     	 bne .L80
 1274              	.LVL123:
 1275              	.LBB379:
 1276              	.LBB380:
1735:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1277              	 .loc 2 1735 0
 1278 0228 FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveNack
 1279              	.LVL124:
 1280 022c 01E0     	 b .L81
 1281              	.LVL125:
 1282              	.L80:
 1283              	.LBE380:
 1284              	.LBE379:
 1285              	.LBB381:
 1286              	.LBB382:
1665:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1287              	 .loc 2 1665 0
 1288 022e FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveAck
 1289              	.LVL126:
 1290              	.L81:
 1291              	.LBE382:
 1292              	.LBE381:
 726:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 1293              	 .loc 1 726 0
 1294 0232 E368     	 ldr r3,[r4,#12]
 1295 0234 0133     	 add r3,r3,#1
 1296 0236 E360     	 str r3,[r4,#12]
 1297 0238 E5E7     	 b .L79
 1298              	.LVL127:
 1299              	.L52:
 1300              	.LBE383:
 1301              	.LBE384:
 869:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 1302              	 .loc 1 869 0
 1303              	 
 1304              	.LVL128:
 1305              	.LVL129:
 1306 023a FEBD     	 pop {r1,r2,r3,r4,r5,r6,r7,pc}
 1307              	.L98:
 1308              	 .align 2
 1309              	.L97:
 1310 023c FFFFFFBF 	 .word -1073741825
 1311              	 .cfi_endproc
 1312              	.LFE170:
 1314              	 .section .text.I2C_MASTER_Receive,"ax",%progbits
 1315              	 .align 1
 1316              	 .global I2C_MASTER_Receive
 1317              	 .code 16
 1318              	 .thumb_func
 1320              	I2C_MASTER_Receive:
 1321              	.LFB164:
 488:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 1322              	 .loc 1 488 0
 1323              	 .cfi_startproc
 1324              	.LVL130:
 1325 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 1326              	.LCFI9:
 1327              	 .cfi_def_cfa_offset 20
 1328              	 .cfi_offset 4,-20
 1329              	 .cfi_offset 5,-16
 1330              	 .cfi_offset 6,-12
 1331              	 .cfi_offset 7,-8
 1332              	 .cfi_offset 14,-4
 1333 0002 87B0     	 sub sp,sp,#28
 1334              	.LCFI10:
 1335              	 .cfi_def_cfa_offset 48
 488:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 1336              	 .loc 1 488 0
 1337 0004 0CAC     	 add r4,sp,#48
 1338              	.LVL131:
 1339 0006 40CC     	 ldmia r4!,{r6}
 1340              	.LVL132:
 1341 0008 0593     	 str r3,[sp,#20]
 1342 000a 2778     	 ldrb r7,[r4]
 1343 000c 0EAC     	 add r4,sp,#56
 1344              	.LVL133:
 1345 000e 2578     	 ldrb r5,[r4]
 493:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 1346              	 .loc 1 493 0
 1347 0010 4468     	 ldr r4,[r0,#4]
 1348              	.LVL134:
 1349 0012 0634     	 add r4,r4,#6
 1350 0014 E47F     	 ldrb r4,[r4,#31]
 1351 0016 A446     	 mov ip,r4
 1352 0018 6346     	 mov r3,ip
 1353              	.LVL135:
 491:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 1354              	 .loc 1 491 0
 1355 001a 0224     	 mov r4,#2
 493:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 1356              	 .loc 1 493 0
 1357 001c 002B     	 cmp r3,#0
 1358 001e 06D1     	 bne .L100
 496:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
 1359              	 .loc 1 496 0
 1360 0020 0096     	 str r6,[sp]
 1361 0022 0197     	 str r7,[sp,#4]
 1362 0024 0295     	 str r5,[sp,#8]
 1363 0026 059B     	 ldr r3,[sp,#20]
 1364 0028 FFF7FEFF 	 bl I2C_MASTER_StartReceiveIRQ
 1365              	.LVL136:
 1366 002c 041C     	 mov r4,r0
 1367              	.LVL137:
 1368              	.L100:
 513:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 1369              	 .loc 1 513 0
 1370 002e 201C     	 mov r0,r4
 1371 0030 07B0     	 add sp,sp,#28
 1372              	 
 1373              	.LVL138:
 1374 0032 F0BD     	 pop {r4,r5,r6,r7,pc}
 1375              	 .cfi_endproc
 1376              	.LFE164:
 1378              	 .section .text.I2C_MASTER_ReceiveHandler,"ax",%progbits
 1379              	 .align 1
 1380              	 .global I2C_MASTER_ReceiveHandler
 1381              	 .code 16
 1382              	 .thumb_func
 1384              	I2C_MASTER_ReceiveHandler:
 1385              	.LFB171:
 880:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 1386              	 .loc 1 880 0
 1387              	 .cfi_startproc
 1388              	.LVL139:
 1389 0000 F7B5     	 push {r0,r1,r2,r4,r5,r6,r7,lr}
 1390              	.LCFI11:
 1391              	 .cfi_def_cfa_offset 32
 1392              	 .cfi_offset 0,-32
 1393              	 .cfi_offset 1,-28
 1394              	 .cfi_offset 2,-24
 1395              	 .cfi_offset 4,-20
 1396              	 .cfi_offset 5,-16
 1397              	 .cfi_offset 6,-12
 1398              	 .cfi_offset 7,-8
 1399              	 .cfi_offset 14,-4
 885:../Dave/Generated/I2C_MASTER/i2c_master.c ****   fifo_lindex = 0U;
 1400              	 .loc 1 885 0
 1401 0002 8468     	 ldr r4,[r0,#8]
 1402              	.LVL140:
 888:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 1403              	 .loc 1 888 0
 1404 0004 271C     	 mov r7,r4
 1405 0006 0837     	 add r7,r7,#8
 1406 0008 FB7F     	 ldrb r3,[r7,#31]
 1407 000a 002B     	 cmp r3,#0
 1408 000c 00D1     	 bne .LCB1549
 1409 000e ACE0     	 b .L102
 1410              	.LCB1549:
 890:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 1411              	 .loc 1 890 0
 1412 0010 4368     	 ldr r3,[r0,#4]
 1413 0012 051C     	 mov r5,r0
 1414 0014 0833     	 add r3,r3,#8
 1415 0016 DB7F     	 ldrb r3,[r3,#31]
 1416 0018 002B     	 cmp r3,#0
 1417 001a 78D0     	 beq .L132
 1418              	.LVL141:
 1419              	.L105:
 1420 001c 2868     	 ldr r0,[r5]
 1421              	.LVL142:
 1422              	.LBB385:
 1423              	.LBB386:
 1424              	.LBB387:
1943:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1944:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1945:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1946:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1947:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1948:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is full
1949:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO is not full.
1950:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1951:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1952:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is full. \n\n
1953:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO filling level reaches the configured size, FIFO full flag is set.
1954:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Any data received when the receive FIFO is full, is lost.
1955:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1956:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1957:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_IsEmpty(), XMC_USIC_CH_RXFIFO_Flush() \n\n\n
1958:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1959:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1960:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1961:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_RFULL_Msk);
1962:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1963:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1964:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1965:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1966:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1967:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is empty,
1968:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO has some data.
1969:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1970:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1971:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is empty. \n\n
1972:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO is empty, received data will be put in receive FIFO.
1973:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt
1974:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO will set the receive FIFO error flag.
1975:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1976:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1977:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
1978:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1979:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1980:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1981:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_REMPTY_Msk);
 1425              	 .loc 4 1981 0
 1426 001e 031C     	 mov r3,r0
 1427 0020 FC33     	 add r3,r3,#252
 1428 0022 9E69     	 ldr r6,[r3,#24]
 1429 0024 0823     	 mov r3,#8
 1430 0026 1E40     	 and r6,r3
 1431              	.LBE387:
 1432              	.LBE386:
 1433              	.LBE385:
 895:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 1434              	 .loc 1 895 0
 1435 0028 15D1     	 bne .L107
 898:../Dave/Generated/I2C_MASTER/i2c_master.c ****         ptr_runtime->rx_data_index++;
 1436              	 .loc 1 898 0
 1437 002a 6268     	 ldr r2,[r4,#4]
 1438 002c 6369     	 ldr r3,[r4,#20]
 1439 002e D318     	 add r3,r2,r3
 1440 0030 0193     	 str r3,[sp,#4]
 1441              	.LVL143:
 1442              	.LBB388:
 1443              	.LBB389:
1450:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1444              	 .loc 2 1450 0
 1445 0032 FFF7FEFF 	 bl XMC_I2C_CH_GetReceivedData
 1446              	.LVL144:
 1447              	.LBE389:
 1448              	.LBE388:
 898:../Dave/Generated/I2C_MASTER/i2c_master.c ****         ptr_runtime->rx_data_index++;
 1449              	 .loc 1 898 0
 1450 0036 019B     	 ldr r3,[sp,#4]
 1451 0038 1870     	 strb r0,[r3]
 899:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 1452              	 .loc 1 899 0
 1453 003a 6369     	 ldr r3,[r4,#20]
 901:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 1454              	 .loc 1 901 0
 1455 003c 2269     	 ldr r2,[r4,#16]
 899:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 1456              	 .loc 1 899 0
 1457 003e 0133     	 add r3,r3,#1
 1458 0040 6361     	 str r3,[r4,#20]
 901:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 1459              	 .loc 1 901 0
 1460 0042 6369     	 ldr r3,[r4,#20]
 1461 0044 9342     	 cmp r3,r2
 1462 0046 E9D1     	 bne .L105
 1463              	.LVL145:
 1464              	.LBB390:
 1465              	.LBB391:
1876:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 1466              	 .loc 4 1876 0
 1467 0048 2B68     	 ldr r3,[r5]
 1468              	.LBE391:
 1469              	.LBE390:
 904:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 1470              	 .loc 1 904 0
 1471 004a FE77     	 strb r6,[r7,#31]
 1472              	.LBB393:
 1473              	.LBB392:
1876:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 1474              	 .loc 4 1876 0
 1475 004c FC33     	 add r3,r3,#252
 1476 004e 1969     	 ldr r1,[r3,#16]
 1477 0050 464A     	 ldr r2,.L133
 1478 0052 0A40     	 and r2,r1
 1479 0054 1A61     	 str r2,[r3,#16]
 1480              	.LVL146:
 1481              	.L107:
 1482              	.LBE392:
 1483              	.LBE393:
 916:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 1484              	 .loc 1 916 0
 1485 0056 6269     	 ldr r2,[r4,#20]
 1486 0058 2369     	 ldr r3,[r4,#16]
 1487 005a 9A42     	 cmp r2,r3
 1488 005c 40D2     	 bcs .L110
 918:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 1489              	 .loc 1 918 0
 1490 005e 6169     	 ldr r1,[r4,#20]
 1491 0060 281C     	 mov r0,r5
 1492 0062 591A     	 sub r1,r3,r1
 1493 0064 FFF7FEFF 	 bl I2C_MASTER_lReconfigureRxFIFO
 1494              	.LVL147:
 920:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 1495              	 .loc 1 920 0
 1496 0068 6968     	 ldr r1,[r5,#4]
 1497 006a CB1D     	 add r3,r1,#7
 1498 006c DA7F     	 ldrb r2,[r3,#31]
 1499 006e 002A     	 cmp r2,#0
 1500 0070 28D0     	 beq .L111
 922:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                     ((uint32_t)1 << (uint32_t)handle->config->rxFIF
 1501              	 .loc 1 922 0
 1502 0072 0123     	 mov r3,#1
 1503 0074 181C     	 mov r0,r3
 923:../Dave/Generated/I2C_MASTER/i2c_master.c ****        }
 1504              	 .loc 1 923 0
 1505 0076 0831     	 add r1,r1,#8
 922:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                     ((uint32_t)1 << (uint32_t)handle->config->rxFIF
 1506              	 .loc 1 922 0
 1507 0078 C97F     	 ldrb r1,[r1,#31]
 1508 007a 9040     	 lsl r0,r0,r2
 1509 007c 8B40     	 lsl r3,r3,r1
 1510              	.LVL148:
 1511 007e 8342     	 cmp r3,r0
 1512 0080 00D9     	 bls .L112
 1513 0082 031C     	 mov r3,r0
 1514              	.L112:
 1515 0084 0027     	 mov r7,#0
 1516 0086 DEB2     	 uxtb r6,r3
 1517              	.LVL149:
 1518              	.L113:
 1519 0088 2868     	 ldr r0,[r5]
 1520              	.LVL150:
 1521              	.LBB394:
 1522              	.LBB395:
 1523              	.LBB396:
1695:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 1524              	 .loc 4 1695 0
 1525 008a 031C     	 mov r3,r0
 1526 008c FC33     	 add r3,r3,#252
 1527 008e 9B69     	 ldr r3,[r3,#24]
 1528              	.LBE396:
 1529              	.LBE395:
 1530              	.LBE394:
 935:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 1531              	 .loc 1 935 0
 1532 0090 DB04     	 lsl r3,r3,#19
 1533 0092 25D4     	 bmi .L110
 937:../Dave/Generated/I2C_MASTER/i2c_master.c ****             {
 1534              	 .loc 1 937 0
 1535 0094 E368     	 ldr r3,[r4,#12]
 1536 0096 A268     	 ldr r2,[r4,#8]
 1537 0098 9342     	 cmp r3,r2
 1538 009a 21D2     	 bcs .L110
 939:../Dave/Generated/I2C_MASTER/i2c_master.c ****               {
 1539              	 .loc 1 939 0
 1540 009c E368     	 ldr r3,[r4,#12]
 1541 009e 0133     	 add r3,r3,#1
 1542 00a0 9342     	 cmp r3,r2
 1543 00a2 05D1     	 bne .L115
 939:../Dave/Generated/I2C_MASTER/i2c_master.c ****               {
 1544              	 .loc 1 939 0 is_stmt 0 discriminator 1
 1545 00a4 236A     	 ldr r3,[r4,#32]
 1546 00a6 012B     	 cmp r3,#1
 1547 00a8 02D1     	 bne .L115
 1548              	.LVL151:
 1549              	.LBB397:
 1550              	.LBB398:
1735:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1551              	 .loc 2 1735 0 is_stmt 1
 1552 00aa FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveNack
 1553              	.LVL152:
 1554 00ae 01E0     	 b .L116
 1555              	.LVL153:
 1556              	.L115:
 1557              	.LBE398:
 1558              	.LBE397:
 1559              	.LBB399:
 1560              	.LBB400:
1665:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1561              	 .loc 2 1665 0
 1562 00b0 FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveAck
 1563              	.LVL154:
 1564              	.L116:
 1565              	.LBE400:
 1566              	.LBE399:
 947:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 1567              	 .loc 1 947 0
 1568 00b4 E368     	 ldr r3,[r4,#12]
 950:../Dave/Generated/I2C_MASTER/i2c_master.c ****               {
 1569              	 .loc 1 950 0
 1570 00b6 0137     	 add r7,r7,#1
 1571              	.LVL155:
 947:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 1572              	 .loc 1 947 0
 1573 00b8 0133     	 add r3,r3,#1
 950:../Dave/Generated/I2C_MASTER/i2c_master.c ****               {
 1574              	 .loc 1 950 0
 1575 00ba FFB2     	 uxtb r7,r7
 1576              	.LVL156:
 947:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 1577              	 .loc 1 947 0
 1578 00bc E360     	 str r3,[r4,#12]
 950:../Dave/Generated/I2C_MASTER/i2c_master.c ****               {
 1579              	 .loc 1 950 0
 1580 00be B742     	 cmp r7,r6
 1581 00c0 E2D3     	 bcc .L113
 1582 00c2 0DE0     	 b .L110
 1583              	.LVL157:
 1584              	.L111:
 967:../Dave/Generated/I2C_MASTER/i2c_master.c ****          {
 1585              	 .loc 1 967 0
 1586 00c4 E368     	 ldr r3,[r4,#12]
 1587 00c6 A268     	 ldr r2,[r4,#8]
 1588 00c8 0133     	 add r3,r3,#1
 1589 00ca 9342     	 cmp r3,r2
 1590 00cc 49D1     	 bne .L118
 967:../Dave/Generated/I2C_MASTER/i2c_master.c ****          {
 1591              	 .loc 1 967 0 is_stmt 0 discriminator 1
 1592 00ce 236A     	 ldr r3,[r4,#32]
 1593 00d0 012B     	 cmp r3,#1
 1594 00d2 46D1     	 bne .L118
 1595              	.LVL158:
 1596              	.LBB401:
 1597              	.LBB402:
1735:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1598              	 .loc 2 1735 0 is_stmt 1
 1599 00d4 2868     	 ldr r0,[r5]
 1600 00d6 FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveNack
 1601              	.LVL159:
 1602              	.L119:
 1603              	.LBE402:
 1604              	.LBE401:
 976:../Dave/Generated/I2C_MASTER/i2c_master.c ****        }
 1605              	 .loc 1 976 0
 1606 00da E368     	 ldr r3,[r4,#12]
 1607 00dc 0133     	 add r3,r3,#1
 1608 00de E360     	 str r3,[r4,#12]
 1609              	.LVL160:
 1610              	.L110:
 982:../Dave/Generated/I2C_MASTER/i2c_master.c ****      {
 1611              	 .loc 1 982 0
 1612 00e0 6369     	 ldr r3,[r4,#20]
 1613 00e2 2269     	 ldr r2,[r4,#16]
 1614 00e4 9342     	 cmp r3,r2
 1615 00e6 40D1     	 bne .L102
 985:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                                    (uint32_t)XMC_USIC_CH_RXFIFO_EVE
 1616              	 .loc 1 985 0
 1617 00e8 2B68     	 ldr r3,[r5]
 1618              	.LVL161:
 1619              	.LBB403:
 1620              	.LBB404:
1876:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 1621              	 .loc 4 1876 0
 1622 00ea 204A     	 ldr r2,.L133
 1623 00ec 191C     	 mov r1,r3
 1624 00ee FC31     	 add r1,r1,#252
 1625 00f0 0869     	 ldr r0,[r1,#16]
 1626 00f2 0240     	 and r2,r0
 1627 00f4 0A61     	 str r2,[r1,#16]
 1628              	.LVL162:
 1629              	.LBE404:
 1630              	.LBE403:
 1631              	.LBB405:
 1632              	.LBB406:
1217:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 1633              	 .loc 4 1217 0
 1634 00f6 196C     	 ldr r1,[r3,#64]
 1635 00f8 1D4A     	 ldr r2,.L133+4
 1636 00fa 0A40     	 and r2,r1
 1637 00fc 1A64     	 str r2,[r3,#64]
 1638              	.LVL163:
 1639              	.L131:
 1640              	.LBE406:
 1641              	.LBE405:
 992:../Dave/Generated/I2C_MASTER/i2c_master.c ****        {
 1642              	 .loc 1 992 0
 1643 00fe 2834     	 add r4,r4,#40
 1644              	.LVL164:
 1645 0100 2378     	 ldrb r3,[r4]
 1646 0102 002B     	 cmp r3,#0
 1647 0104 31D0     	 beq .L102
 994:../Dave/Generated/I2C_MASTER/i2c_master.c ****        }
 1648              	 .loc 1 994 0
 1649 0106 281C     	 mov r0,r5
 1650 0108 FFF7FEFF 	 bl I2C_MASTER_lSendStop_JumpTo_RxCallback
 1651              	.LVL165:
 1652 010c 2DE0     	 b .L102
 1653              	.LVL166:
 1654              	.L132:
1003:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->rx_data_index++;
 1655              	 .loc 1 1003 0
 1656 010e 6368     	 ldr r3,[r4,#4]
 1657 0110 6669     	 ldr r6,[r4,#20]
 1658              	.LBB407:
 1659              	.LBB408:
1450:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1660              	 .loc 2 1450 0
 1661 0112 0068     	 ldr r0,[r0]
 1662              	.LVL167:
 1663              	.LBE408:
 1664              	.LBE407:
1003:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->rx_data_index++;
 1665              	 .loc 1 1003 0
 1666 0114 9E19     	 add r6,r3,r6
 1667              	.LVL168:
 1668              	.LBB410:
 1669              	.LBB409:
1450:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1670              	 .loc 2 1450 0
 1671 0116 FFF7FEFF 	 bl XMC_I2C_CH_GetReceivedData
 1672              	.LVL169:
 1673              	.LBE409:
 1674              	.LBE410:
1003:../Dave/Generated/I2C_MASTER/i2c_master.c ****       ptr_runtime->rx_data_index++;
 1675              	 .loc 1 1003 0
 1676 011a 3070     	 strb r0,[r6]
1004:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 1677              	 .loc 1 1004 0
 1678 011c 6369     	 ldr r3,[r4,#20]
1006:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 1679              	 .loc 1 1006 0
 1680 011e 2269     	 ldr r2,[r4,#16]
1004:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 1681              	 .loc 1 1004 0
 1682 0120 0133     	 add r3,r3,#1
 1683 0122 6361     	 str r3,[r4,#20]
1006:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 1684              	 .loc 1 1006 0
 1685 0124 6369     	 ldr r3,[r4,#20]
 1686 0126 9342     	 cmp r3,r2
 1687 0128 15D2     	 bcs .L121
1008:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 1688              	 .loc 1 1008 0
 1689 012a E268     	 ldr r2,[r4,#12]
 1690 012c A368     	 ldr r3,[r4,#8]
 1691 012e 9A42     	 cmp r2,r3
 1692 0130 1BD2     	 bcs .L102
1011:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 1693              	 .loc 1 1011 0
 1694 0132 E268     	 ldr r2,[r4,#12]
 1695 0134 013B     	 sub r3,r3,#1
 1696 0136 9A42     	 cmp r2,r3
 1697 0138 06D1     	 bne .L122
1011:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 1698              	 .loc 1 1011 0 is_stmt 0 discriminator 1
 1699 013a 236A     	 ldr r3,[r4,#32]
 1700 013c 012B     	 cmp r3,#1
 1701 013e 03D1     	 bne .L122
 1702              	.LVL170:
 1703              	.LBB411:
 1704              	.LBB412:
1735:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1705              	 .loc 2 1735 0 is_stmt 1
 1706 0140 2868     	 ldr r0,[r5]
 1707 0142 FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveNack
 1708              	.LVL171:
 1709 0146 02E0     	 b .L123
 1710              	.LVL172:
 1711              	.L122:
 1712              	.LBE412:
 1713              	.LBE411:
 1714              	.LBB413:
 1715              	.LBB414:
1665:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1716              	 .loc 2 1665 0
 1717 0148 2868     	 ldr r0,[r5]
 1718 014a FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveAck
 1719              	.LVL173:
 1720              	.L123:
 1721              	.LBE414:
 1722              	.LBE413:
1019:../Dave/Generated/I2C_MASTER/i2c_master.c ****         }
 1723              	 .loc 1 1019 0
 1724 014e E368     	 ldr r3,[r4,#12]
 1725 0150 0133     	 add r3,r3,#1
 1726 0152 E360     	 str r3,[r4,#12]
 1727 0154 09E0     	 b .L102
 1728              	.L121:
1025:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                                              (uint32_t)XMC_USIC_CH_EVENT_STANDARD_R
 1729              	 .loc 1 1025 0
 1730 0156 2A68     	 ldr r2,[r5]
 1731              	.LVL174:
 1732              	.LBB415:
 1733              	.LBB416:
1217:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 1734              	 .loc 4 1217 0
 1735 0158 054B     	 ldr r3,.L133+4
 1736 015a 116C     	 ldr r1,[r2,#64]
 1737 015c 0B40     	 and r3,r1
 1738 015e 1364     	 str r3,[r2,#64]
 1739 0160 CDE7     	 b .L131
 1740              	.LVL175:
 1741              	.L118:
 1742              	.LBE416:
 1743              	.LBE415:
 1744              	.LBB417:
 1745              	.LBB418:
1665:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1746              	 .loc 2 1665 0
 1747 0162 2868     	 ldr r0,[r5]
 1748 0164 FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveAck
 1749              	.LVL176:
 1750 0168 B7E7     	 b .L119
 1751              	.LVL177:
 1752              	.L102:
 1753              	.LBE418:
 1754              	.LBE417:
1034:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 1755              	 .loc 1 1034 0
 1756              	 
 1757 016a F7BD     	 pop {r0,r1,r2,r4,r5,r6,r7,pc}
 1758              	.L134:
 1759              	 .align 2
 1760              	.L133:
 1761 016c FFFFFF9F 	 .word -1610612737
 1762 0170 FF3FFFFF 	 .word -49153
 1763              	 .cfi_endproc
 1764              	.LFE171:
 1766              	 .section .text.I2C_MASTER_ProtocolHandler,"ax",%progbits
 1767              	 .align 1
 1768              	 .global I2C_MASTER_ProtocolHandler
 1769              	 .code 16
 1770              	 .thumb_func
 1772              	I2C_MASTER_ProtocolHandler:
 1773              	.LFB174:
1099:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint32_t psr_status;
 1774              	 .loc 1 1099 0
 1775              	 .cfi_startproc
 1776              	.LVL178:
 1777 0000 38B5     	 push {r3,r4,r5,lr}
 1778              	.LCFI12:
 1779              	 .cfi_def_cfa_offset 16
 1780              	 .cfi_offset 3,-16
 1781              	 .cfi_offset 4,-12
 1782              	 .cfi_offset 5,-8
 1783              	 .cfi_offset 14,-4
1102:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 1784              	 .loc 1 1102 0
 1785 0002 0368     	 ldr r3,[r0]
 1786              	.LVL179:
1099:../Dave/Generated/I2C_MASTER/i2c_master.c ****   uint32_t psr_status;
 1787              	 .loc 1 1099 0
 1788 0004 041C     	 mov r4,r0
 1789              	.LBB419:
 1790              	.LBB420:
 685:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** }
 1791              	 .loc 3 685 0
 1792 0006 9D6C     	 ldr r5,[r3,#72]
 1793              	.LBE420:
 1794              	.LBE419:
1105:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 1795              	 .loc 1 1105 0
 1796 0008 4368     	 ldr r3,[r0,#4]
 1797              	.LVL180:
 1798 000a 9B69     	 ldr r3,[r3,#24]
 1799 000c 002B     	 cmp r3,#0
 1800 000e 07D0     	 beq .L136
1105:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 1801              	 .loc 1 1105 0 is_stmt 0 discriminator 1
 1802 0010 2021     	 mov r1,#32
 1803 0012 0D42     	 tst r5,r1
 1804 0014 04D0     	 beq .L136
1107:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->nack_cbhandler();
 1805              	 .loc 1 1107 0 is_stmt 1
 1806 0016 FFF7FEFF 	 bl I2C_MASTER_ClearFlag
 1807              	.LVL181:
1108:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 1808              	 .loc 1 1108 0
 1809 001a 6368     	 ldr r3,[r4,#4]
 1810 001c 9B69     	 ldr r3,[r3,#24]
 1811 001e 9847     	 blx r3
 1812              	.LVL182:
 1813              	.L136:
1112:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 1814              	 .loc 1 1112 0
 1815 0020 6368     	 ldr r3,[r4,#4]
 1816 0022 DB69     	 ldr r3,[r3,#28]
 1817 0024 002B     	 cmp r3,#0
 1818 0026 08D0     	 beq .L137
1112:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 1819              	 .loc 1 1112 0 is_stmt 0 discriminator 1
 1820 0028 4021     	 mov r1,#64
 1821 002a 0D42     	 tst r5,r1
 1822 002c 05D0     	 beq .L137
1114:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->arbitration_cbhandler();
 1823              	 .loc 1 1114 0 is_stmt 1
 1824 002e 201C     	 mov r0,r4
 1825 0030 FFF7FEFF 	 bl I2C_MASTER_ClearFlag
 1826              	.LVL183:
1115:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 1827              	 .loc 1 1115 0
 1828 0034 6368     	 ldr r3,[r4,#4]
 1829 0036 DB69     	 ldr r3,[r3,#28]
 1830 0038 9847     	 blx r3
 1831              	.LVL184:
 1832              	.L137:
1119:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 1833              	 .loc 1 1119 0
 1834 003a 6368     	 ldr r3,[r4,#4]
 1835 003c 1B6A     	 ldr r3,[r3,#32]
 1836 003e 002B     	 cmp r3,#0
 1837 0040 0BD0     	 beq .L135
1119:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 1838              	 .loc 1 1119 0 is_stmt 0 discriminator 1
 1839 0042 8123     	 mov r3,#129
 1840 0044 5B00     	 lsl r3,r3,#1
 1841 0046 1D42     	 tst r5,r3
 1842 0048 07D0     	 beq .L135
1121:../Dave/Generated/I2C_MASTER/i2c_master.c ****     handle->config->error_cbhandler();
 1843              	 .loc 1 1121 0 is_stmt 1
 1844 004a 8021     	 mov r1,#128
 1845 004c 201C     	 mov r0,r4
 1846 004e 4900     	 lsl r1,r1,#1
 1847 0050 FFF7FEFF 	 bl I2C_MASTER_ClearFlag
 1848              	.LVL185:
1122:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 1849              	 .loc 1 1122 0
 1850 0054 6368     	 ldr r3,[r4,#4]
 1851 0056 1B6A     	 ldr r3,[r3,#32]
 1852 0058 9847     	 blx r3
 1853              	.LVL186:
 1854              	.L135:
1124:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 1855              	 .loc 1 1124 0
 1856              	 
 1857              	.LVL187:
 1858 005a 38BD     	 pop {r3,r4,r5,pc}
 1859              	 .cfi_endproc
 1860              	.LFE174:
 1862              	 .section .text.I2C_MASTER_TransmitHandler,"ax",%progbits
 1863              	 .align 1
 1864              	 .global I2C_MASTER_TransmitHandler
 1865              	 .code 16
 1866              	 .thumb_func
 1868              	I2C_MASTER_TransmitHandler:
 1869              	.LFB162:
 268:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 1870              	 .loc 1 268 0
 1871              	 .cfi_startproc
 1872              	.LVL188:
 276:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                         (uint32_t)XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST |
 1873              	 .loc 1 276 0
 1874 0000 B123     	 mov r3,#177
 268:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 1875              	 .loc 1 268 0
 1876 0002 70B5     	 push {r4,r5,r6,lr}
 1877              	.LCFI13:
 1878              	 .cfi_def_cfa_offset 16
 1879              	 .cfi_offset 4,-16
 1880              	 .cfi_offset 5,-12
 1881              	 .cfi_offset 6,-8
 1882              	 .cfi_offset 14,-4
 268:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_RUNTIME_t * ptr_runtime;
 1883              	 .loc 1 268 0
 1884 0004 051C     	 mov r5,r0
 272:../Dave/Generated/I2C_MASTER/i2c_master.c ****   fifo_min = 0U;
 1885              	 .loc 1 272 0
 1886 0006 8468     	 ldr r4,[r0,#8]
 1887              	.LVL189:
 1888              	.LBB463:
 1889              	.LBB464:
 217:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 1890              	 .loc 1 217 0
 1891 0008 0068     	 ldr r0,[r0]
 1892              	.LVL190:
 1893              	.LBE464:
 1894              	.LBE463:
 276:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                         (uint32_t)XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST |
 1895              	 .loc 1 276 0
 1896 000a 5B00     	 lsl r3,r3,#1
 1897              	.LBB468:
 1898              	.LBB467:
 1899              	.LBB465:
 1900              	.LBB466:
 685:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_i2c.h **** }
 1901              	 .loc 3 685 0
 1902 000c 826C     	 ldr r2,[r0,#72]
 1903              	.LBE466:
 1904              	.LBE465:
 1905              	.LBE467:
 1906              	.LBE468:
 276:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                         (uint32_t)XMC_I2C_CH_STATUS_FLAG_ARBITRATION_LOST |
 1907              	 .loc 1 276 0
 1908 000e 1A42     	 tst r2,r3
 1909 0010 0DD0     	 beq .L158
 1910              	.LVL191:
 1911              	.LBB469:
 1912              	.LBB470:
1563:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 1913              	 .loc 4 1563 0
 1914 0012 021C     	 mov r2,r0
 1915 0014 FC32     	 add r2,r2,#252
 1916 0016 D168     	 ldr r1,[r2,#12]
 1917 0018 564B     	 ldr r3,.L191
 1918 001a 0B40     	 and r3,r1
 1919 001c D360     	 str r3,[r2,#12]
 1920              	.LVL192:
 1921              	.LBE470:
 1922              	.LBE469:
 1923              	.LBB471:
 1924              	.LBB472:
1217:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 1925              	 .loc 4 1217 0
 1926 001e 026C     	 ldr r2,[r0,#64]
 1927 0020 554B     	 ldr r3,.L191+4
 1928 0022 1340     	 and r3,r2
 1929 0024 0364     	 str r3,[r0,#64]
 1930              	.LBE472:
 1931              	.LBE471:
 285:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
 1932              	 .loc 1 285 0
 1933 0026 281C     	 mov r0,r5
 1934              	.LVL193:
 1935 0028 FFF7FEFF 	 bl I2C_MASTER_ProtocolHandler
 1936              	.LVL194:
 1937 002c A0E0     	 b .L157
 1938              	.LVL195:
 1939              	.L158:
 292:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 1940              	 .loc 1 292 0
 1941 002e A269     	 ldr r2,[r4,#24]
 1942 0030 6B68     	 ldr r3,[r5,#4]
 1943 0032 002A     	 cmp r2,#0
 1944 0034 4FD1     	 bne .L160
 294:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 1945              	 .loc 1 294 0
 1946 0036 DA1D     	 add r2,r3,#7
 1947 0038 D17F     	 ldrb r1,[r2,#31]
 1948 003a A268     	 ldr r2,[r4,#8]
 1949 003c 0029     	 cmp r1,#0
 1950 003e 3ED0     	 beq .L161
 296:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 1951              	 .loc 1 296 0
 1952 0040 E168     	 ldr r1,[r4,#12]
 1953 0042 9142     	 cmp r1,r2
 1954 0044 1DD2     	 bcs .L162
 1955              	.LVL196:
 1956              	.LBB473:
 1957              	.LBB474:
1595:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 1958              	 .loc 2 1595 0
 1959 0046 8026     	 mov r6,#128
 1960 0048 F605     	 lsl r6,r6,#23
 1961 004a 311C     	 mov r1,r6
 1962 004c FFF7FEFF 	 bl XMC_I2C_CH_DisableEvent
 1963              	.LVL197:
 1964              	.LBE474:
 1965              	.LBE473:
 1966              	.LBB475:
 1967              	.LBB476:
1541:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 1968              	 .loc 4 1541 0
 1969 0050 2B68     	 ldr r3,[r5]
 1970 0052 FC33     	 add r3,r3,#252
 1971 0054 DA68     	 ldr r2,[r3,#12]
 1972 0056 1643     	 orr r6,r2
 1973 0058 DE60     	 str r6,[r3,#12]
 1974              	.LVL198:
 1975              	.L163:
 1976 005a 2868     	 ldr r0,[r5]
 1977              	.LVL199:
 1978              	.LBE476:
 1979              	.LBE475:
 1980              	.LBB477:
 1981              	.LBB478:
 1982              	.LBB479:
1695:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 1983              	 .loc 4 1695 0
 1984 005c 031C     	 mov r3,r0
 1985 005e FC33     	 add r3,r3,#252
 1986 0060 9B69     	 ldr r3,[r3,#24]
 1987              	.LBE479:
 1988              	.LBE478:
 1989              	.LBE477:
 301:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 1990              	 .loc 1 301 0
 1991 0062 DB04     	 lsl r3,r3,#19
 1992 0064 00D5     	 bpl .LCB2171
 1993 0066 83E0     	 b .L157
 1994              	.LCB2171:
 304:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 1995              	 .loc 1 304 0
 1996 0068 E368     	 ldr r3,[r4,#12]
 1997 006a A268     	 ldr r2,[r4,#8]
 1998 006c 9342     	 cmp r3,r2
 1999 006e 7FD2     	 bcs .L157
 307:../Dave/Generated/I2C_MASTER/i2c_master.c ****             ptr_runtime->tx_data_index++;
 2000              	 .loc 1 307 0
 2001 0070 E368     	 ldr r3,[r4,#12]
 2002              	.LVL200:
 2003              	.LBB480:
 2004              	.LBB481:
1503:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 2005              	 .loc 2 1503 0
 2006 0072 2268     	 ldr r2,[r4]
 2007 0074 D15C     	 ldrb r1,[r2,r3]
 2008 0076 FFF7FEFF 	 bl XMC_I2C_CH_MasterTransmit
 2009              	.LVL201:
 2010              	.LBE481:
 2011              	.LBE480:
 308:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 2012              	 .loc 1 308 0
 2013 007a E368     	 ldr r3,[r4,#12]
 2014 007c 0133     	 add r3,r3,#1
 2015 007e E360     	 str r3,[r4,#12]
 2016 0080 EBE7     	 b .L163
 2017              	.LVL202:
 2018              	.L162:
 2019              	.LBB482:
 2020              	.LBB483:
1563:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 2021              	 .loc 4 1563 0
 2022 0082 FC30     	 add r0,r0,#252
 2023              	.LVL203:
 2024 0084 C168     	 ldr r1,[r0,#12]
 2025 0086 3B4A     	 ldr r2,.L191
 2026              	.LBE483:
 2027              	.LBE482:
 320:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 2028              	 .loc 1 320 0
 2029 0088 2833     	 add r3,r3,#40
 2030              	.LBB485:
 2031              	.LBB484:
1563:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 2032              	 .loc 4 1563 0
 2033 008a 0A40     	 and r2,r1
 2034 008c C260     	 str r2,[r0,#12]
 2035              	.LBE484:
 2036              	.LBE485:
 320:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 2037              	 .loc 1 320 0
 2038 008e 1A78     	 ldrb r2,[r3]
 2039              	.LVL204:
 2040              	.LBB486:
 2041              	.LBB487:
 2042              	 .file 5 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include/core_cm0.h"
   1:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**************************************************************************//**
   2:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  * @file     core_cm0.h
   3:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  * @version  V5.0.6
   5:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  * @date     13. March 2019
   6:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
   7:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /*
   8:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  *
  10:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  *
  12:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  * not use this file except in compliance with the License.
  14:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  * You may obtain a copy of the License at
  15:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  *
  16:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  *
  18:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  * See the License for the specific language governing permissions and
  22:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  * limitations under the License.
  23:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
  24:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  25:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #if   defined ( __ICCARM__ )
  26:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #elif defined (__clang__)
  28:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  29:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #endif
  30:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  31:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  32:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define __CORE_CM0_H_GENERIC
  33:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  34:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #include <stdint.h>
  35:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  36:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
  37:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  extern "C" {
  38:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #endif
  39:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  40:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
  41:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  44:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  46:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  47:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****      Unions are used for effective representation of core registers.
  49:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  50:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****      Function-like macros are used to allow more efficient code.
  52:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
  53:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  54:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  55:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /*******************************************************************************
  56:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  *                 CMSIS definitions
  57:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
  58:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
  59:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup Cortex_M0
  60:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   @{
  61:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
  62:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  63:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #include "cmsis_version.h"
  64:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  
  65:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /*  CMSIS CM0 definitions */
  66:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  69:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  71:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define __CORTEX_M                (0U)                                   /*!< Cortex-M Core */
  72:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  73:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     This core does not support an FPU at all
  75:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** */
  76:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define __FPU_USED       0U
  77:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  78:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #if defined ( __CC_ARM )
  79:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __TARGET_FPU_VFP
  80:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #endif
  82:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  83:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __ARM_FP
  85:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #endif
  87:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  88:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __GNUC__ )
  89:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #endif
  92:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  93:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __ICCARM__ )
  94:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __ARMVFP__
  95:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #endif
  97:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
  98:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __TI_ARM__ )
  99:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
 100:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 102:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 103:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __TASKING__ )
 104:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __FPU_VFP__
 105:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 107:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 108:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __CSMC__ )
 109:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #if ( __CSMC__ & 0x400U)
 110:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 112:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 113:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #endif
 114:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 115:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 117:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 118:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 119:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** }
 120:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #endif
 121:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 122:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 123:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 124:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #ifndef __CMSIS_GENERIC
 125:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 126:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 127:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 128:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 129:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 130:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  extern "C" {
 131:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #endif
 132:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 133:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* check device defines and use defaults */
 134:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 135:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef __CM0_REV
 136:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     #define __CM0_REV               0x0000U
 137:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 138:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 139:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 140:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 141:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 142:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 143:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 144:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 145:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 146:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 147:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 148:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 149:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #endif
 150:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 151:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 152:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 153:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 154:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 155:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 156:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     \li to specify the access to peripheral variables.
 157:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 158:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** */
 159:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 160:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 161:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #else
 162:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 163:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #endif
 164:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 165:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 166:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 167:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* following defines should be used for structure members */
 168:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 169:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 170:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 171:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 172:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group Cortex_M0 */
 173:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 174:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 175:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 176:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /*******************************************************************************
 177:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  *                 Register Abstraction
 178:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   Core Register contain:
 179:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   - Core Register
 180:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   - Core NVIC Register
 181:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   - Core SCB Register
 182:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   - Core SysTick Register
 183:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
 184:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 185:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 186:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 187:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** */
 188:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 189:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 190:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 191:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 192:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Core Register type definitions.
 193:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   @{
 194:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 195:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 196:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 197:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 198:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 199:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 200:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** {
 201:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   struct
 202:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   {
 203:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 204:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 205:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 206:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 207:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 208:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 209:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 210:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** } APSR_Type;
 211:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 212:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* APSR Register Definitions */
 213:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 214:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 215:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 216:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 217:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 218:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 219:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 220:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 221:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 222:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 223:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 224:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 225:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 226:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 227:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 228:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 229:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 230:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** {
 231:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   struct
 232:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   {
 233:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 234:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 235:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 236:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 237:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** } IPSR_Type;
 238:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 239:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* IPSR Register Definitions */
 240:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 241:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 242:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 243:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 244:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 245:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 246:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 247:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 248:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** {
 249:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   struct
 250:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   {
 251:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 252:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 253:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 254:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 255:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 256:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 257:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 258:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 259:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 260:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 261:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** } xPSR_Type;
 262:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 263:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* xPSR Register Definitions */
 264:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 265:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 266:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 267:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 268:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 269:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 270:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 271:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 272:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 273:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 274:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 275:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 276:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 277:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 278:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 279:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 280:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 281:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 282:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 283:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 284:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 285:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 286:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 287:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** {
 288:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   struct
 289:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   {
 290:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 291:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 292:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 293:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 294:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 295:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** } CONTROL_Type;
 296:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 297:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* CONTROL Register Definitions */
 298:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 299:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 300:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 301:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_CORE */
 302:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 303:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 304:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 305:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 306:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 307:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 308:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   @{
 309:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 310:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 311:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 312:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 313:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 314:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** typedef struct
 315:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** {
 316:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 317:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED0[31U];
 318:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 319:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED1[31U];
 320:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 321:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED2[31U];
 322:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 323:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED3[31U];
 324:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED4[64U];
 325:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 326:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** }  NVIC_Type;
 327:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 328:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_NVIC */
 329:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 330:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 331:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 332:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 333:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 334:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 335:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   @{
 336:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 337:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 338:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 339:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 340:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 341:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** typedef struct
 342:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** {
 343:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 344:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 345:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED0;
 346:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 347:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 348:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 349:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED1;
 350:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 351:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 352:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** } SCB_Type;
 353:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 354:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* SCB CPUID Register Definitions */
 355:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 356:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 357:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 358:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 359:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 360:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 361:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 362:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 363:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 364:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 365:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 366:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 367:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 368:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 369:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 370:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 371:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 372:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 373:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 374:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 375:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 376:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 377:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 378:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 379:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 380:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 381:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 382:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 383:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 384:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 385:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 386:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 387:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 388:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 389:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 390:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 391:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 392:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 393:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 394:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 395:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 396:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 397:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 398:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 399:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 400:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 401:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 402:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 403:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 404:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 405:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 406:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 407:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 408:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 409:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 410:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 411:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 412:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 413:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 414:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* SCB System Control Register Definitions */
 415:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 416:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 417:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 418:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 419:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 420:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 421:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 422:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 423:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 424:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* SCB Configuration Control Register Definitions */
 425:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 426:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 427:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 428:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 429:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 430:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 431:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 432:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 433:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 434:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 435:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_SCB */
 436:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 437:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 438:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 439:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 440:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 441:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
 442:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   @{
 443:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 444:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 445:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 446:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 447:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 448:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** typedef struct
 449:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** {
 450:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 451:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 452:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 453:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 454:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** } SysTick_Type;
 455:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 456:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Control / Status Register Definitions */
 457:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 458:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 459:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 460:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 461:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 462:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 463:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 464:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 465:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 466:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 467:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 468:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 469:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Reload Register Definitions */
 470:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 471:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 472:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 473:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Current Register Definitions */
 474:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 475:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 476:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 477:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Calibration Register Definitions */
 478:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 479:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 480:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 481:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 482:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 483:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 484:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 485:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 486:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 487:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_SysTick */
 488:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 489:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 490:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 491:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 492:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 493:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 494:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
 495:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   @{
 496:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 497:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 498:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 499:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 500:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 501:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 502:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 503:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 504:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   @{
 505:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 506:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 507:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 508:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 509:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] field  Name of the register bit field.
 510:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 511:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \return           Masked and shifted value.
 512:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** */
 513:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 514:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 515:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 516:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 517:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] field  Name of the register bit field.
 518:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 519:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \return           Masked and shifted bit field value.
 520:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** */
 521:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 522:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 523:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 524:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 525:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 526:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 527:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 528:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 529:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
 530:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   @{
 531:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 532:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 533:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* Memory mapping of Core Hardware */
 534:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 535:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 536:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 537:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 538:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 539:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 540:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 541:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 542:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 543:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 544:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /*@} */
 545:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 546:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 547:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 548:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /*******************************************************************************
 549:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  *                Hardware Abstraction Layer
 550:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   Core Function Interface contains:
 551:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   - Core NVIC Functions
 552:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   - Core SysTick Functions
 553:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   - Core Register Access Functions
 554:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
 555:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 556:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 557:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** */
 558:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 559:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 560:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 561:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 562:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 563:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 564:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 565:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 566:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   @{
 567:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 568:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 569:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #ifdef CMSIS_NVIC_VIRTUAL
 570:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 571:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 572:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 573:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 574:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #else
 575:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 576:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 577:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 578:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 579:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 580:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 581:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 582:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 583:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0 */
 584:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 585:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 586:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 587:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 588:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 589:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 590:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 591:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 592:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 593:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 594:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #else
 595:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_SetVector              __NVIC_SetVector
 596:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetVector              __NVIC_GetVector
 597:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 598:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 599:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define NVIC_USER_IRQ_OFFSET          16
 600:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 601:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 602:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 603:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
 604:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 605:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
 606:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 607:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 608:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
 609:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 610:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 611:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 612:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 613:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 614:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 615:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 616:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 617:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 618:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Enable Interrupt
 619:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 620:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 621:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 622:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 623:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 624:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** {
 625:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 626:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   {
 627:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     __COMPILER_BARRIER();
 628:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 629:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     __COMPILER_BARRIER();
 630:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   }
 631:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** }
 632:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 633:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 634:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 635:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Get Interrupt Enable status
 636:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
 637:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 638:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \return             0  Interrupt is not enabled.
 639:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \return             1  Interrupt is enabled.
 640:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 641:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 642:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
 643:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** {
 644:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 645:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   {
 646:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     return((uint32_t)(((NVIC->ISER[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 647:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   }
 648:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   else
 649:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   {
 650:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     return(0U);
 651:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   }
 652:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** }
 653:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 654:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 655:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 656:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Disable Interrupt
 657:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
 658:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 659:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 660:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 661:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
 662:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** {
 663:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 664:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   {
 665:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 666:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     __DSB();
 667:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     __ISB();
 668:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   }
 669:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** }
 670:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 671:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 672:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 673:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Get Pending Interrupt
 674:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
 675:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 676:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \return             0  Interrupt status is not pending.
 677:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \return             1  Interrupt status is pending.
 678:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 679:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 680:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
 681:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** {
 682:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 683:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   {
 684:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 685:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   }
 686:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   else
 687:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   {
 688:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     return(0U);
 689:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   }
 690:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** }
 691:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 692:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 693:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 694:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Set Pending Interrupt
 695:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
 696:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 697:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 698:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 699:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
 700:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** {
 701:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 702:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   {
 703:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 704:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   }
 705:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** }
 706:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 707:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** 
 708:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** /**
 709:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Clear Pending Interrupt
 710:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
 711:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 712:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 713:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****  */
 714:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 715:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h **** {
 716:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 2043              	 .loc 5 716 0
 2044 0090 53B2     	 sxtb r3,r2
 2045 0092 002B     	 cmp r3,#0
 2046 0094 08DB     	 blt .L168
 717:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****   {
 718:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include\core_cm0.h ****     NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 2047              	 .loc 5 718 0
 2048 0096 1F23     	 mov r3,#31
 2049 0098 1340     	 and r3,r2
 2050 009a 0122     	 mov r2,#1
 2051              	.LVL205:
 2052 009c 9A40     	 lsl r2,r2,r3
 2053 009e 131C     	 mov r3,r2
 2054 00a0 C022     	 mov r2,#192
 2055 00a2 3649     	 ldr r1,.L191+8
 2056 00a4 5200     	 lsl r2,r2,#1
 2057 00a6 8B50     	 str r3,[r1,r2]
 2058              	.LVL206:
 2059              	.L168:
 2060              	.LBE487:
 2061              	.LBE486:
 2062              	.LBB488:
 2063              	.LBB489:
1715:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 2064              	 .loc 4 1715 0 discriminator 1
 2065 00a8 8369     	 ldr r3,[r0,#24]
 2066              	.LBE489:
 2067              	.LBE488:
 323:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 2068              	 .loc 1 323 0 discriminator 1
 2069 00aa 1B05     	 lsl r3,r3,#20
 2070 00ac FCD5     	 bpl .L168
 2071              	.LVL207:
 2072              	.L190:
 325:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 2073              	 .loc 1 325 0
 2074 00ae 2834     	 add r4,r4,#40
 2075              	.LVL208:
 2076 00b0 2378     	 ldrb r3,[r4]
 2077 00b2 002B     	 cmp r3,#0
 2078 00b4 5CD0     	 beq .L157
 327:../Dave/Generated/I2C_MASTER/i2c_master.c ****           }
 2079              	 .loc 1 327 0
 2080 00b6 281C     	 mov r0,r5
 2081 00b8 FFF7FEFF 	 bl I2C_MASTER_lSendStop_JumpTo_TxCallback
 2082              	.LVL209:
 2083 00bc 58E0     	 b .L157
 2084              	.LVL210:
 2085              	.L161:
 337:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 2086              	 .loc 1 337 0
 2087 00be E368     	 ldr r3,[r4,#12]
 2088 00c0 9342     	 cmp r3,r2
 2089 00c2 F4D2     	 bcs .L190
 339:../Dave/Generated/I2C_MASTER/i2c_master.c ****         ptr_runtime->tx_data_index++;
 2090              	 .loc 1 339 0
 2091 00c4 E368     	 ldr r3,[r4,#12]
 2092              	.LVL211:
 2093              	.LBB490:
 2094              	.LBB491:
1503:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 2095              	 .loc 2 1503 0
 2096 00c6 2268     	 ldr r2,[r4]
 2097 00c8 D15C     	 ldrb r1,[r2,r3]
 2098 00ca FFF7FEFF 	 bl XMC_I2C_CH_MasterTransmit
 2099              	.LVL212:
 2100              	.LBE491:
 2101              	.LBE490:
 340:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 2102              	 .loc 1 340 0
 2103 00ce E368     	 ldr r3,[r4,#12]
 2104 00d0 0133     	 add r3,r3,#1
 2105 00d2 E360     	 str r3,[r4,#12]
 2106 00d4 4CE0     	 b .L157
 2107              	.LVL213:
 2108              	.L160:
 359:../Dave/Generated/I2C_MASTER/i2c_master.c ****     {
 2109              	 .loc 1 359 0
 2110 00d6 DA1D     	 add r2,r3,#7
 2111 00d8 D27F     	 ldrb r2,[r2,#31]
 2112 00da 002A     	 cmp r2,#0
 2113 00dc 2ED0     	 beq .L171
 361:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 2114              	 .loc 1 361 0
 2115 00de 0833     	 add r3,r3,#8
 2116 00e0 D97F     	 ldrb r1,[r3,#31]
 369:../Dave/Generated/I2C_MASTER/i2c_master.c ****       }
 2117              	 .loc 1 369 0
 2118 00e2 0226     	 mov r6,#2
 361:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 2119              	 .loc 1 361 0
 2120 00e4 0029     	 cmp r1,#0
 2121 00e6 07D0     	 beq .L172
 363:../Dave/Generated/I2C_MASTER/i2c_master.c ****                                               ((uint32_t)1 << (uint32_t)handle->config->rxFIFO_size
 2122              	 .loc 1 363 0
 2123 00e8 0123     	 mov r3,#1
 2124 00ea 1E1C     	 mov r6,r3
 2125 00ec 8B40     	 lsl r3,r3,r1
 2126 00ee 9640     	 lsl r6,r6,r2
 2127              	.LVL214:
 2128 00f0 B342     	 cmp r3,r6
 2129 00f2 00D9     	 bls .L173
 2130 00f4 331C     	 mov r3,r6
 2131              	.L173:
 2132 00f6 DEB2     	 uxtb r6,r3
 2133              	.LVL215:
 2134              	.L172:
 2135              	.LBB492:
 2136              	.LBB493:
1563:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 2137              	 .loc 4 1563 0
 2138 00f8 FC30     	 add r0,r0,#252
 2139              	.LVL216:
 2140 00fa C268     	 ldr r2,[r0,#12]
 2141 00fc 1D4B     	 ldr r3,.L191
 2142 00fe 1340     	 and r3,r2
 2143 0100 C360     	 str r3,[r0,#12]
 2144              	.LVL217:
 2145              	.L174:
 2146 0102 2868     	 ldr r0,[r5]
 2147              	.LVL218:
 2148              	.LBE493:
 2149              	.LBE492:
 2150              	.LBB494:
 2151              	.LBB495:
 2152              	.LBB496:
1695:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 2153              	 .loc 4 1695 0
 2154 0104 031C     	 mov r3,r0
 2155 0106 FC33     	 add r3,r3,#252
 2156 0108 9B69     	 ldr r3,[r3,#24]
 2157              	.LBE496:
 2158              	.LBE495:
 2159              	.LBE494:
 375:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 2160              	 .loc 1 375 0
 2161 010a DB04     	 lsl r3,r3,#19
 2162 010c 26D4     	 bmi .L176
 377:../Dave/Generated/I2C_MASTER/i2c_master.c ****         {
 2163              	 .loc 1 377 0
 2164 010e E368     	 ldr r3,[r4,#12]
 2165 0110 A268     	 ldr r2,[r4,#8]
 2166 0112 9342     	 cmp r3,r2
 2167 0114 22D2     	 bcs .L176
 380:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 2168              	 .loc 1 380 0
 2169 0116 E368     	 ldr r3,[r4,#12]
 2170 0118 0133     	 add r3,r3,#1
 2171 011a 9342     	 cmp r3,r2
 2172 011c 05D1     	 bne .L177
 380:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 2173              	 .loc 1 380 0 is_stmt 0 discriminator 1
 2174 011e 236A     	 ldr r3,[r4,#32]
 2175 0120 012B     	 cmp r3,#1
 2176 0122 02D1     	 bne .L177
 2177              	.LVL219:
 2178              	.LBB497:
 2179              	.LBB498:
1735:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 2180              	 .loc 2 1735 0 is_stmt 1
 2181 0124 FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveNack
 2182              	.LVL220:
 2183 0128 01E0     	 b .L178
 2184              	.LVL221:
 2185              	.L177:
 2186              	.LBE498:
 2187              	.LBE497:
 2188              	.LBB499:
 2189              	.LBB500:
1665:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 2190              	 .loc 2 1665 0
 2191 012a FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveAck
 2192              	.LVL222:
 2193              	.L178:
 2194              	.LBE500:
 2195              	.LBE499:
 388:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 2196              	 .loc 1 388 0
 2197 012e E368     	 ldr r3,[r4,#12]
 2198 0130 0133     	 add r3,r3,#1
 2199 0132 E360     	 str r3,[r4,#12]
 391:../Dave/Generated/I2C_MASTER/i2c_master.c ****           {
 2200              	 .loc 1 391 0
 2201 0134 E368     	 ldr r3,[r4,#12]
 2202 0136 B342     	 cmp r3,r6
 2203 0138 E3D3     	 bcc .L174
 2204 013a 0FE0     	 b .L176
 2205              	.LVL223:
 2206              	.L171:
 408:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 2207              	 .loc 1 408 0
 2208 013c E368     	 ldr r3,[r4,#12]
 2209 013e A268     	 ldr r2,[r4,#8]
 2210 0140 0133     	 add r3,r3,#1
 2211 0142 9342     	 cmp r3,r2
 2212 0144 05D1     	 bne .L181
 408:../Dave/Generated/I2C_MASTER/i2c_master.c ****       {
 2213              	 .loc 1 408 0 is_stmt 0 discriminator 1
 2214 0146 236A     	 ldr r3,[r4,#32]
 2215 0148 012B     	 cmp r3,#1
 2216 014a 02D1     	 bne .L181
 2217              	.LVL224:
 2218              	.LBB501:
 2219              	.LBB502:
1735:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 2220              	 .loc 2 1735 0 is_stmt 1
 2221 014c FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveNack
 2222              	.LVL225:
 2223 0150 01E0     	 b .L182
 2224              	.LVL226:
 2225              	.L181:
 2226              	.LBE502:
 2227              	.LBE501:
 2228              	.LBB503:
 2229              	.LBB504:
1665:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 2230              	 .loc 2 1665 0
 2231 0152 FFF7FEFF 	 bl XMC_I2C_CH_MasterReceiveAck
 2232              	.LVL227:
 2233              	.L182:
 2234              	.LBE504:
 2235              	.LBE503:
 416:../Dave/Generated/I2C_MASTER/i2c_master.c ****     }
 2236              	 .loc 1 416 0
 2237 0156 E368     	 ldr r3,[r4,#12]
 2238 0158 0133     	 add r3,r3,#1
 2239 015a E360     	 str r3,[r4,#12]
 2240              	.LVL228:
 2241              	.L176:
 422:../Dave/Generated/I2C_MASTER/i2c_master.c ****      {
 2242              	 .loc 1 422 0
 2243 015c AB68     	 ldr r3,[r5,#8]
 2244 015e DA68     	 ldr r2,[r3,#12]
 2245 0160 9B68     	 ldr r3,[r3,#8]
 2246 0162 9A42     	 cmp r2,r3
 2247 0164 04D1     	 bne .L157
 2248              	.LVL229:
 2249              	.LBB505:
 2250              	.LBB506:
1595:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 2251              	 .loc 2 1595 0
 2252 0166 8021     	 mov r1,#128
 2253 0168 2868     	 ldr r0,[r5]
 2254 016a C905     	 lsl r1,r1,#23
 2255 016c FFF7FEFF 	 bl XMC_I2C_CH_DisableEvent
 2256              	.LVL230:
 2257              	.L157:
 2258              	.LBE506:
 2259              	.LBE505:
 428:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 2260              	 .loc 1 428 0
 2261              	 
 2262              	.LVL231:
 2263 0170 70BD     	 pop {r4,r5,r6,pc}
 2264              	.L192:
 2265 0172 C046     	 .align 2
 2266              	.L191:
 2267 0174 FFFFFFBF 	 .word -1073741825
 2268 0178 FFDFFFFF 	 .word -8193
 2269 017c 00E100E0 	 .word -536813312
 2270              	 .cfi_endproc
 2271              	.LFE162:
 2273              	 .section .text.I2C_MASTER_AbortTransmit,"ax",%progbits
 2274              	 .align 1
 2275              	 .global I2C_MASTER_AbortTransmit
 2276              	 .code 16
 2277              	 .thumb_func
 2279              	I2C_MASTER_AbortTransmit:
 2280              	.LFB176:
1163:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1164:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1165:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
1166:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @brief Aborts the ongoing data transmission.
1167:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param I2C_MASTER_t*  I2C_MASTER APP handle pointer of type I2C_MASTER_t
1168:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return I2C_MASTER_STATUS_t
1169:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1170:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Details of function:
1171:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * If there is a transmission in progress, it will be stopped. If transmit FIFO is used,
1172:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * the existing data will be flushed. After the transmission is stopped, user can start
1173:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * a new transmission without delay.
1174:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
1175:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_AbortTransmit(const I2C_MASTER_t *const handle)
1176:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 2281              	 .loc 1 1176 0
 2282              	 .cfi_startproc
 2283              	.LVL232:
 2284 0000 10B5     	 push {r4,lr}
 2285              	.LCFI14:
 2286              	 .cfi_def_cfa_offset 8
 2287              	 .cfi_offset 4,-8
 2288              	 .cfi_offset 14,-4
1177:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
1178:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1179:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_SUCCESS;
1180:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1181:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_INTERRUPT)
 2289              	 .loc 1 1181 0
 2290 0002 4268     	 ldr r2,[r0,#4]
1176:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
 2291              	 .loc 1 1176 0
 2292 0004 041C     	 mov r4,r0
 2293              	 .loc 1 1181 0
 2294 0006 531D     	 add r3,r2,#5
 2295 0008 D87F     	 ldrb r0,[r3,#31]
 2296              	.LVL233:
 2297 000a 0028     	 cmp r0,#0
 2298 000c 19D1     	 bne .L194
 2299              	.LVL234:
 2300              	.LBB515:
 2301              	.LBB516:
 809:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->tx_data = NULL;
 2302              	 .loc 1 809 0
 2303 000e A368     	 ldr r3,[r4,#8]
 814:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 2304              	 .loc 1 814 0
 2305 0010 0732     	 add r2,r2,#7
 809:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->tx_data = NULL;
 2306              	 .loc 1 809 0
 2307 0012 D91D     	 add r1,r3,#7
 2308 0014 C877     	 strb r0,[r1,#31]
 810:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->bus_acquired = false;
 2309              	 .loc 1 810 0
 2310 0016 1860     	 str r0,[r3]
 811:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 2311              	 .loc 1 811 0
 2312 0018 2833     	 add r3,r3,#40
 2313 001a 1870     	 strb r0,[r3]
 814:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 2314              	 .loc 1 814 0
 2315 001c D37F     	 ldrb r3,[r2,#31]
 2316 001e 002B     	 cmp r3,#0
 2317 0020 08D0     	 beq .L195
 2318              	.LVL235:
 2319              	.LBB517:
 2320              	.LBB518:
1563:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 2321              	 .loc 4 1563 0
 2322 0022 2368     	 ldr r3,[r4]
 2323 0024 0C4A     	 ldr r2,.L200
 2324 0026 FC33     	 add r3,r3,#252
 2325 0028 D968     	 ldr r1,[r3,#12]
 2326 002a 0A40     	 and r2,r1
 2327 002c DA60     	 str r2,[r3,#12]
 2328              	.LVL236:
 2329              	.LBE518:
 2330              	.LBE517:
 2331              	.LBB519:
 2332              	.LBB520:
1676:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 2333              	 .loc 4 1676 0
 2334 002e 8022     	 mov r2,#128
 2335 0030 1202     	 lsl r2,r2,#8
 2336 0032 DA61     	 str r2,[r3,#28]
 2337              	.LVL237:
 2338              	.L195:
 2339              	.LBE520:
 2340              	.LBE519:
 2341              	.LBB521:
 2342              	.LBB522:
1595:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 2343              	 .loc 2 1595 0
 2344 0034 8021     	 mov r1,#128
 2345 0036 2068     	 ldr r0,[r4]
 2346 0038 C905     	 lsl r1,r1,#23
 2347 003a FFF7FEFF 	 bl XMC_I2C_CH_DisableEvent
 2348              	.LVL238:
 2349              	.LBE522:
 2350              	.LBE521:
 2351              	.LBE516:
 2352              	.LBE515:
1179:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 2353              	 .loc 1 1179 0
 2354 003e 0020     	 mov r0,#0
 2355 0040 03E0     	 b .L196
 2356              	.LVL239:
 2357              	.L194:
1182:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1183:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1)
1184:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_AbortTransmitIRQ(handle);
1185:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1186:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1187:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else if (handle->config->transmit_mode == I2C_MASTER_TRANSFER_MODE_DMA)
 2358              	 .loc 1 1187 0
 2359 0042 0138     	 sub r0,r0,#1
 2360 0044 431E     	 sub r3,r0,#1
 2361 0046 9841     	 sbc r0,r0,r3
1179:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 2362              	 .loc 1 1179 0
 2363 0048 C0B2     	 uxtb r0,r0
 2364              	.L196:
 2365              	.LVL240:
1188:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1189:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
1190:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_lAbortTransmitDMA(handle);
1191:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1192:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1193:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
1194:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1195:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_FAILURE;
1196:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1197:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->channel->PSCR |= USIC_CH_PSR_IICMode_WTDF_Msk; /*clear WDTF*/
 2366              	 .loc 1 1197 0
 2367 004a 0221     	 mov r1,#2
 2368 004c 2368     	 ldr r3,[r4]
1198:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->channel->FMR = 0x00000002U;/*clear TDV*/
1199:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1200:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
1201:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 2369              	 .loc 1 1201 0
 2370              	 
1197:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->channel->FMR = 0x00000002U;/*clear TDV*/
 2371              	 .loc 1 1197 0
 2372 004e DA6C     	 ldr r2,[r3,#76]
 2373 0050 0A43     	 orr r2,r1
 2374 0052 DA64     	 str r2,[r3,#76]
1198:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->channel->FMR = 0x00000002U;/*clear TDV*/
 2375              	 .loc 1 1198 0
 2376 0054 9966     	 str r1,[r3,#104]
 2377              	.LVL241:
 2378              	 .loc 1 1201 0
 2379 0056 10BD     	 pop {r4,pc}
 2380              	.L201:
 2381              	 .align 2
 2382              	.L200:
 2383 0058 FFFFFFBF 	 .word -1073741825
 2384              	 .cfi_endproc
 2385              	.LFE176:
 2387              	 .section .text.I2C_MASTER_AbortReceive,"ax",%progbits
 2388              	 .align 1
 2389              	 .global I2C_MASTER_AbortReceive
 2390              	 .code 16
 2391              	 .thumb_func
 2393              	I2C_MASTER_AbortReceive:
 2394              	.LFB177:
1202:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1203:../Dave/Generated/I2C_MASTER/i2c_master.c **** /**************************************************************************************************
1204:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @brief Aborts the ongoing data reception.
1205:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @param I2C_MASTER_t* I2C_MASTER APP handle pointer of type I2C_MASTER_t
1206:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * @return I2C_MASTER_STATUS_t
1207:../Dave/Generated/I2C_MASTER/i2c_master.c ****  *
1208:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * Details of function:
1209:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * If a reception is in progress, it will be stopped. When a reception request
1210:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * is active, user will not be able to place a new receive request till the active
1211:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * reception is complete. This API can stop the progressing reception to make
1212:../Dave/Generated/I2C_MASTER/i2c_master.c ****  * a new receive request.
1213:../Dave/Generated/I2C_MASTER/i2c_master.c ****  **************************************************************************************************
1214:../Dave/Generated/I2C_MASTER/i2c_master.c **** I2C_MASTER_STATUS_t I2C_MASTER_AbortReceive(const I2C_MASTER_t *const handle)
1215:../Dave/Generated/I2C_MASTER/i2c_master.c **** {
 2395              	 .loc 1 1215 0
 2396              	 .cfi_startproc
 2397              	.LVL242:
 2398 0000 10B5     	 push {r4,lr}
 2399              	.LCFI15:
 2400              	 .cfi_def_cfa_offset 8
 2401              	 .cfi_offset 4,-8
 2402              	 .cfi_offset 14,-4
1216:../Dave/Generated/I2C_MASTER/i2c_master.c ****   I2C_MASTER_STATUS_t status;
1217:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1218:../Dave/Generated/I2C_MASTER/i2c_master.c ****   status = I2C_MASTER_STATUS_SUCCESS;
1219:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1220:../Dave/Generated/I2C_MASTER/i2c_master.c ****   if (handle->config->receive_mode == I2C_MASTER_TRANSFER_MODE_INTERRUPT)
 2403              	 .loc 1 1220 0
 2404 0002 4168     	 ldr r1,[r0,#4]
 2405 0004 8B1D     	 add r3,r1,#6
 2406 0006 DB7F     	 ldrb r3,[r3,#31]
 2407 0008 002B     	 cmp r3,#0
 2408 000a 1ED1     	 bne .L203
 2409              	.LVL243:
 2410              	.LBB531:
 2411              	.LBB532:
1069:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->tx_busy = false;
 2412              	 .loc 1 1069 0
 2413 000c 8268     	 ldr r2,[r0,#8]
1076:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 2414              	 .loc 1 1076 0
 2415 000e 0831     	 add r1,r1,#8
1069:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->tx_busy = false;
 2416              	 .loc 1 1069 0
 2417 0010 141C     	 mov r4,r2
 2418 0012 0834     	 add r4,r4,#8
 2419 0014 E377     	 strb r3,[r4,#31]
1070:../Dave/Generated/I2C_MASTER/i2c_master.c ****   handle->runtime->rx_data = NULL;
 2420              	 .loc 1 1070 0
 2421 0016 D41D     	 add r4,r2,#7
 2422 0018 E377     	 strb r3,[r4,#31]
1071:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 2423              	 .loc 1 1071 0
 2424 001a 5360     	 str r3,[r2,#4]
1073:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 2425              	 .loc 1 1073 0
 2426 001c 2832     	 add r2,r2,#40
 2427 001e 1370     	 strb r3,[r2]
1076:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
 2428              	 .loc 1 1076 0
 2429 0020 CA7F     	 ldrb r2,[r1,#31]
 2430 0022 0368     	 ldr r3,[r0]
 2431 0024 002A     	 cmp r2,#0
 2432 0026 05D0     	 beq .L204
 2433              	.LVL244:
 2434              	.LBB533:
 2435              	.LBB534:
1876:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 2436              	 .loc 4 1876 0
 2437 0028 FC33     	 add r3,r3,#252
 2438              	.LVL245:
 2439 002a 1969     	 ldr r1,[r3,#16]
 2440 002c 0A4A     	 ldr r2,.L207
 2441 002e 0A40     	 and r2,r1
 2442 0030 1A61     	 str r2,[r3,#16]
 2443 0032 03E0     	 b .L205
 2444              	.LVL246:
 2445              	.L204:
 2446              	.LBE534:
 2447              	.LBE533:
 2448              	.LBB535:
 2449              	.LBB536:
1217:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 2450              	 .loc 4 1217 0
 2451 0034 196C     	 ldr r1,[r3,#64]
 2452 0036 094A     	 ldr r2,.L207+4
 2453 0038 0A40     	 and r2,r1
 2454 003a 1A64     	 str r2,[r3,#64]
 2455              	.LVL247:
 2456              	.L205:
 2457              	.LBE536:
 2458              	.LBE535:
 2459              	.LBB537:
 2460              	.LBB538:
1595:../Dave/Generated/I2C_MASTER/i2c_master.h **** }
 2461              	 .loc 2 1595 0
 2462 003c 8021     	 mov r1,#128
 2463 003e 0068     	 ldr r0,[r0]
 2464              	.LVL248:
 2465 0040 C905     	 lsl r1,r1,#23
 2466 0042 FFF7FEFF 	 bl XMC_I2C_CH_DisableEvent
 2467              	.LVL249:
 2468              	.LBE538:
 2469              	.LBE537:
 2470              	.LBE532:
 2471              	.LBE531:
1218:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 2472              	 .loc 1 1218 0
 2473 0046 0020     	 mov r0,#0
 2474 0048 04E0     	 b .L206
 2475              	.LVL250:
 2476              	.L203:
1221:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1222:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1)
1223:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_lAbortReceiveIRQ(handle);
1224:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1225:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1226:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else if (handle->config->receive_mode == I2C_MASTER_TRANSFER_MODE_DMA)
 2477              	 .loc 1 1226 0
 2478 004a 581E     	 sub r0,r3,#1
 2479              	.LVL251:
 2480 004c 031C     	 mov r3,r0
 2481 004e 581E     	 sub r0,r3,#1
 2482 0050 8341     	 sbc r3,r3,r0
1218:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
 2483              	 .loc 1 1218 0
 2484 0052 D8B2     	 uxtb r0,r3
 2485              	.L206:
 2486              	.LVL252:
1227:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1228:../Dave/Generated/I2C_MASTER/i2c_master.c **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
1229:../Dave/Generated/I2C_MASTER/i2c_master.c ****     I2C_MASTER_lAbortReceiveDMA(handle);
1230:../Dave/Generated/I2C_MASTER/i2c_master.c **** #endif
1231:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1232:../Dave/Generated/I2C_MASTER/i2c_master.c ****   else
1233:../Dave/Generated/I2C_MASTER/i2c_master.c ****   {
1234:../Dave/Generated/I2C_MASTER/i2c_master.c ****     status = I2C_MASTER_STATUS_FAILURE;
1235:../Dave/Generated/I2C_MASTER/i2c_master.c ****   }
1236:../Dave/Generated/I2C_MASTER/i2c_master.c **** 
1237:../Dave/Generated/I2C_MASTER/i2c_master.c ****   return (status);
1238:../Dave/Generated/I2C_MASTER/i2c_master.c **** }
 2487              	 .loc 1 1238 0
 2488              	 
 2489 0054 10BD     	 pop {r4,pc}
 2490              	.L208:
 2491 0056 C046     	 .align 2
 2492              	.L207:
 2493 0058 FFFFFF9F 	 .word -1610612737
 2494 005c FF3FFFFF 	 .word -49153
 2495              	 .cfi_endproc
 2496              	.LFE177:
 2498              	 .text
 2499              	.Letext0:
 2500              	 .file 6 "c:\\dave_4-4-2_64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2501              	 .file 7 "c:\\dave_4-4-2_64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2502              	 .file 8 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 2503              	 .file 9 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Dave/Generated/DAVE_Common.h"
 2504              	 .file 10 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include/cmsis_gcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 i2c_master.c
    {standard input}:18     .text.I2C_MASTER_lReconfigureRxFIFO:00000000 $t
    {standard input}:22     .text.I2C_MASTER_lReconfigureRxFIFO:00000000 I2C_MASTER_lReconfigureRxFIFO
    {standard input}:92     .text.I2C_MASTER_lSendStop_JumpTo_TxCallback:00000000 $t
    {standard input}:96     .text.I2C_MASTER_lSendStop_JumpTo_TxCallback:00000000 I2C_MASTER_lSendStop_JumpTo_TxCallback
    {standard input}:200    .text.I2C_MASTER_lSendStart_Or_RepeatedStart:00000000 $t
    {standard input}:204    .text.I2C_MASTER_lSendStart_Or_RepeatedStart:00000000 I2C_MASTER_lSendStart_Or_RepeatedStart
    {standard input}:274    .text.I2C_MASTER_lSendStop_JumpTo_RxCallback:00000000 $t
    {standard input}:278    .text.I2C_MASTER_lSendStop_JumpTo_RxCallback:00000000 I2C_MASTER_lSendStop_JumpTo_RxCallback
    {standard input}:384    .text.I2C_MASTER_GetAppVersion:00000000 $t
    {standard input}:389    .text.I2C_MASTER_GetAppVersion:00000000 I2C_MASTER_GetAppVersion
    {standard input}:407    .text.I2C_MASTER_GetAppVersion:00000008 $d
    {standard input}:412    .text.I2C_MASTER_Init:00000000 $t
    {standard input}:417    .text.I2C_MASTER_Init:00000000 I2C_MASTER_Init
    {standard input}:449    .text.I2C_MASTER_GetFlagStatus:00000000 $t
    {standard input}:454    .text.I2C_MASTER_GetFlagStatus:00000000 I2C_MASTER_GetFlagStatus
    {standard input}:479    .text.I2C_MASTER_ClearFlag:00000000 $t
    {standard input}:484    .text.I2C_MASTER_ClearFlag:00000000 I2C_MASTER_ClearFlag
    {standard input}:509    .text.I2C_MASTER_StartTransmitIRQ:00000000 $t
    {standard input}:514    .text.I2C_MASTER_StartTransmitIRQ:00000000 I2C_MASTER_StartTransmitIRQ
    {standard input}:676    .text.I2C_MASTER_Transmit:00000000 $t
    {standard input}:681    .text.I2C_MASTER_Transmit:00000000 I2C_MASTER_Transmit
    {standard input}:730    .text.I2C_MASTER_StartReceiveIRQ:00000000 $t
    {standard input}:735    .text.I2C_MASTER_StartReceiveIRQ:00000000 I2C_MASTER_StartReceiveIRQ
    {standard input}:1310   .text.I2C_MASTER_StartReceiveIRQ:0000023c $d
    {standard input}:1315   .text.I2C_MASTER_Receive:00000000 $t
    {standard input}:1320   .text.I2C_MASTER_Receive:00000000 I2C_MASTER_Receive
    {standard input}:1379   .text.I2C_MASTER_ReceiveHandler:00000000 $t
    {standard input}:1384   .text.I2C_MASTER_ReceiveHandler:00000000 I2C_MASTER_ReceiveHandler
    {standard input}:1761   .text.I2C_MASTER_ReceiveHandler:0000016c $d
    {standard input}:1767   .text.I2C_MASTER_ProtocolHandler:00000000 $t
    {standard input}:1772   .text.I2C_MASTER_ProtocolHandler:00000000 I2C_MASTER_ProtocolHandler
    {standard input}:1863   .text.I2C_MASTER_TransmitHandler:00000000 $t
    {standard input}:1868   .text.I2C_MASTER_TransmitHandler:00000000 I2C_MASTER_TransmitHandler
    {standard input}:2267   .text.I2C_MASTER_TransmitHandler:00000174 $d
    {standard input}:2274   .text.I2C_MASTER_AbortTransmit:00000000 $t
    {standard input}:2279   .text.I2C_MASTER_AbortTransmit:00000000 I2C_MASTER_AbortTransmit
    {standard input}:2383   .text.I2C_MASTER_AbortTransmit:00000058 $d
    {standard input}:2388   .text.I2C_MASTER_AbortReceive:00000000 $t
    {standard input}:2393   .text.I2C_MASTER_AbortReceive:00000000 I2C_MASTER_AbortReceive
    {standard input}:2493   .text.I2C_MASTER_AbortReceive:00000058 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
XMC_I2C_CH_DisableEvent
XMC_I2C_CH_MasterStop
XMC_I2C_CH_MasterRepeatedStart
XMC_I2C_CH_MasterStart
XMC_I2C_CH_EnableEvent
XMC_USIC_CH_SetInterruptNodePointer
XMC_I2C_CH_MasterReceiveNack
XMC_I2C_CH_MasterReceiveAck
XMC_I2C_CH_GetReceivedData
XMC_I2C_CH_MasterTransmit
