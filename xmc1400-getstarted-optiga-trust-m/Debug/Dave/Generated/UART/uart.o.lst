   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,4
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "uart.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.UART_lReconfigureRxFIFO,"ax",%progbits
  18              	 .align 1
  19              	 .code 16
  20              	 .thumb_func
  22              	UART_lReconfigureRxFIFO:
  23              	.LFB185:
  24              	 .file 1 "../Dave/Generated/UART/uart.c"
   1:../Dave/Generated/UART/uart.c **** /**
   2:../Dave/Generated/UART/uart.c ****  * @file uart.c
   3:../Dave/Generated/UART/uart.c ****  * @date 2015-12-17
   4:../Dave/Generated/UART/uart.c ****  *
   5:../Dave/Generated/UART/uart.c ****  * NOTE:
   6:../Dave/Generated/UART/uart.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/UART/uart.c ****  *
   8:../Dave/Generated/UART/uart.c ****  * @cond
   9:../Dave/Generated/UART/uart.c ****  **************************************************************************************************
  10:../Dave/Generated/UART/uart.c ****  * UART v4.1.12 - Configures a USIC channel to perform transmit & receive operations using UART pro
  11:../Dave/Generated/UART/uart.c ****  *
  12:../Dave/Generated/UART/uart.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  13:../Dave/Generated/UART/uart.c ****  * All rights reserved.
  14:../Dave/Generated/UART/uart.c ****  *
  15:../Dave/Generated/UART/uart.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/UART/uart.c ****  * following conditions are met:
  17:../Dave/Generated/UART/uart.c ****  *
  18:../Dave/Generated/UART/uart.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/UART/uart.c ****  *   disclaimer.
  20:../Dave/Generated/UART/uart.c ****  *
  21:../Dave/Generated/UART/uart.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/UART/uart.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../Dave/Generated/UART/uart.c ****  *
  24:../Dave/Generated/UART/uart.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/UART/uart.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/UART/uart.c ****  *
  27:../Dave/Generated/UART/uart.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/UART/uart.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/UART/uart.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/UART/uart.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/UART/uart.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/UART/uart.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/UART/uart.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/UART/uart.c ****  *
  35:../Dave/Generated/UART/uart.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/UART/uart.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/UART/uart.c ****  **************************************************************************************************
  38:../Dave/Generated/UART/uart.c ****  *
  39:../Dave/Generated/UART/uart.c ****  * Change History
  40:../Dave/Generated/UART/uart.c ****  * --------------
  41:../Dave/Generated/UART/uart.c ****  *
  42:../Dave/Generated/UART/uart.c ****  * 2015-02-16:
  43:../Dave/Generated/UART/uart.c ****  *     - Initial version for DAVEv4
  44:../Dave/Generated/UART/uart.c ****  *
  45:../Dave/Generated/UART/uart.c ****  * 2015-06-20:
  46:../Dave/Generated/UART/uart.c ****  *     - Changed the abort API name from UART_Abort_Receive to UART_AbortReceive and added return t
  47:../Dave/Generated/UART/uart.c ****  *
  48:../Dave/Generated/UART/uart.c ****  * 2015-06-25:
  49:../Dave/Generated/UART/uart.c ****  *     - Changed protocol event handling to check event configuration
  50:../Dave/Generated/UART/uart.c ****  *
  51:../Dave/Generated/UART/uart.c ****  * 2015-07-06:
  52:../Dave/Generated/UART/uart.c ****  *     - Changed structure name from UART_DYNAMIC_t to UART_RUNTIME_t
  53:../Dave/Generated/UART/uart.c ****  *
  54:../Dave/Generated/UART/uart.c ****  * 2015-07-30:
  55:../Dave/Generated/UART/uart.c ****  *     - Added code for DMA and Direct mode handling
  56:../Dave/Generated/UART/uart.c ****  *
  57:../Dave/Generated/UART/uart.c ****  * @endcond
  58:../Dave/Generated/UART/uart.c ****  *
  59:../Dave/Generated/UART/uart.c ****  */
  60:../Dave/Generated/UART/uart.c **** 
  61:../Dave/Generated/UART/uart.c **** /**************************************************************************************************
  62:../Dave/Generated/UART/uart.c ****  * HEADER FILES
  63:../Dave/Generated/UART/uart.c ****  **************************************************************************************************
  64:../Dave/Generated/UART/uart.c **** #include "uart.h"
  65:../Dave/Generated/UART/uart.c **** 
  66:../Dave/Generated/UART/uart.c **** /**************************************************************************************************
  67:../Dave/Generated/UART/uart.c ****  * MACROS
  68:../Dave/Generated/UART/uart.c ****  **************************************************************************************************
  69:../Dave/Generated/UART/uart.c **** 
  70:../Dave/Generated/UART/uart.c **** /**************************************************************************************************
  71:../Dave/Generated/UART/uart.c ****  * LOCAL DATA
  72:../Dave/Generated/UART/uart.c ****  **************************************************************************************************
  73:../Dave/Generated/UART/uart.c **** const XMC_UART_CH_STATUS_FLAG_t uart_event_status_flags[UART_EVENT_MAX] = {
  74:../Dave/Generated/UART/uart.c ****   XMC_UART_CH_STATUS_FLAG_SYNCHRONIZATION_BREAK_DETECTED,
  75:../Dave/Generated/UART/uart.c ****   XMC_UART_CH_STATUS_FLAG_RECEIVER_NOISE_DETECTED,
  76:../Dave/Generated/UART/uart.c ****   XMC_UART_CH_STATUS_FLAG_FORMAT_ERROR_IN_STOP_BIT_0,
  77:../Dave/Generated/UART/uart.c ****   XMC_UART_CH_STATUS_FLAG_FORMAT_ERROR_IN_STOP_BIT_1,
  78:../Dave/Generated/UART/uart.c ****   XMC_UART_CH_STATUS_FLAG_COLLISION_DETECTED
  79:../Dave/Generated/UART/uart.c **** };
  80:../Dave/Generated/UART/uart.c **** const XMC_UART_CH_EVENT_t uart_event_conf_flags[UART_EVENT_MAX] = {
  81:../Dave/Generated/UART/uart.c ****   XMC_UART_CH_EVENT_SYNCHRONIZATION_BREAK,
  82:../Dave/Generated/UART/uart.c ****   XMC_UART_CH_EVENT_RECEIVER_NOISE,
  83:../Dave/Generated/UART/uart.c ****   XMC_UART_CH_EVENT_FORMAT_ERROR,
  84:../Dave/Generated/UART/uart.c ****   XMC_UART_CH_EVENT_FORMAT_ERROR,
  85:../Dave/Generated/UART/uart.c ****   XMC_UART_CH_EVENT_COLLISION
  86:../Dave/Generated/UART/uart.c **** };
  87:../Dave/Generated/UART/uart.c **** /**************************************************************************************************
  88:../Dave/Generated/UART/uart.c ****  * LOCAL ROUTINES
  89:../Dave/Generated/UART/uart.c ****  **************************************************************************************************
  90:../Dave/Generated/UART/uart.c **** #ifdef UART_TX_INTERRUPT_USED
  91:../Dave/Generated/UART/uart.c **** /*Function used for handling transmit interrupt.*/
  92:../Dave/Generated/UART/uart.c **** void UART_lTransmitHandler(const UART_t * const handle);
  93:../Dave/Generated/UART/uart.c **** #endif
  94:../Dave/Generated/UART/uart.c **** #ifdef UART_RX_INTERRUPT_USED
  95:../Dave/Generated/UART/uart.c **** /*Function used for handling data reception interrupts.*/
  96:../Dave/Generated/UART/uart.c **** void UART_lReceiveHandler(const UART_t * const handle);
  97:../Dave/Generated/UART/uart.c **** /*Function used for reconfiguring rx FIFO while receiving data.*/
  98:../Dave/Generated/UART/uart.c **** static void UART_lReconfigureRxFIFO(const UART_t * const handle, uint32_t data_size);
  99:../Dave/Generated/UART/uart.c **** #endif
 100:../Dave/Generated/UART/uart.c **** #ifdef UART_TX_DIRECT_USED
 101:../Dave/Generated/UART/uart.c **** /*Function for transmitting data using polling.*/
 102:../Dave/Generated/UART/uart.c **** static UART_STATUS_t UART_lStartTransmitPolling (const UART_t *const handle, uint8_t* data_ptr, uin
 103:../Dave/Generated/UART/uart.c **** #endif
 104:../Dave/Generated/UART/uart.c **** #ifdef UART_RX_DIRECT_USED
 105:../Dave/Generated/UART/uart.c **** /*Function for receiving data using polling.*/
 106:../Dave/Generated/UART/uart.c **** static UART_STATUS_t UART_lStartReceivePolling (const UART_t *const handle, uint8_t* data_ptr, uint
 107:../Dave/Generated/UART/uart.c **** #endif
 108:../Dave/Generated/UART/uart.c **** /*Function used for handling protocol related interrupt.*/
 109:../Dave/Generated/UART/uart.c **** void UART_lProtocolHandler(const UART_t * const handle);
 110:../Dave/Generated/UART/uart.c **** 
 111:../Dave/Generated/UART/uart.c **** 
 112:../Dave/Generated/UART/uart.c **** /**************************************************************************************************
 113:../Dave/Generated/UART/uart.c ****  * API IMPLEMENTATION
 114:../Dave/Generated/UART/uart.c ****  **************************************************************************************************
 115:../Dave/Generated/UART/uart.c **** 
 116:../Dave/Generated/UART/uart.c **** /*
 117:../Dave/Generated/UART/uart.c ****  * @brief API to retrieve the version of the UART APP.
 118:../Dave/Generated/UART/uart.c ****  *
 119:../Dave/Generated/UART/uart.c ****  * @return DAVE_APP_VERSION_t Structure containing major version, minor version
 120:../Dave/Generated/UART/uart.c ****  *         and patch version.
 121:../Dave/Generated/UART/uart.c ****  */
 122:../Dave/Generated/UART/uart.c **** DAVE_APP_VERSION_t UART_GetAppVersion()
 123:../Dave/Generated/UART/uart.c **** {
 124:../Dave/Generated/UART/uart.c ****   DAVE_APP_VERSION_t version;
 125:../Dave/Generated/UART/uart.c **** 
 126:../Dave/Generated/UART/uart.c ****   version.major = UART_MAJOR_VERSION;
 127:../Dave/Generated/UART/uart.c ****   version.minor = UART_MINOR_VERSION;
 128:../Dave/Generated/UART/uart.c ****   version.patch = UART_PATCH_VERSION;
 129:../Dave/Generated/UART/uart.c **** 
 130:../Dave/Generated/UART/uart.c ****   return version;
 131:../Dave/Generated/UART/uart.c **** }
 132:../Dave/Generated/UART/uart.c **** 
 133:../Dave/Generated/UART/uart.c **** /*
 134:../Dave/Generated/UART/uart.c ****  * @brief Function to initialize the USIC Channel with GUI configured values.
 135:../Dave/Generated/UART/uart.c ****  *
 136:../Dave/Generated/UART/uart.c ****  * @param[in]  handle UART APP handle pointer of type UART_t*
 137:../Dave/Generated/UART/uart.c ****  *
 138:../Dave/Generated/UART/uart.c ****  * @return  UART_STATUS_t
 139:../Dave/Generated/UART/uart.c ****  *          UART_SUCCESS: for successful UART initialization.<BR>
 140:../Dave/Generated/UART/uart.c ****  *          UART_STATUS_FAILURE  : If UART initialization fails.<BR>
 141:../Dave/Generated/UART/uart.c ****  *
 142:../Dave/Generated/UART/uart.c ****  */
 143:../Dave/Generated/UART/uart.c **** UART_STATUS_t UART_Init(const UART_t *const handle)
 144:../Dave/Generated/UART/uart.c **** {
 145:../Dave/Generated/UART/uart.c ****   UART_STATUS_t status = UART_STATUS_SUCCESS;
 146:../Dave/Generated/UART/uart.c ****   XMC_ASSERT("UART_Init : UART APP handle invalid", (((handle != NULL)&&
 147:../Dave/Generated/UART/uart.c ****       (handle->config != NULL)) &&((handle->config->fptr_uart_config != NULL)&&
 148:../Dave/Generated/UART/uart.c ****       (handle->runtime != NULL))))
 149:../Dave/Generated/UART/uart.c **** 
 150:../Dave/Generated/UART/uart.c ****   /*Initialize the multiplexers required for UART configuration*/
 151:../Dave/Generated/UART/uart.c ****   status = handle->config->fptr_uart_config();
 152:../Dave/Generated/UART/uart.c **** 
 153:../Dave/Generated/UART/uart.c ****   return status;
 154:../Dave/Generated/UART/uart.c **** }
 155:../Dave/Generated/UART/uart.c **** 
 156:../Dave/Generated/UART/uart.c **** /*
 157:../Dave/Generated/UART/uart.c ****  * @brief Common function to transmit data.
 158:../Dave/Generated/UART/uart.c ****  *
 159:../Dave/Generated/UART/uart.c ****  * @param[in]  handle UART APP handle pointer of type UART_t*
 160:../Dave/Generated/UART/uart.c ****  * @param[in]  data_ptr Pointer to data of type uint8_t
 161:../Dave/Generated/UART/uart.c ****  * @param[in]  count Number of uint8_t type bytes to be transmitted
 162:../Dave/Generated/UART/uart.c ****  *
 163:../Dave/Generated/UART/uart.c ****  * @return  UART_STATUS_t
 164:../Dave/Generated/UART/uart.c ****  *          UART_SUCCESS: If the data is put to transmit.<BR>
 165:../Dave/Generated/UART/uart.c ****  *          UART_STATUS_BUSY  : If the channel is busy.<BR>
 166:../Dave/Generated/UART/uart.c ****  *          UART_STATUS_BUFFER_INVALID: Either if buffer is NULL or count is 0.<BR>
 167:../Dave/Generated/UART/uart.c ****  *          UART_STATUS_MODE_MISMATCH: If the configured mode is invalid.<BR>
 168:../Dave/Generated/UART/uart.c ****  *
 169:../Dave/Generated/UART/uart.c ****  */
 170:../Dave/Generated/UART/uart.c **** UART_STATUS_t UART_Transmit(const UART_t *const handle, uint8_t* data_ptr, uint32_t count)
 171:../Dave/Generated/UART/uart.c **** {
 172:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_MODE_MISMATCH;
 173:../Dave/Generated/UART/uart.c **** 
 174:../Dave/Generated/UART/uart.c ****   switch(handle->config->transmit_mode)
 175:../Dave/Generated/UART/uart.c ****   {
 176:../Dave/Generated/UART/uart.c **** #ifdef UART_TX_INTERRUPT_USED
 177:../Dave/Generated/UART/uart.c ****   case UART_TRANSFER_MODE_INTERRUPT:
 178:../Dave/Generated/UART/uart.c ****     ret_stat = UART_StartTransmitIRQ(handle, data_ptr, count);
 179:../Dave/Generated/UART/uart.c ****     break;
 180:../Dave/Generated/UART/uart.c **** #endif
 181:../Dave/Generated/UART/uart.c **** #ifdef UART_TX_DMA_USED
 182:../Dave/Generated/UART/uart.c ****   case UART_TRANSFER_MODE_DMA:
 183:../Dave/Generated/UART/uart.c ****     ret_stat = UART_StartTransmitDMA(handle, data_ptr, count);
 184:../Dave/Generated/UART/uart.c ****     break;
 185:../Dave/Generated/UART/uart.c **** #endif
 186:../Dave/Generated/UART/uart.c **** #ifdef UART_TX_DIRECT_USED
 187:../Dave/Generated/UART/uart.c ****   case UART_TRANSFER_MODE_DIRECT:
 188:../Dave/Generated/UART/uart.c ****     ret_stat = UART_lStartTransmitPolling(handle, data_ptr, count);
 189:../Dave/Generated/UART/uart.c ****     break;
 190:../Dave/Generated/UART/uart.c **** #endif
 191:../Dave/Generated/UART/uart.c ****   default:
 192:../Dave/Generated/UART/uart.c ****     break;
 193:../Dave/Generated/UART/uart.c ****   }
 194:../Dave/Generated/UART/uart.c ****   return ret_stat;
 195:../Dave/Generated/UART/uart.c **** }
 196:../Dave/Generated/UART/uart.c **** 
 197:../Dave/Generated/UART/uart.c **** /*
 198:../Dave/Generated/UART/uart.c ****  * @brief Common function to receive data.
 199:../Dave/Generated/UART/uart.c ****  *
 200:../Dave/Generated/UART/uart.c ****  * @param[in]  handle UART APP handle pointer of type UART_t*
 201:../Dave/Generated/UART/uart.c ****  * @param[in]  data_ptr Pointer to data of type uint8_t
 202:../Dave/Generated/UART/uart.c ****  * @param[in]  count Number of uint8_t type bytes to be received
 203:../Dave/Generated/UART/uart.c ****  *
 204:../Dave/Generated/UART/uart.c ****  * @return  UART_STATUS_t
 205:../Dave/Generated/UART/uart.c ****  *          UART_SUCCESS: If the data is put to transmit.<BR>
 206:../Dave/Generated/UART/uart.c ****  *          UART_STATUS_BUSY  : If the channel is busy.<BR>
 207:../Dave/Generated/UART/uart.c ****  *          UART_STATUS_BUFFER_INVALID: Either if buffer is NULL or count is 0.<BR>
 208:../Dave/Generated/UART/uart.c ****  *          UART_STATUS_MODE_MISMATCH: If the configured mode is invalid.<BR>
 209:../Dave/Generated/UART/uart.c ****  *
 210:../Dave/Generated/UART/uart.c ****  */
 211:../Dave/Generated/UART/uart.c **** UART_STATUS_t UART_Receive(const UART_t *const handle, uint8_t* data_ptr, uint32_t count)
 212:../Dave/Generated/UART/uart.c **** {
 213:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_MODE_MISMATCH;
 214:../Dave/Generated/UART/uart.c **** 
 215:../Dave/Generated/UART/uart.c ****   switch(handle->config->receive_mode)
 216:../Dave/Generated/UART/uart.c ****   {
 217:../Dave/Generated/UART/uart.c **** #ifdef UART_RX_INTERRUPT_USED
 218:../Dave/Generated/UART/uart.c ****   case UART_TRANSFER_MODE_INTERRUPT:
 219:../Dave/Generated/UART/uart.c ****     ret_stat = UART_StartReceiveIRQ(handle, data_ptr, count);
 220:../Dave/Generated/UART/uart.c ****     break;
 221:../Dave/Generated/UART/uart.c **** #endif
 222:../Dave/Generated/UART/uart.c **** #ifdef UART_RX_DMA_USED
 223:../Dave/Generated/UART/uart.c ****   case UART_TRANSFER_MODE_DMA:
 224:../Dave/Generated/UART/uart.c ****     ret_stat = UART_StartReceiveDMA(handle, data_ptr, count);
 225:../Dave/Generated/UART/uart.c ****     break;
 226:../Dave/Generated/UART/uart.c **** #endif
 227:../Dave/Generated/UART/uart.c **** #ifdef UART_RX_DIRECT_USED
 228:../Dave/Generated/UART/uart.c ****   case UART_TRANSFER_MODE_DIRECT:
 229:../Dave/Generated/UART/uart.c ****     ret_stat = UART_lStartReceivePolling(handle, data_ptr, count);
 230:../Dave/Generated/UART/uart.c ****     break;
 231:../Dave/Generated/UART/uart.c **** #endif
 232:../Dave/Generated/UART/uart.c ****   default:
 233:../Dave/Generated/UART/uart.c ****     break;
 234:../Dave/Generated/UART/uart.c ****   }
 235:../Dave/Generated/UART/uart.c ****   return ret_stat;
 236:../Dave/Generated/UART/uart.c **** }
 237:../Dave/Generated/UART/uart.c **** 
 238:../Dave/Generated/UART/uart.c **** #if (defined UART_TX_INTERRUPT_USED || defined UART_TX_DMA_USED)
 239:../Dave/Generated/UART/uart.c **** /*
 240:../Dave/Generated/UART/uart.c ****  * @brief Common function to abort ongoing transmission.
 241:../Dave/Generated/UART/uart.c ****  *
 242:../Dave/Generated/UART/uart.c ****  * @param[in]  handle UART APP handle pointer of type UART_t*
 243:../Dave/Generated/UART/uart.c ****  *
 244:../Dave/Generated/UART/uart.c ****  * @return  UART_STATUS_t
 245:../Dave/Generated/UART/uart.c ****  *          UART_SUCCESS: If the transmission is aborted.<BR>
 246:../Dave/Generated/UART/uart.c ****  *          UART_STATUS_FAILURE: If the channel is not transmitting.<BR>
 247:../Dave/Generated/UART/uart.c ****  *          UART_STATUS_MODE_MISMATCH: If the configured mode is Direct.<BR>
 248:../Dave/Generated/UART/uart.c ****  *
 249:../Dave/Generated/UART/uart.c ****  */
 250:../Dave/Generated/UART/uart.c **** UART_STATUS_t UART_AbortTransmit(const UART_t *const handle)
 251:../Dave/Generated/UART/uart.c **** {
 252:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_SUCCESS;
 253:../Dave/Generated/UART/uart.c **** #ifdef UART_TX_DMA_USED
 254:../Dave/Generated/UART/uart.c ****   const UART_DMA_CONFIG_t * ptr_dma_config = handle->config->transmit_dma_config;
 255:../Dave/Generated/UART/uart.c ****   XMC_DMA_t * ptr_gpdma = handle->config->global_dma->dma;
 256:../Dave/Generated/UART/uart.c **** #endif
 257:../Dave/Generated/UART/uart.c **** 
 258:../Dave/Generated/UART/uart.c ****   XMC_ASSERT("UART_AbortTransmit: UART APP handle invalid", ((handle != NULL)&&
 259:../Dave/Generated/UART/uart.c ****             (handle->runtime != NULL)))
 260:../Dave/Generated/UART/uart.c **** 
 261:../Dave/Generated/UART/uart.c ****   /*Reset the user buffer pointer to null*/
 262:../Dave/Generated/UART/uart.c ****   handle->runtime->tx_busy = false;
 263:../Dave/Generated/UART/uart.c ****   handle->runtime->tx_data = NULL;
 264:../Dave/Generated/UART/uart.c **** 
 265:../Dave/Generated/UART/uart.c ****   switch(handle->config->transmit_mode)
 266:../Dave/Generated/UART/uart.c ****   {
 267:../Dave/Generated/UART/uart.c **** #ifdef UART_TX_INTERRUPT_USED
 268:../Dave/Generated/UART/uart.c ****   case UART_TRANSFER_MODE_INTERRUPT:
 269:../Dave/Generated/UART/uart.c ****     /*Disable the transmit interrupts*/
 270:../Dave/Generated/UART/uart.c ****     if (handle->config->tx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 271:../Dave/Generated/UART/uart.c ****     {
 272:../Dave/Generated/UART/uart.c ****       /*Disable the transmit FIFO event*/
 273:../Dave/Generated/UART/uart.c ****       XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STAND
 274:../Dave/Generated/UART/uart.c ****       XMC_USIC_CH_TXFIFO_Flush(handle->channel);
 275:../Dave/Generated/UART/uart.c ****     }
 276:../Dave/Generated/UART/uart.c ****     else
 277:../Dave/Generated/UART/uart.c ****     {
 278:../Dave/Generated/UART/uart.c ****       /*Disable the standard transmit event*/
 279:../Dave/Generated/UART/uart.c ****       XMC_USIC_CH_DisableEvent(handle->channel, (uint32_t)XMC_USIC_CH_EVENT_TRANSMIT_BUFFER);
 280:../Dave/Generated/UART/uart.c ****     }
 281:../Dave/Generated/UART/uart.c ****     XMC_USIC_CH_SetTransmitBufferStatus(handle->channel, XMC_USIC_CH_TBUF_STATUS_SET_IDLE);
 282:../Dave/Generated/UART/uart.c ****     break;
 283:../Dave/Generated/UART/uart.c **** #endif
 284:../Dave/Generated/UART/uart.c **** #ifdef UART_TX_DMA_USED
 285:../Dave/Generated/UART/uart.c ****   case UART_TRANSFER_MODE_DMA:
 286:../Dave/Generated/UART/uart.c ****     /*Disable the standard transmit event*/
 287:../Dave/Generated/UART/uart.c ****     if (XMC_DMA_CH_IsEnabled(ptr_gpdma, ptr_dma_config->dma_channel))
 288:../Dave/Generated/UART/uart.c ****     {
 289:../Dave/Generated/UART/uart.c ****       XMC_DMA_CH_Disable(ptr_gpdma, ptr_dma_config->dma_channel);
 290:../Dave/Generated/UART/uart.c ****       while(XMC_DMA_CH_IsEnabled(ptr_gpdma, ptr_dma_config->dma_channel)==true)
 291:../Dave/Generated/UART/uart.c ****       {
 292:../Dave/Generated/UART/uart.c ****       }
 293:../Dave/Generated/UART/uart.c ****       XMC_USIC_CH_DisableEvent(handle->channel, (uint32_t)XMC_USIC_CH_EVENT_TRANSMIT_BUFFER);
 294:../Dave/Generated/UART/uart.c ****     }
 295:../Dave/Generated/UART/uart.c ****     XMC_USIC_CH_SetTransmitBufferStatus(handle->channel, XMC_USIC_CH_TBUF_STATUS_SET_IDLE);
 296:../Dave/Generated/UART/uart.c ****     break;
 297:../Dave/Generated/UART/uart.c **** #endif
 298:../Dave/Generated/UART/uart.c ****   default:
 299:../Dave/Generated/UART/uart.c ****     ret_stat = UART_STATUS_MODE_MISMATCH;
 300:../Dave/Generated/UART/uart.c ****     break;
 301:../Dave/Generated/UART/uart.c ****   }
 302:../Dave/Generated/UART/uart.c ****   return ret_stat;
 303:../Dave/Generated/UART/uart.c **** }
 304:../Dave/Generated/UART/uart.c **** #endif
 305:../Dave/Generated/UART/uart.c **** 
 306:../Dave/Generated/UART/uart.c **** #if (defined UART_RX_INTERRUPT_USED || defined UART_RX_DMA_USED)
 307:../Dave/Generated/UART/uart.c **** /*
 308:../Dave/Generated/UART/uart.c ****  * @brief Common function to abort ongoing reception.
 309:../Dave/Generated/UART/uart.c ****  *
 310:../Dave/Generated/UART/uart.c ****  * @param[in]  handle UART APP handle pointer of type UART_t*
 311:../Dave/Generated/UART/uart.c ****  *
 312:../Dave/Generated/UART/uart.c ****  * @return  UART_STATUS_t
 313:../Dave/Generated/UART/uart.c ****  *          UART_SUCCESS: If the reception is aborted.<BR>
 314:../Dave/Generated/UART/uart.c ****  *          UART_STATUS_FAILURE  : If the channel is not busy.<BR>
 315:../Dave/Generated/UART/uart.c ****  *          UART_STATUS_MODE_MISMATCH: If the configured mode is Direct.<BR>
 316:../Dave/Generated/UART/uart.c ****  *
 317:../Dave/Generated/UART/uart.c ****  */
 318:../Dave/Generated/UART/uart.c **** UART_STATUS_t UART_AbortReceive(const UART_t *const handle)
 319:../Dave/Generated/UART/uart.c **** {
 320:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_SUCCESS;
 321:../Dave/Generated/UART/uart.c **** #ifdef UART_RX_DMA_USED
 322:../Dave/Generated/UART/uart.c ****   const UART_DMA_CONFIG_t * ptr_dma_config = handle->config->receive_dma_config;
 323:../Dave/Generated/UART/uart.c ****   XMC_DMA_t * ptr_gpdma = handle->config->global_dma->dma;
 324:../Dave/Generated/UART/uart.c **** #endif
 325:../Dave/Generated/UART/uart.c ****   XMC_ASSERT("UART_AbortReceive: UART APP handle invalid", ((handle != NULL)&&
 326:../Dave/Generated/UART/uart.c ****             (handle->runtime != NULL)))
 327:../Dave/Generated/UART/uart.c **** 
 328:../Dave/Generated/UART/uart.c ****   /*Reset the user buffer pointer to null*/
 329:../Dave/Generated/UART/uart.c ****   handle->runtime->rx_busy = false;
 330:../Dave/Generated/UART/uart.c ****   handle->runtime->rx_data = NULL;
 331:../Dave/Generated/UART/uart.c ****   switch(handle->config->receive_mode)
 332:../Dave/Generated/UART/uart.c ****   {
 333:../Dave/Generated/UART/uart.c **** #ifdef UART_RX_INTERRUPT_USED
 334:../Dave/Generated/UART/uart.c ****   case UART_TRANSFER_MODE_INTERRUPT:
 335:../Dave/Generated/UART/uart.c ****     /*Disable the receive interrupts*/
 336:../Dave/Generated/UART/uart.c ****     if (handle->config->rx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 337:../Dave/Generated/UART/uart.c ****     {
 338:../Dave/Generated/UART/uart.c ****       XMC_USIC_CH_RXFIFO_DisableEvent(handle->channel,
 339:../Dave/Generated/UART/uart.c ****             ((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD |
 340:../Dave/Generated/UART/uart.c ****             (uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE));
 341:../Dave/Generated/UART/uart.c ****     }
 342:../Dave/Generated/UART/uart.c ****     else
 343:../Dave/Generated/UART/uart.c ****     {
 344:../Dave/Generated/UART/uart.c ****       XMC_UART_CH_DisableEvent(handle->channel,
 345:../Dave/Generated/UART/uart.c ****             ((uint32_t)XMC_USIC_CH_EVENT_STANDARD_RECEIVE |
 346:../Dave/Generated/UART/uart.c ****             (uint32_t)XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE));
 347:../Dave/Generated/UART/uart.c ****     }
 348:../Dave/Generated/UART/uart.c ****     break;
 349:../Dave/Generated/UART/uart.c **** #endif
 350:../Dave/Generated/UART/uart.c **** #ifdef UART_RX_DMA_USED
 351:../Dave/Generated/UART/uart.c ****   case UART_TRANSFER_MODE_DMA:
 352:../Dave/Generated/UART/uart.c ****     /*Disable the receive interrupts*/
 353:../Dave/Generated/UART/uart.c ****     if (XMC_DMA_CH_IsEnabled(ptr_gpdma, ptr_dma_config->dma_channel))
 354:../Dave/Generated/UART/uart.c ****     {
 355:../Dave/Generated/UART/uart.c ****       XMC_DMA_CH_Disable(ptr_gpdma, ptr_dma_config->dma_channel);
 356:../Dave/Generated/UART/uart.c ****       while(XMC_DMA_CH_IsEnabled(ptr_gpdma, ptr_dma_config->dma_channel)==true)
 357:../Dave/Generated/UART/uart.c ****       {
 358:../Dave/Generated/UART/uart.c ****       }
 359:../Dave/Generated/UART/uart.c ****       XMC_UART_CH_DisableEvent(handle->channel,
 360:../Dave/Generated/UART/uart.c ****             ((uint32_t)XMC_USIC_CH_EVENT_STANDARD_RECEIVE |
 361:../Dave/Generated/UART/uart.c ****             (uint32_t)XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE));
 362:../Dave/Generated/UART/uart.c ****     }
 363:../Dave/Generated/UART/uart.c ****     break;
 364:../Dave/Generated/UART/uart.c **** #endif
 365:../Dave/Generated/UART/uart.c ****   default:
 366:../Dave/Generated/UART/uart.c ****     ret_stat = UART_STATUS_MODE_MISMATCH;
 367:../Dave/Generated/UART/uart.c ****     break;
 368:../Dave/Generated/UART/uart.c ****   }
 369:../Dave/Generated/UART/uart.c ****   return ret_stat;
 370:../Dave/Generated/UART/uart.c **** }
 371:../Dave/Generated/UART/uart.c **** #endif
 372:../Dave/Generated/UART/uart.c **** 
 373:../Dave/Generated/UART/uart.c **** /*
 374:../Dave/Generated/UART/uart.c ****  * @brief Changes the baudrate of UART channel.
 375:../Dave/Generated/UART/uart.c ****  *
 376:../Dave/Generated/UART/uart.c ****  * @param UART_t * Pointer to the UART APP handle.
 377:../Dave/Generated/UART/uart.c ****  * @param baud Value of new baudrate.
 378:../Dave/Generated/UART/uart.c ****  * @param oversampling Number of samples to be considered for each symbol. 16 is the standard value
 379:../Dave/Generated/UART/uart.c ****  *
 380:../Dave/Generated/UART/uart.c ****  * @return UART_STATUS_t UART_STATUS_SUCCESS if baudrate changed successfully.
 381:../Dave/Generated/UART/uart.c ****  *                       UART_STATUS_BUSY if the UART channel is busy.
 382:../Dave/Generated/UART/uart.c ****  *
 383:../Dave/Generated/UART/uart.c ****  * \par<b>Description:</b><br>
 384:../Dave/Generated/UART/uart.c ****  * The function stops the channel, calculates the clock divider values to achieve the desired baudr
 385:../Dave/Generated/UART/uart.c ****  * Sets the divider values and reconfigures the channel as per the configuration in the UI. The cha
 386:../Dave/Generated/UART/uart.c ****  * enabled at the end of configuration.
 387:../Dave/Generated/UART/uart.c ****  */
 388:../Dave/Generated/UART/uart.c **** UART_STATUS_t UART_SetBaudrate(const UART_t * handle, uint32_t baud, uint32_t oversampling)
 389:../Dave/Generated/UART/uart.c **** {
 390:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_BUSY;
 391:../Dave/Generated/UART/uart.c ****   const UART_TX_CONFIG_t * ptr_tx_conf = handle->config->tx_pin_config;
 392:../Dave/Generated/UART/uart.c **** 
 393:../Dave/Generated/UART/uart.c ****   XMC_ASSERT("UART_SetBaudrate: UART APP handle invalid", ((handle != NULL)&&
 394:../Dave/Generated/UART/uart.c ****             ((handle->config != NULL) && (handle->runtime != NULL))))
 395:../Dave/Generated/UART/uart.c **** 
 396:../Dave/Generated/UART/uart.c ****   if ((handle->runtime->tx_busy == false) && (handle->runtime->rx_busy == false))
 397:../Dave/Generated/UART/uart.c ****   {
 398:../Dave/Generated/UART/uart.c ****     /* Set UART TX pin as input pin to avoid spikes on the pin.*/
 399:../Dave/Generated/UART/uart.c ****     if (handle->config->mode != UART_MODE_LOOPBACK)
 400:../Dave/Generated/UART/uart.c ****     {
 401:../Dave/Generated/UART/uart.c ****       XMC_GPIO_SetMode(ptr_tx_conf->port, ptr_tx_conf->pin, XMC_GPIO_MODE_INPUT_TRISTATE);
 402:../Dave/Generated/UART/uart.c ****     }
 403:../Dave/Generated/UART/uart.c ****     /* Stop the UART channel before changing the baudrate.*/
 404:../Dave/Generated/UART/uart.c ****     if (XMC_UART_CH_Stop(handle->channel) == XMC_UART_CH_STATUS_OK)
 405:../Dave/Generated/UART/uart.c ****     {
 406:../Dave/Generated/UART/uart.c ****       /*Change the baudrate*/
 407:../Dave/Generated/UART/uart.c ****       ret_stat = (UART_STATUS_t)XMC_UART_CH_SetBaudrate(handle->channel, baud, oversampling);
 408:../Dave/Generated/UART/uart.c ****       /*Set the sample point if the baudrate is modified*/
 409:../Dave/Generated/UART/uart.c ****       if (ret_stat == UART_STATUS_SUCCESS)
 410:../Dave/Generated/UART/uart.c ****       {
 411:../Dave/Generated/UART/uart.c ****         XMC_UART_CH_SetSamplePoint(handle->channel, (uint32_t)(oversampling >> 1U)+1U);
 412:../Dave/Generated/UART/uart.c ****       }
 413:../Dave/Generated/UART/uart.c ****       /*Enable UART*/
 414:../Dave/Generated/UART/uart.c ****       XMC_UART_CH_Start(handle->channel);
 415:../Dave/Generated/UART/uart.c ****       /* Initialize UART TX pin */
 416:../Dave/Generated/UART/uart.c ****       if (handle->config->mode != UART_MODE_LOOPBACK)
 417:../Dave/Generated/UART/uart.c ****       {
 418:../Dave/Generated/UART/uart.c ****         XMC_GPIO_Init(ptr_tx_conf->port, ptr_tx_conf->pin, ptr_tx_conf->config);
 419:../Dave/Generated/UART/uart.c ****       }
 420:../Dave/Generated/UART/uart.c ****     }
 421:../Dave/Generated/UART/uart.c ****     else
 422:../Dave/Generated/UART/uart.c ****     {
 423:../Dave/Generated/UART/uart.c ****       ret_stat = UART_STATUS_BUSY;
 424:../Dave/Generated/UART/uart.c ****     }
 425:../Dave/Generated/UART/uart.c ****   }
 426:../Dave/Generated/UART/uart.c ****   return ret_stat;
 427:../Dave/Generated/UART/uart.c **** }
 428:../Dave/Generated/UART/uart.c **** 
 429:../Dave/Generated/UART/uart.c **** #ifdef UART_TX_INTERRUPT_USED
 430:../Dave/Generated/UART/uart.c **** /*
 431:../Dave/Generated/UART/uart.c ****  * @brief Registers a request for transmitting data over UART channel.
 432:../Dave/Generated/UART/uart.c ****  *
 433:../Dave/Generated/UART/uart.c ****  * @param[in]  UART_t*  UART APP handle pointer of type UART_t
 434:../Dave/Generated/UART/uart.c ****  * @param[in]  uint8_t* Pointer to data
 435:../Dave/Generated/UART/uart.c ****  * @param[in]  uint32_t Total no of words to be transmitted.
 436:../Dave/Generated/UART/uart.c ****  *
 437:../Dave/Generated/UART/uart.c ****  * @return  UART_STATUS_t UART_STATUS_SUCCESS if the request is accepted.
 438:../Dave/Generated/UART/uart.c ****  *                        UART_STATUS_BUSY if a transmission is in progress.
 439:../Dave/Generated/UART/uart.c ****  * Details of function:
 440:../Dave/Generated/UART/uart.c ****  * The data transmission is accomplished using transmit interrupt. User can configure
 441:../Dave/Generated/UART/uart.c ****  * a callback function in the APP UI. When the data is fully transmitted, the callback
 442:../Dave/Generated/UART/uart.c ****  * function will be executed. If transmit FIFO is enabled, the trigger limit is set to 0.
 443:../Dave/Generated/UART/uart.c ****  * So the transmit interrupt will be generated when all the data in FIFO is moved from FIFO.
 444:../Dave/Generated/UART/uart.c ****  *
 445:../Dave/Generated/UART/uart.c ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 446:../Dave/Generated/UART/uart.c ****  * request is registered.
 447:../Dave/Generated/UART/uart.c ****  *
 448:../Dave/Generated/UART/uart.c ****  *
 449:../Dave/Generated/UART/uart.c ****  */
 450:../Dave/Generated/UART/uart.c **** UART_STATUS_t UART_StartTransmitIRQ(const UART_t *const handle, uint8_t* data_ptr, uint32_t count)
 451:../Dave/Generated/UART/uart.c **** {
 452:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_MODE_MISMATCH;
 453:../Dave/Generated/UART/uart.c ****   UART_RUNTIME_t * ptr_runtime = handle->runtime;
 454:../Dave/Generated/UART/uart.c **** 
 455:../Dave/Generated/UART/uart.c ****   XMC_ASSERT("UART_StartTransmitIRQ: UART APP handle invalid", ((handle != NULL)&&
 456:../Dave/Generated/UART/uart.c ****             (handle->runtime != NULL)))
 457:../Dave/Generated/UART/uart.c **** 
 458:../Dave/Generated/UART/uart.c ****   if (handle->config->transmit_mode == UART_TRANSFER_MODE_INTERRUPT)
 459:../Dave/Generated/UART/uart.c ****   {
 460:../Dave/Generated/UART/uart.c ****     ret_stat = UART_STATUS_BUSY;
 461:../Dave/Generated/UART/uart.c ****     if (ptr_runtime->tx_busy == false)
 462:../Dave/Generated/UART/uart.c ****     {
 463:../Dave/Generated/UART/uart.c ****       /*If there is no transmission in progress*/
 464:../Dave/Generated/UART/uart.c ****       if ((data_ptr != NULL) && (count > 0U))
 465:../Dave/Generated/UART/uart.c ****       {
 466:../Dave/Generated/UART/uart.c ****         /*Obtain the address of data, size of data*/
 467:../Dave/Generated/UART/uart.c ****         ptr_runtime->tx_data = data_ptr;
 468:../Dave/Generated/UART/uart.c ****         ptr_runtime->tx_data_count = count;
 469:../Dave/Generated/UART/uart.c ****         /*Initialize to first index and set the busy flag*/
 470:../Dave/Generated/UART/uart.c ****         ptr_runtime->tx_data_index = 0U;
 471:../Dave/Generated/UART/uart.c ****         ptr_runtime->tx_busy = true;
 472:../Dave/Generated/UART/uart.c **** 
 473:../Dave/Generated/UART/uart.c ****         /*Enable the transmit buffer event*/
 474:../Dave/Generated/UART/uart.c ****         if (handle->config->tx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 475:../Dave/Generated/UART/uart.c ****         {
 476:../Dave/Generated/UART/uart.c ****           /*Clear the transmit FIFO*/
 477:../Dave/Generated/UART/uart.c ****           XMC_USIC_CH_TXFIFO_Flush(handle->channel);
 478:../Dave/Generated/UART/uart.c ****           /*Enable transmit buffer interrupt*/
 479:../Dave/Generated/UART/uart.c ****           XMC_USIC_CH_TXFIFO_EnableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_ST
 480:../Dave/Generated/UART/uart.c ****         }
 481:../Dave/Generated/UART/uart.c ****         else
 482:../Dave/Generated/UART/uart.c ****         {
 483:../Dave/Generated/UART/uart.c ****           XMC_USIC_CH_EnableEvent(handle->channel, (uint32_t)XMC_USIC_CH_EVENT_TRANSMIT_BUFFER);
 484:../Dave/Generated/UART/uart.c ****         }
 485:../Dave/Generated/UART/uart.c ****         ret_stat = UART_STATUS_SUCCESS;
 486:../Dave/Generated/UART/uart.c ****         /*Trigger the transmit buffer interrupt*/
 487:../Dave/Generated/UART/uart.c ****         XMC_USIC_CH_TriggerServiceRequest(handle->channel, (uint32_t)handle->config->tx_sr);
 488:../Dave/Generated/UART/uart.c ****       }
 489:../Dave/Generated/UART/uart.c ****       else
 490:../Dave/Generated/UART/uart.c ****       {
 491:../Dave/Generated/UART/uart.c ****         ret_stat = UART_STATUS_BUFFER_INVALID;
 492:../Dave/Generated/UART/uart.c ****       }
 493:../Dave/Generated/UART/uart.c ****     }
 494:../Dave/Generated/UART/uart.c ****   }
 495:../Dave/Generated/UART/uart.c ****   return ret_stat;
 496:../Dave/Generated/UART/uart.c **** }
 497:../Dave/Generated/UART/uart.c **** #endif
 498:../Dave/Generated/UART/uart.c **** 
 499:../Dave/Generated/UART/uart.c **** #ifdef UART_RX_INTERRUPT_USED
 500:../Dave/Generated/UART/uart.c **** /*
 501:../Dave/Generated/UART/uart.c ****  * @brief Registers a request to receive data over UART channel.
 502:../Dave/Generated/UART/uart.c ****  *
 503:../Dave/Generated/UART/uart.c ****  * @param[in]  UART_t* UART APP handle pointer of type UART_t
 504:../Dave/Generated/UART/uart.c ****  * @param[in]  uint8_t*  Pointer to data array
 505:../Dave/Generated/UART/uart.c ****  * @param[in]  uint32_t  Total no of bytes to be read.
 506:../Dave/Generated/UART/uart.c ****  *
 507:../Dave/Generated/UART/uart.c ****  * @return  UART_STATUS_t UART_STATUS_SUCCESS if the request is accepted.
 508:../Dave/Generated/UART/uart.c ****  *                        UART_STATUS_BUSY if a reception is in progress.
 509:../Dave/Generated/UART/uart.c ****  * Details of function:
 510:../Dave/Generated/UART/uart.c ****  * This function registers the receive request by configuring the UART
 511:../Dave/Generated/UART/uart.c ****  * receive FIFO/Standard buffer (depending on the user configuration). The data
 512:../Dave/Generated/UART/uart.c ****  * is received asynchronously. When the requested number of data bytes are received,
 513:../Dave/Generated/UART/uart.c ****  * optionally, the user configured callback function will be executed. If a callback
 514:../Dave/Generated/UART/uart.c ****  * function is not configured on the APP UI, the user has to poll for the status of
 515:../Dave/Generated/UART/uart.c ****  * rx_busy variable of the APP handle structure.
 516:../Dave/Generated/UART/uart.c ****  *
 517:../Dave/Generated/UART/uart.c ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 518:../Dave/Generated/UART/uart.c ****  * request is registered.
 519:../Dave/Generated/UART/uart.c ****  *
 520:../Dave/Generated/UART/uart.c ****  *
 521:../Dave/Generated/UART/uart.c ****  */
 522:../Dave/Generated/UART/uart.c **** UART_STATUS_t UART_StartReceiveIRQ(const UART_t *const handle, uint8_t* data_ptr, uint32_t count)
 523:../Dave/Generated/UART/uart.c **** {
 524:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_MODE_MISMATCH;
 525:../Dave/Generated/UART/uart.c ****   UART_RUNTIME_t * ptr_runtime = handle->runtime;
 526:../Dave/Generated/UART/uart.c **** 
 527:../Dave/Generated/UART/uart.c ****   XMC_ASSERT("UART_StartReceiveIRQ: UART APP handle invalid", ((handle != NULL)&&
 528:../Dave/Generated/UART/uart.c ****             (handle->runtime != NULL)))
 529:../Dave/Generated/UART/uart.c **** 
 530:../Dave/Generated/UART/uart.c ****   if (handle->config->receive_mode == UART_TRANSFER_MODE_INTERRUPT)
 531:../Dave/Generated/UART/uart.c ****   {
 532:../Dave/Generated/UART/uart.c ****     ret_stat = UART_STATUS_BUSY;
 533:../Dave/Generated/UART/uart.c ****     if (ptr_runtime->rx_busy == false)
 534:../Dave/Generated/UART/uart.c ****     {
 535:../Dave/Generated/UART/uart.c ****       /*If no active reception in progress*/
 536:../Dave/Generated/UART/uart.c ****       if ((data_ptr != NULL) && (count > 0U))
 537:../Dave/Generated/UART/uart.c ****       {
 538:../Dave/Generated/UART/uart.c ****         /*Obtain the address of data buffer and
 539:../Dave/Generated/UART/uart.c ****          * number of data bytes to be received*/
 540:../Dave/Generated/UART/uart.c ****         ptr_runtime->rx_data = data_ptr;
 541:../Dave/Generated/UART/uart.c ****         ptr_runtime->rx_data_count = count;
 542:../Dave/Generated/UART/uart.c ****         ptr_runtime->rx_busy = true;
 543:../Dave/Generated/UART/uart.c ****         ptr_runtime->rx_data_index = 0U;
 544:../Dave/Generated/UART/uart.c **** 
 545:../Dave/Generated/UART/uart.c ****         if (handle->config->rx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 546:../Dave/Generated/UART/uart.c ****         {
 547:../Dave/Generated/UART/uart.c ****           /*Clear the receive FIFO, configure the trigger lime
 548:../Dave/Generated/UART/uart.c ****            * and enable the receive events*/
 549:../Dave/Generated/UART/uart.c ****           XMC_USIC_CH_RXFIFO_Flush(handle->channel);
 550:../Dave/Generated/UART/uart.c **** 
 551:../Dave/Generated/UART/uart.c ****           /*Configure the FIFO trigger limit based on the required data size*/
 552:../Dave/Generated/UART/uart.c ****           UART_lReconfigureRxFIFO(handle, count);
 553:../Dave/Generated/UART/uart.c **** 
 554:../Dave/Generated/UART/uart.c ****           XMC_USIC_CH_RXFIFO_EnableEvent(handle->channel,
 555:../Dave/Generated/UART/uart.c ****             (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD |
 556:../Dave/Generated/UART/uart.c ****             (uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE));
 557:../Dave/Generated/UART/uart.c ****         }
 558:../Dave/Generated/UART/uart.c ****         else
 559:../Dave/Generated/UART/uart.c ****         {
 560:../Dave/Generated/UART/uart.c ****           XMC_USIC_CH_EnableEvent(handle->channel,
 561:../Dave/Generated/UART/uart.c ****           (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_STANDARD_RECEIVE | (uint32_t)XMC_USIC_CH_EVENT_ALT
 562:../Dave/Generated/UART/uart.c ****         }
 563:../Dave/Generated/UART/uart.c ****         ret_stat = UART_STATUS_SUCCESS;
 564:../Dave/Generated/UART/uart.c ****       }
 565:../Dave/Generated/UART/uart.c ****       else
 566:../Dave/Generated/UART/uart.c ****       {
 567:../Dave/Generated/UART/uart.c ****         ret_stat = UART_STATUS_BUFFER_INVALID;
 568:../Dave/Generated/UART/uart.c ****       }
 569:../Dave/Generated/UART/uart.c ****     }
 570:../Dave/Generated/UART/uart.c ****   }
 571:../Dave/Generated/UART/uart.c ****   return ret_stat;
 572:../Dave/Generated/UART/uart.c **** }
 573:../Dave/Generated/UART/uart.c **** #endif
 574:../Dave/Generated/UART/uart.c **** 
 575:../Dave/Generated/UART/uart.c **** #ifdef UART_TX_DMA_USED
 576:../Dave/Generated/UART/uart.c **** /*
 577:../Dave/Generated/UART/uart.c ****  * @brief Registers a request for transmitting data over UART channel using DMA.
 578:../Dave/Generated/UART/uart.c ****  *
 579:../Dave/Generated/UART/uart.c ****  * @param[in]  UART_t*  UART APP handle pointer of type UART_t
 580:../Dave/Generated/UART/uart.c ****  * @param[in]  uint8_t* Pointer to data
 581:../Dave/Generated/UART/uart.c ****  * @param[in]  uint32_t Total no of words to be transmitted.
 582:../Dave/Generated/UART/uart.c ****  *
 583:../Dave/Generated/UART/uart.c ****  * @return  UART_STATUS_t UART_STATUS_SUCCESS if the request is accepted.
 584:../Dave/Generated/UART/uart.c ****  *                        UART_STATUS_BUSY if a transmission is in progress.
 585:../Dave/Generated/UART/uart.c ****  * Details of function:
 586:../Dave/Generated/UART/uart.c ****  * The data transmission is accomplished using a DMA channel. User can configure
 587:../Dave/Generated/UART/uart.c ****  * a callback function in the APP UI. When the data is fully transmitted, the callback
 588:../Dave/Generated/UART/uart.c ****  * function will be executed.
 589:../Dave/Generated/UART/uart.c ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 590:../Dave/Generated/UART/uart.c ****  * request is registered.
 591:../Dave/Generated/UART/uart.c ****  *
 592:../Dave/Generated/UART/uart.c ****  *
 593:../Dave/Generated/UART/uart.c ****  */
 594:../Dave/Generated/UART/uart.c **** UART_STATUS_t UART_StartTransmitDMA(const UART_t *const handle, uint8_t* data_ptr, uint32_t count)
 595:../Dave/Generated/UART/uart.c **** {
 596:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_MODE_MISMATCH;
 597:../Dave/Generated/UART/uart.c ****   UART_RUNTIME_t * ptr_runtime = handle->runtime;
 598:../Dave/Generated/UART/uart.c ****   const UART_DMA_CONFIG_t * ptr_dma_config = handle->config->transmit_dma_config;
 599:../Dave/Generated/UART/uart.c ****   XMC_DMA_t * ptr_gpdma = handle->config->global_dma->dma;
 600:../Dave/Generated/UART/uart.c **** 
 601:../Dave/Generated/UART/uart.c ****   XMC_ASSERT("UART_StartTransmitDMA: UART APP handle invalid", (((handle != NULL)&&
 602:../Dave/Generated/UART/uart.c ****             (handle->runtime != NULL))&&(handle->config != NULL)))
 603:../Dave/Generated/UART/uart.c **** 
 604:../Dave/Generated/UART/uart.c ****   if (handle->config->transmit_mode == UART_TRANSFER_MODE_DMA)
 605:../Dave/Generated/UART/uart.c ****   {
 606:../Dave/Generated/UART/uart.c ****     ret_stat = UART_STATUS_BUSY;
 607:../Dave/Generated/UART/uart.c ****     if (ptr_runtime->tx_busy == false)
 608:../Dave/Generated/UART/uart.c ****     {
 609:../Dave/Generated/UART/uart.c ****       /*If there is no transmission in progress*/
 610:../Dave/Generated/UART/uart.c ****       if ((data_ptr != NULL) && ((count > 0U) &&(count <= UART_DMA_MAXCOUNT)))
 611:../Dave/Generated/UART/uart.c ****       {
 612:../Dave/Generated/UART/uart.c ****         /*Obtain the address of data, size of data*/
 613:../Dave/Generated/UART/uart.c ****         ptr_runtime->tx_data = data_ptr;
 614:../Dave/Generated/UART/uart.c ****         ptr_runtime->tx_data_count = count;
 615:../Dave/Generated/UART/uart.c ****         /*Initialize to first index and set the busy flag*/
 616:../Dave/Generated/UART/uart.c ****         ptr_runtime->tx_data_index = 0U;
 617:../Dave/Generated/UART/uart.c ****         ptr_runtime->tx_busy = true;
 618:../Dave/Generated/UART/uart.c **** 
 619:../Dave/Generated/UART/uart.c ****         /*Enable transmit event generation*/
 620:../Dave/Generated/UART/uart.c ****         XMC_UART_CH_EnableEvent(handle->channel, (uint32_t)XMC_UART_CH_EVENT_TRANSMIT_BUFFER);
 621:../Dave/Generated/UART/uart.c ****         ret_stat = UART_STATUS_SUCCESS;
 622:../Dave/Generated/UART/uart.c **** 
 623:../Dave/Generated/UART/uart.c ****         /*Enable DMA channel*/
 624:../Dave/Generated/UART/uart.c ****         XMC_DMA_CH_SetBlockSize(ptr_gpdma, ptr_dma_config->dma_channel, count);
 625:../Dave/Generated/UART/uart.c ****         XMC_DMA_CH_SetSourceAddress(ptr_gpdma, ptr_dma_config->dma_channel, (uint32_t)data_ptr);
 626:../Dave/Generated/UART/uart.c ****         XMC_DMA_CH_SetDestinationAddress(ptr_gpdma, ptr_dma_config->dma_channel,
 627:../Dave/Generated/UART/uart.c ****                                          (uint32_t)&(handle->channel->TBUF[0]));
 628:../Dave/Generated/UART/uart.c ****         XMC_DMA_CH_Enable(ptr_gpdma, ptr_dma_config->dma_channel);
 629:../Dave/Generated/UART/uart.c ****       }
 630:../Dave/Generated/UART/uart.c ****       else
 631:../Dave/Generated/UART/uart.c ****       {
 632:../Dave/Generated/UART/uart.c ****         ret_stat = UART_STATUS_BUFFER_INVALID;
 633:../Dave/Generated/UART/uart.c ****       }
 634:../Dave/Generated/UART/uart.c ****     }
 635:../Dave/Generated/UART/uart.c ****   }
 636:../Dave/Generated/UART/uart.c ****   return ret_stat;
 637:../Dave/Generated/UART/uart.c **** }
 638:../Dave/Generated/UART/uart.c **** #endif
 639:../Dave/Generated/UART/uart.c **** 
 640:../Dave/Generated/UART/uart.c **** #ifdef UART_RX_DMA_USED
 641:../Dave/Generated/UART/uart.c **** /*
 642:../Dave/Generated/UART/uart.c ****  * @brief Registers a request to receive data over UART channel using DMA.
 643:../Dave/Generated/UART/uart.c ****  *
 644:../Dave/Generated/UART/uart.c ****  * @param[in]  UART_t* UART APP handle pointer of type UART_t
 645:../Dave/Generated/UART/uart.c ****  * @param[in]  uint8_t*  Pointer to data array
 646:../Dave/Generated/UART/uart.c ****  * @param[in]  uint32_t  Total no of bytes to be read.
 647:../Dave/Generated/UART/uart.c ****  *
 648:../Dave/Generated/UART/uart.c ****  * @return  UART_STATUS_t UART_STATUS_SUCCESS if the request is accepted.
 649:../Dave/Generated/UART/uart.c ****  *                        UART_STATUS_BUSY if a reception is in progress.
 650:../Dave/Generated/UART/uart.c ****  * Details of function:
 651:../Dave/Generated/UART/uart.c ****  * This function registers the receive request by configuring the UART
 652:../Dave/Generated/UART/uart.c ****  * receive Standard buffer and the DMA channel. The data
 653:../Dave/Generated/UART/uart.c ****  * is received asynchronously. When the requested number of data bytes are received,
 654:../Dave/Generated/UART/uart.c ****  * optionally, the user configured callback function will be executed.
 655:../Dave/Generated/UART/uart.c ****  *
 656:../Dave/Generated/UART/uart.c ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 657:../Dave/Generated/UART/uart.c ****  * request is registered.
 658:../Dave/Generated/UART/uart.c ****  *
 659:../Dave/Generated/UART/uart.c ****  *
 660:../Dave/Generated/UART/uart.c ****  */
 661:../Dave/Generated/UART/uart.c **** UART_STATUS_t UART_StartReceiveDMA(const UART_t *const handle, uint8_t* data_ptr, uint32_t count)
 662:../Dave/Generated/UART/uart.c **** {
 663:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_MODE_MISMATCH;
 664:../Dave/Generated/UART/uart.c ****   UART_RUNTIME_t * ptr_runtime = handle->runtime;
 665:../Dave/Generated/UART/uart.c ****   const UART_DMA_CONFIG_t * ptr_dma_config = handle->config->receive_dma_config;
 666:../Dave/Generated/UART/uart.c ****   XMC_DMA_t * ptr_gpdma = handle->config->global_dma->dma;
 667:../Dave/Generated/UART/uart.c **** 
 668:../Dave/Generated/UART/uart.c ****   XMC_ASSERT("UART_StartReceiveDMA: UART APP handle invalid", (((handle != NULL)&&
 669:../Dave/Generated/UART/uart.c ****             (handle->runtime != NULL)) && (handle->config != NULL)))
 670:../Dave/Generated/UART/uart.c **** 
 671:../Dave/Generated/UART/uart.c ****   if (handle->config->receive_mode == UART_TRANSFER_MODE_DMA)
 672:../Dave/Generated/UART/uart.c ****   {
 673:../Dave/Generated/UART/uart.c ****     ret_stat = UART_STATUS_BUSY;
 674:../Dave/Generated/UART/uart.c ****     if (ptr_runtime->rx_busy == false)
 675:../Dave/Generated/UART/uart.c ****     {
 676:../Dave/Generated/UART/uart.c ****       /*If no active reception in progress*/
 677:../Dave/Generated/UART/uart.c ****       if ((data_ptr != NULL) && ((count > 0U) && (count <= UART_DMA_MAXCOUNT)))
 678:../Dave/Generated/UART/uart.c ****       {
 679:../Dave/Generated/UART/uart.c ****         /*Obtain the address of data buffer and
 680:../Dave/Generated/UART/uart.c ****          * number of data bytes to be received*/
 681:../Dave/Generated/UART/uart.c ****         ptr_runtime->rx_data = data_ptr;
 682:../Dave/Generated/UART/uart.c ****         ptr_runtime->rx_data_count = count;
 683:../Dave/Generated/UART/uart.c ****         ptr_runtime->rx_busy = true;
 684:../Dave/Generated/UART/uart.c ****         ptr_runtime->rx_data_index = 0U;
 685:../Dave/Generated/UART/uart.c **** 
 686:../Dave/Generated/UART/uart.c ****         XMC_USIC_CH_EnableEvent(handle->channel,
 687:../Dave/Generated/UART/uart.c ****           (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_STANDARD_RECEIVE | (uint32_t)XMC_USIC_CH_EVENT_ALT
 688:../Dave/Generated/UART/uart.c ****         ret_stat = UART_STATUS_SUCCESS;
 689:../Dave/Generated/UART/uart.c **** 
 690:../Dave/Generated/UART/uart.c ****         /*Enable DMA channel*/
 691:../Dave/Generated/UART/uart.c ****         XMC_DMA_CH_SetBlockSize(ptr_gpdma, ptr_dma_config->dma_channel, count);
 692:../Dave/Generated/UART/uart.c ****         XMC_DMA_CH_SetSourceAddress(ptr_gpdma, ptr_dma_config->dma_channel, (uint32_t)&(handle->cha
 693:../Dave/Generated/UART/uart.c ****         XMC_DMA_CH_SetDestinationAddress(ptr_gpdma, ptr_dma_config->dma_channel, (uint32_t)data_ptr
 694:../Dave/Generated/UART/uart.c ****         XMC_DMA_CH_Enable(ptr_gpdma, ptr_dma_config->dma_channel);
 695:../Dave/Generated/UART/uart.c ****       }
 696:../Dave/Generated/UART/uart.c ****       else
 697:../Dave/Generated/UART/uart.c ****       {
 698:../Dave/Generated/UART/uart.c ****         ret_stat = UART_STATUS_BUFFER_INVALID;
 699:../Dave/Generated/UART/uart.c ****       }
 700:../Dave/Generated/UART/uart.c ****     }
 701:../Dave/Generated/UART/uart.c ****   }
 702:../Dave/Generated/UART/uart.c ****   return ret_stat;
 703:../Dave/Generated/UART/uart.c **** }
 704:../Dave/Generated/UART/uart.c **** #endif
 705:../Dave/Generated/UART/uart.c **** 
 706:../Dave/Generated/UART/uart.c **** #ifdef UART_TX_DIRECT_USED
 707:../Dave/Generated/UART/uart.c **** /*
 708:../Dave/Generated/UART/uart.c ****  * Polling method to transmit data.
 709:../Dave/Generated/UART/uart.c ****  * @param[in] UART_t* handle UART APP handle pointer
 710:../Dave/Generated/UART/uart.c ****  * @param[in] uint8_t*  Pointer to data array
 711:../Dave/Generated/UART/uart.c ****  * @param[in] uint32_t number of bytes to be transmitted.
 712:../Dave/Generated/UART/uart.c ****  *
 713:../Dave/Generated/UART/uart.c ****  * @return UART_STATUS_t Status of transmit request handling.
 714:../Dave/Generated/UART/uart.c ****  *
 715:../Dave/Generated/UART/uart.c ****  * Description:
 716:../Dave/Generated/UART/uart.c ****  * Transmits data by blocking the CPU until all data is sent. Transmission
 717:../Dave/Generated/UART/uart.c ****  * cannot be aborted since it is blocking implementation. Based on FIFO selection,
 718:../Dave/Generated/UART/uart.c ****  * either TBUF or IN register is updated with the data.
 719:../Dave/Generated/UART/uart.c ****  *
 720:../Dave/Generated/UART/uart.c ****  */
 721:../Dave/Generated/UART/uart.c **** static UART_STATUS_t UART_lStartTransmitPolling(const UART_t *const handle, uint8_t* data_ptr, uint
 722:../Dave/Generated/UART/uart.c **** {
 723:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_BUFFER_INVALID;
 724:../Dave/Generated/UART/uart.c ****   uint32_t loc_index;
 725:../Dave/Generated/UART/uart.c **** 
 726:../Dave/Generated/UART/uart.c ****   XMC_ASSERT("UART_Transmit: UART APP handle invalid", (((handle != NULL)&&
 727:../Dave/Generated/UART/uart.c ****             (handle->runtime != NULL))&&(handle->config != NULL)))
 728:../Dave/Generated/UART/uart.c **** 
 729:../Dave/Generated/UART/uart.c ****   if ((data_ptr != NULL) && (count > 0U))
 730:../Dave/Generated/UART/uart.c ****   {
 731:../Dave/Generated/UART/uart.c ****     ret_stat = UART_STATUS_BUSY;
 732:../Dave/Generated/UART/uart.c ****     if (handle->runtime->tx_busy == false)
 733:../Dave/Generated/UART/uart.c ****     {
 734:../Dave/Generated/UART/uart.c ****       handle->runtime->tx_busy = true;
 735:../Dave/Generated/UART/uart.c ****       if (handle->config->tx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 736:../Dave/Generated/UART/uart.c ****       {
 737:../Dave/Generated/UART/uart.c ****         /*Clear the transmit FIFO*/
 738:../Dave/Generated/UART/uart.c ****         XMC_USIC_CH_TXFIFO_Flush(handle->channel);
 739:../Dave/Generated/UART/uart.c ****       }
 740:../Dave/Generated/UART/uart.c ****       /*Loop through each byte*/
 741:../Dave/Generated/UART/uart.c ****       for (loc_index = 0U; loc_index < count; loc_index++)
 742:../Dave/Generated/UART/uart.c ****       {
 743:../Dave/Generated/UART/uart.c ****         /*If FIFO is enabled, FIFO filling status should be checked
 744:../Dave/Generated/UART/uart.c ****          * to avoid overflow error*/
 745:../Dave/Generated/UART/uart.c ****         if (handle->config->tx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 746:../Dave/Generated/UART/uart.c ****         {
 747:../Dave/Generated/UART/uart.c ****           /*Wait if transmit FIFO is full*/
 748:../Dave/Generated/UART/uart.c ****           while (XMC_USIC_CH_TXFIFO_IsFull(handle->channel) == true)
 749:../Dave/Generated/UART/uart.c ****           {
 750:../Dave/Generated/UART/uart.c ****           }
 751:../Dave/Generated/UART/uart.c ****         }
 752:../Dave/Generated/UART/uart.c ****         XMC_UART_CH_Transmit(handle->channel, (uint16_t)data_ptr[loc_index]);
 753:../Dave/Generated/UART/uart.c ****       }
 754:../Dave/Generated/UART/uart.c **** 
 755:../Dave/Generated/UART/uart.c ****       if (handle->config->tx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 756:../Dave/Generated/UART/uart.c ****       {
 757:../Dave/Generated/UART/uart.c ****         /*Wait till FIFO is empty*/
 758:../Dave/Generated/UART/uart.c ****         while (XMC_USIC_CH_TXFIFO_IsEmpty(handle->channel) == false)
 759:../Dave/Generated/UART/uart.c ****         {
 760:../Dave/Generated/UART/uart.c ****         }
 761:../Dave/Generated/UART/uart.c ****       }
 762:../Dave/Generated/UART/uart.c ****       ret_stat = UART_STATUS_SUCCESS;
 763:../Dave/Generated/UART/uart.c ****       handle->runtime->tx_busy = false;
 764:../Dave/Generated/UART/uart.c ****     }
 765:../Dave/Generated/UART/uart.c ****   }
 766:../Dave/Generated/UART/uart.c ****   return ret_stat;
 767:../Dave/Generated/UART/uart.c **** }
 768:../Dave/Generated/UART/uart.c **** #endif
 769:../Dave/Generated/UART/uart.c **** 
 770:../Dave/Generated/UART/uart.c **** #ifdef UART_RX_DIRECT_USED
 771:../Dave/Generated/UART/uart.c **** /*
 772:../Dave/Generated/UART/uart.c ****  * Polling method to receive data.
 773:../Dave/Generated/UART/uart.c ****  * @param[in] UART_t* handle UART APP handle pointer
 774:../Dave/Generated/UART/uart.c ****  * @param[in] uint8_t*  Pointer to data array
 775:../Dave/Generated/UART/uart.c ****  * @param[in] uint32_t number of bytes to be received.
 776:../Dave/Generated/UART/uart.c ****  *
 777:../Dave/Generated/UART/uart.c ****  * @return UART_STATUS_t Status of receive request handling.
 778:../Dave/Generated/UART/uart.c ****  *
 779:../Dave/Generated/UART/uart.c ****  * Description:
 780:../Dave/Generated/UART/uart.c ****  * Receives data by blocking the CPU until all data is received. Reception
 781:../Dave/Generated/UART/uart.c ****  * cannot be aborted since it is blocking implementation. Based on FIFO selection,
 782:../Dave/Generated/UART/uart.c ****  * either RBUF or OUT register will be read.
 783:../Dave/Generated/UART/uart.c ****  *
 784:../Dave/Generated/UART/uart.c ****  */
 785:../Dave/Generated/UART/uart.c **** static UART_STATUS_t UART_lStartReceivePolling(const UART_t *const handle, uint8_t* data_ptr, uint3
 786:../Dave/Generated/UART/uart.c **** {
 787:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_BUFFER_INVALID;
 788:../Dave/Generated/UART/uart.c ****   uint32_t loc_index;
 789:../Dave/Generated/UART/uart.c ****   uint32_t loc_status;
 790:../Dave/Generated/UART/uart.c **** 
 791:../Dave/Generated/UART/uart.c ****   XMC_ASSERT("UART_Receive: UART APP handle invalid", ((handle != NULL)&&
 792:../Dave/Generated/UART/uart.c ****             (handle->runtime != NULL)))
 793:../Dave/Generated/UART/uart.c **** 
 794:../Dave/Generated/UART/uart.c ****   if ((data_ptr != NULL) && (count > 0U))
 795:../Dave/Generated/UART/uart.c ****   {
 796:../Dave/Generated/UART/uart.c ****     ret_stat = UART_STATUS_BUSY;
 797:../Dave/Generated/UART/uart.c ****     if (handle->runtime->rx_busy == false)
 798:../Dave/Generated/UART/uart.c ****     {
 799:../Dave/Generated/UART/uart.c ****       handle->runtime->rx_busy = true;
 800:../Dave/Generated/UART/uart.c ****       if (handle->config->rx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 801:../Dave/Generated/UART/uart.c ****       {
 802:../Dave/Generated/UART/uart.c ****         /*Clear the receive FIFO, configure the trigger lime
 803:../Dave/Generated/UART/uart.c ****          * and enable the receive events*/
 804:../Dave/Generated/UART/uart.c ****         XMC_USIC_CH_RXFIFO_Flush(handle->channel);
 805:../Dave/Generated/UART/uart.c ****       }
 806:../Dave/Generated/UART/uart.c ****       for (loc_index = 0U; loc_index < count; loc_index++)
 807:../Dave/Generated/UART/uart.c ****       {
 808:../Dave/Generated/UART/uart.c ****         /*If receive FIFO is configured, wait for FIFO to get data.*/
 809:../Dave/Generated/UART/uart.c ****         if (handle->config->rx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 810:../Dave/Generated/UART/uart.c ****         {
 811:../Dave/Generated/UART/uart.c ****           /*Wait if FIFO empty*/
 812:../Dave/Generated/UART/uart.c ****           while(XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel) == true)
 813:../Dave/Generated/UART/uart.c ****           {
 814:../Dave/Generated/UART/uart.c ****           }
 815:../Dave/Generated/UART/uart.c ****         }
 816:../Dave/Generated/UART/uart.c ****         else
 817:../Dave/Generated/UART/uart.c ****         {
 818:../Dave/Generated/UART/uart.c ****           /*Wait for RIF or AIF flag update*/
 819:../Dave/Generated/UART/uart.c ****           loc_status = XMC_UART_CH_GetStatusFlag(handle->channel);
 820:../Dave/Generated/UART/uart.c ****           while (!(loc_status & ((uint32_t)XMC_UART_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION |
 821:../Dave/Generated/UART/uart.c ****                 (uint32_t)XMC_UART_CH_STATUS_FLAG_RECEIVE_INDICATION)))
 822:../Dave/Generated/UART/uart.c ****           {
 823:../Dave/Generated/UART/uart.c ****             loc_status = XMC_UART_CH_GetStatusFlag(handle->channel);
 824:../Dave/Generated/UART/uart.c ****           }
 825:../Dave/Generated/UART/uart.c ****           /*Clear the detected event.
 826:../Dave/Generated/UART/uart.c ****            * Both events should not be cleared at once, otherwise if 2 bytes are received, only
 827:../Dave/Generated/UART/uart.c ****            * one byte will be read.*/
 828:../Dave/Generated/UART/uart.c ****           XMC_UART_CH_ClearStatusFlag(handle->channel,
 829:../Dave/Generated/UART/uart.c ****               ((uint32_t)XMC_UART_CH_STATUS_FLAG_RECEIVE_INDICATION | (uint32_t)XMC_UART_CH_STATUS_
 830:../Dave/Generated/UART/uart.c ****         }
 831:../Dave/Generated/UART/uart.c ****         data_ptr[loc_index] = (uint8_t)XMC_UART_CH_GetReceivedData(handle->channel);
 832:../Dave/Generated/UART/uart.c ****       }
 833:../Dave/Generated/UART/uart.c ****       ret_stat = UART_STATUS_SUCCESS;
 834:../Dave/Generated/UART/uart.c ****       handle->runtime->rx_busy = false;
 835:../Dave/Generated/UART/uart.c ****     }
 836:../Dave/Generated/UART/uart.c ****   }
 837:../Dave/Generated/UART/uart.c ****   return ret_stat;
 838:../Dave/Generated/UART/uart.c **** }
 839:../Dave/Generated/UART/uart.c **** #endif
 840:../Dave/Generated/UART/uart.c **** 
 841:../Dave/Generated/UART/uart.c **** #ifdef UART_TX_INTERRUPT_USED
 842:../Dave/Generated/UART/uart.c **** /*
 843:../Dave/Generated/UART/uart.c ****  * Transmit interrupt handler for the APP.
 844:../Dave/Generated/UART/uart.c ****  * This is a common interrupt handling function called for different instances of the APP.
 845:../Dave/Generated/UART/uart.c ****  *
 846:../Dave/Generated/UART/uart.c ****  *  * param[in]  handle UART APP handle pointer of type UART_t*
 847:../Dave/Generated/UART/uart.c ****  *
 848:../Dave/Generated/UART/uart.c ****  *  * return void
 849:../Dave/Generated/UART/uart.c ****  */
 850:../Dave/Generated/UART/uart.c **** void UART_lTransmitHandler(const UART_t * const handle)
 851:../Dave/Generated/UART/uart.c **** {
 852:../Dave/Generated/UART/uart.c ****   UART_RUNTIME_t * ptr_runtime = handle->runtime;
 853:../Dave/Generated/UART/uart.c **** 
 854:../Dave/Generated/UART/uart.c ****   if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 855:../Dave/Generated/UART/uart.c ****   {
 856:../Dave/Generated/UART/uart.c ****     if (handle->config->tx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 857:../Dave/Generated/UART/uart.c ****     {
 858:../Dave/Generated/UART/uart.c ****       /*When Transmit FIFO is enabled*/
 859:../Dave/Generated/UART/uart.c ****       /*Fill the transmit FIFO */
 860:../Dave/Generated/UART/uart.c ****       while (XMC_USIC_CH_TXFIFO_IsFull(handle->channel) == false)
 861:../Dave/Generated/UART/uart.c ****       {
 862:../Dave/Generated/UART/uart.c ****         if (ptr_runtime->tx_data_index < ptr_runtime->tx_data_count)
 863:../Dave/Generated/UART/uart.c ****         {
 864:../Dave/Generated/UART/uart.c ****           /*Load the FIFO byte by byte till either FIFO is full or all data is loaded*/
 865:../Dave/Generated/UART/uart.c ****           XMC_UART_CH_Transmit(handle->channel,(uint16_t)ptr_runtime->tx_data[ptr_runtime->tx_data_
 866:../Dave/Generated/UART/uart.c ****           (ptr_runtime->tx_data_index)++;
 867:../Dave/Generated/UART/uart.c ****         }
 868:../Dave/Generated/UART/uart.c ****         else
 869:../Dave/Generated/UART/uart.c ****         {
 870:../Dave/Generated/UART/uart.c ****           break;
 871:../Dave/Generated/UART/uart.c ****         }
 872:../Dave/Generated/UART/uart.c ****       }
 873:../Dave/Generated/UART/uart.c ****     }
 874:../Dave/Generated/UART/uart.c ****     else
 875:../Dave/Generated/UART/uart.c ****     {
 876:../Dave/Generated/UART/uart.c ****       /*When Transmit FIFO is disabled*/
 877:../Dave/Generated/UART/uart.c ****       XMC_UART_CH_Transmit(handle->channel,(uint16_t)ptr_runtime->tx_data[ptr_runtime->tx_data_inde
 878:../Dave/Generated/UART/uart.c ****       (ptr_runtime->tx_data_index)++;
 879:../Dave/Generated/UART/uart.c ****     }
 880:../Dave/Generated/UART/uart.c ****   }
 881:../Dave/Generated/UART/uart.c ****   else
 882:../Dave/Generated/UART/uart.c ****   {
 883:../Dave/Generated/UART/uart.c ****     if (XMC_USIC_CH_TXFIFO_IsEmpty(handle->channel) == true)
 884:../Dave/Generated/UART/uart.c ****     {
 885:../Dave/Generated/UART/uart.c ****       if (handle->config->tx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 886:../Dave/Generated/UART/uart.c ****       {
 887:../Dave/Generated/UART/uart.c ****         /*Disable the transmit FIFO event*/
 888:../Dave/Generated/UART/uart.c ****         XMC_USIC_CH_TXFIFO_DisableEvent(handle->channel,(uint32_t)XMC_USIC_CH_TXFIFO_EVENT_CONF_STA
 889:../Dave/Generated/UART/uart.c ****       }
 890:../Dave/Generated/UART/uart.c ****       else
 891:../Dave/Generated/UART/uart.c ****       {
 892:../Dave/Generated/UART/uart.c ****         /*Disable the standard transmit event*/
 893:../Dave/Generated/UART/uart.c ****         XMC_USIC_CH_DisableEvent(handle->channel, (uint32_t)XMC_USIC_CH_EVENT_TRANSMIT_BUFFER);
 894:../Dave/Generated/UART/uart.c ****       }
 895:../Dave/Generated/UART/uart.c **** 
 896:../Dave/Generated/UART/uart.c ****       /*Wait for the transmit buffer to be free to ensure that all data is transmitted*/
 897:../Dave/Generated/UART/uart.c ****       while (XMC_USIC_CH_GetTransmitBufferStatus(handle->channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 898:../Dave/Generated/UART/uart.c ****       {
 899:../Dave/Generated/UART/uart.c **** 
 900:../Dave/Generated/UART/uart.c ****       }
 901:../Dave/Generated/UART/uart.c ****       /*All data is transmitted*/
 902:../Dave/Generated/UART/uart.c ****       ptr_runtime->tx_busy = false;
 903:../Dave/Generated/UART/uart.c ****       ptr_runtime->tx_data = NULL;
 904:../Dave/Generated/UART/uart.c **** 
 905:../Dave/Generated/UART/uart.c ****       if (handle->config->tx_cbhandler != NULL)
 906:../Dave/Generated/UART/uart.c ****       {
 907:../Dave/Generated/UART/uart.c ****         /*Execute the callback function provided in the UART APP UI*/
 908:../Dave/Generated/UART/uart.c ****         handle->config->tx_cbhandler();
 909:../Dave/Generated/UART/uart.c ****       }
 910:../Dave/Generated/UART/uart.c ****     }
 911:../Dave/Generated/UART/uart.c ****   }
 912:../Dave/Generated/UART/uart.c **** }
 913:../Dave/Generated/UART/uart.c **** #endif
 914:../Dave/Generated/UART/uart.c **** 
 915:../Dave/Generated/UART/uart.c **** #ifdef UART_RX_INTERRUPT_USED
 916:../Dave/Generated/UART/uart.c **** /*
 917:../Dave/Generated/UART/uart.c ****  * Receive interrupt handler for the APP.
 918:../Dave/Generated/UART/uart.c ****  * This is a common interrupt handling function for different instances of the UART APP.
 919:../Dave/Generated/UART/uart.c ****  *
 920:../Dave/Generated/UART/uart.c ****  * param[in]  handle UART APP handle pointer of type UART_t*
 921:../Dave/Generated/UART/uart.c ****  *
 922:../Dave/Generated/UART/uart.c ****  * return void
 923:../Dave/Generated/UART/uart.c ****  */
 924:../Dave/Generated/UART/uart.c **** void UART_lReceiveHandler(const UART_t * const handle)
 925:../Dave/Generated/UART/uart.c **** {
 926:../Dave/Generated/UART/uart.c ****   UART_RUNTIME_t * ptr_runtime = handle->runtime;
 927:../Dave/Generated/UART/uart.c **** 
 928:../Dave/Generated/UART/uart.c ****   if (handle->config->rx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 929:../Dave/Generated/UART/uart.c ****   {
 930:../Dave/Generated/UART/uart.c ****     /*When Receive FIFO is enabled*/
 931:../Dave/Generated/UART/uart.c ****     while (XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel) == false)
 932:../Dave/Generated/UART/uart.c ****     {
 933:../Dave/Generated/UART/uart.c ****       if (ptr_runtime->rx_data_index < ptr_runtime->rx_data_count)
 934:../Dave/Generated/UART/uart.c ****       {
 935:../Dave/Generated/UART/uart.c ****         /*Read all the content of Receive FIFO */
 936:../Dave/Generated/UART/uart.c ****         ptr_runtime->rx_data[ptr_runtime->rx_data_index] = (uint8_t)XMC_UART_CH_GetReceivedData(han
 937:../Dave/Generated/UART/uart.c ****         (ptr_runtime->rx_data_index)++;
 938:../Dave/Generated/UART/uart.c ****       }
 939:../Dave/Generated/UART/uart.c **** 
 940:../Dave/Generated/UART/uart.c ****       if (ptr_runtime->rx_data_index == ptr_runtime->rx_data_count)
 941:../Dave/Generated/UART/uart.c ****       {
 942:../Dave/Generated/UART/uart.c ****         /*Reception complete*/
 943:../Dave/Generated/UART/uart.c ****         ptr_runtime->rx_busy = false;
 944:../Dave/Generated/UART/uart.c ****         /*Disable both standard receive and alternative receive FIFO events*/
 945:../Dave/Generated/UART/uart.c ****         XMC_USIC_CH_RXFIFO_DisableEvent(handle->channel,
 946:../Dave/Generated/UART/uart.c ****             (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD |
 947:../Dave/Generated/UART/uart.c ****             (uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE));
 948:../Dave/Generated/UART/uart.c ****         if (handle->config->rx_cbhandler != NULL)
 949:../Dave/Generated/UART/uart.c ****         {
 950:../Dave/Generated/UART/uart.c ****           /*Execute the 'End of reception' callback function*/
 951:../Dave/Generated/UART/uart.c ****           handle->config->rx_cbhandler();
 952:../Dave/Generated/UART/uart.c ****         }
 953:../Dave/Generated/UART/uart.c ****         break;
 954:../Dave/Generated/UART/uart.c ****       }
 955:../Dave/Generated/UART/uart.c ****     }
 956:../Dave/Generated/UART/uart.c ****     /*Set the trigger limit if data still to be received*/
 957:../Dave/Generated/UART/uart.c ****     if (ptr_runtime->rx_data_index < ptr_runtime->rx_data_count)
 958:../Dave/Generated/UART/uart.c ****     {
 959:../Dave/Generated/UART/uart.c ****       UART_lReconfigureRxFIFO(handle,
 960:../Dave/Generated/UART/uart.c ****           (uint32_t)(ptr_runtime->rx_data_count - ptr_runtime->rx_data_index));
 961:../Dave/Generated/UART/uart.c ****     }
 962:../Dave/Generated/UART/uart.c ****   }
 963:../Dave/Generated/UART/uart.c ****   else
 964:../Dave/Generated/UART/uart.c ****   {
 965:../Dave/Generated/UART/uart.c ****     /*When RxFIFO is disabled*/
 966:../Dave/Generated/UART/uart.c ****     if (ptr_runtime->rx_data_index < ptr_runtime->rx_data_count)
 967:../Dave/Generated/UART/uart.c ****     {
 968:../Dave/Generated/UART/uart.c ****       ptr_runtime->rx_data[ptr_runtime->rx_data_index] = (uint8_t)XMC_UART_CH_GetReceivedData(handl
 969:../Dave/Generated/UART/uart.c ****       (ptr_runtime->rx_data_index)++;
 970:../Dave/Generated/UART/uart.c ****     }
 971:../Dave/Generated/UART/uart.c **** 
 972:../Dave/Generated/UART/uart.c ****     if (ptr_runtime->rx_data_index == ptr_runtime->rx_data_count)
 973:../Dave/Generated/UART/uart.c ****     {
 974:../Dave/Generated/UART/uart.c ****       /*Reception complete*/
 975:../Dave/Generated/UART/uart.c ****       ptr_runtime->rx_busy = false;
 976:../Dave/Generated/UART/uart.c ****       /*Disable both standard receive and alternative receive FIFO events*/
 977:../Dave/Generated/UART/uart.c ****       XMC_USIC_CH_DisableEvent(handle->channel,
 978:../Dave/Generated/UART/uart.c ****           (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE | (uint32_t)XMC_USIC_CH_EVENT_
 979:../Dave/Generated/UART/uart.c **** 
 980:../Dave/Generated/UART/uart.c ****       if (handle->config->rx_cbhandler != NULL)
 981:../Dave/Generated/UART/uart.c ****       {
 982:../Dave/Generated/UART/uart.c ****         /*Execute the 'End of reception' callback function*/
 983:../Dave/Generated/UART/uart.c ****         handle->config->rx_cbhandler();
 984:../Dave/Generated/UART/uart.c ****       }
 985:../Dave/Generated/UART/uart.c ****     }
 986:../Dave/Generated/UART/uart.c ****   }
 987:../Dave/Generated/UART/uart.c **** }
 988:../Dave/Generated/UART/uart.c **** 
 989:../Dave/Generated/UART/uart.c **** /*
 990:../Dave/Generated/UART/uart.c ****  * A local function to reconfigure Receive FIFO with the given size and trigger limit.
 991:../Dave/Generated/UART/uart.c ****  * Size is needed because the FIFO should be disabled before changing the trigger limit by
 992:../Dave/Generated/UART/uart.c ****  * clearing the FIFO size.
 993:../Dave/Generated/UART/uart.c ****  *
 994:../Dave/Generated/UART/uart.c ****  * param[in] UART_t * pointer to the UART APP handle
 995:../Dave/Generated/UART/uart.c ****  * param[in] uint8_t  number of bytes to be received.
 996:../Dave/Generated/UART/uart.c ****  *
 997:../Dave/Generated/UART/uart.c ****  * return void.
 998:../Dave/Generated/UART/uart.c ****  */
 999:../Dave/Generated/UART/uart.c **** static void UART_lReconfigureRxFIFO(const UART_t * const handle, uint32_t data_size)
1000:../Dave/Generated/UART/uart.c **** {
  25              	 .loc 1 1000 0
  26              	 .cfi_startproc
  27              	.LVL0:
  28 0000 10B5     	 push {r4,lr}
  29              	.LCFI0:
  30              	 .cfi_def_cfa_offset 8
  31              	 .cfi_offset 4,-8
  32              	 .cfi_offset 14,-4
1001:../Dave/Generated/UART/uart.c ****   uint32_t fifo_size;
1002:../Dave/Generated/UART/uart.c ****   uint32_t ret_limit_val = 0U;
1003:../Dave/Generated/UART/uart.c **** 
1004:../Dave/Generated/UART/uart.c ****   /*Get FIFO size in bytes*/
1005:../Dave/Generated/UART/uart.c ****   fifo_size = (uint32_t)(0x01UL << (uint8_t)(handle->config->rx_fifo_size));
  33              	 .loc 1 1005 0
  34 0002 4368     	 ldr r3,[r0,#4]
1000:../Dave/Generated/UART/uart.c ****   uint32_t fifo_size;
  35              	 .loc 1 1000 0
  36 0004 0C1C     	 mov r4,r1
  37              	 .loc 1 1005 0
  38 0006 2833     	 add r3,r3,#40
  39 0008 1978     	 ldrb r1,[r3]
  40              	.LVL1:
  41 000a 0123     	 mov r3,#1
  42 000c 8B40     	 lsl r3,r3,r1
  43              	.LVL2:
1006:../Dave/Generated/UART/uart.c ****   /*If data size is more than FIFO size, configure the limit to the FIFO size*/
1007:../Dave/Generated/UART/uart.c ****   if (data_size < fifo_size)
1008:../Dave/Generated/UART/uart.c ****   {
1009:../Dave/Generated/UART/uart.c ****     ret_limit_val = (uint32_t)(data_size - 1U);
1010:../Dave/Generated/UART/uart.c ****   }
1011:../Dave/Generated/UART/uart.c ****   else
1012:../Dave/Generated/UART/uart.c ****   {
1013:../Dave/Generated/UART/uart.c ****     ret_limit_val = (uint32_t)(fifo_size - 1U);
  44              	 .loc 1 1013 0
  45 000e 5A1E     	 sub r2,r3,#1
1007:../Dave/Generated/UART/uart.c ****   {
  46              	 .loc 1 1007 0
  47 0010 9C42     	 cmp r4,r3
  48 0012 00D2     	 bcs .L3
1009:../Dave/Generated/UART/uart.c ****   }
  49              	 .loc 1 1009 0
  50 0014 621E     	 sub r2,r4,#1
  51              	.LVL3:
  52              	.L3:
1014:../Dave/Generated/UART/uart.c ****   }
1015:../Dave/Generated/UART/uart.c ****   /*Set the limit value*/
1016:../Dave/Generated/UART/uart.c ****   XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(handle->channel,
  53              	 .loc 1 1016 0
  54 0016 0068     	 ldr r0,[r0]
  55              	.LVL4:
  56 0018 FFF7FEFF 	 bl XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
  57              	.LVL5:
1017:../Dave/Generated/UART/uart.c ****         handle->config->rx_fifo_size, ret_limit_val);
1018:../Dave/Generated/UART/uart.c **** }
  58              	 .loc 1 1018 0
  59              	 
  60              	.LVL6:
  61 001c 10BD     	 pop {r4,pc}
  62              	 .cfi_endproc
  63              	.LFE185:
  65              	 .section .text.UART_GetAppVersion,"ax",%progbits
  66              	 .align 1
  67              	 .global UART_GetAppVersion
  68              	 .code 16
  69              	 .thumb_func
  71              	UART_GetAppVersion:
  72              	.LFB176:
 123:../Dave/Generated/UART/uart.c ****   DAVE_APP_VERSION_t version;
  73              	 .loc 1 123 0
  74              	 .cfi_startproc
  75              	.LVL7:
 131:../Dave/Generated/UART/uart.c **** 
  76              	 .loc 1 131 0
  77 0000 0148     	 ldr r0,.L6
 123:../Dave/Generated/UART/uart.c ****   DAVE_APP_VERSION_t version;
  78              	 .loc 1 123 0
  79 0002 82B0     	 sub sp,sp,#8
  80              	.LCFI1:
  81              	 .cfi_def_cfa_offset 8
 131:../Dave/Generated/UART/uart.c **** 
  82              	 .loc 1 131 0
  83 0004 02B0     	 add sp,sp,#8
  84              	 
  85 0006 7047     	 bx lr
  86              	.L7:
  87              	 .align 2
  88              	.L6:
  89 0008 04010C00 	 .word 786692
  90              	 .cfi_endproc
  91              	.LFE176:
  93              	 .section .text.UART_Init,"ax",%progbits
  94              	 .align 1
  95              	 .global UART_Init
  96              	 .code 16
  97              	 .thumb_func
  99              	UART_Init:
 100              	.LFB177:
 144:../Dave/Generated/UART/uart.c ****   UART_STATUS_t status = UART_STATUS_SUCCESS;
 101              	 .loc 1 144 0
 102              	 .cfi_startproc
 103              	.LVL8:
 104 0000 08B5     	 push {r3,lr}
 105              	.LCFI2:
 106              	 .cfi_def_cfa_offset 8
 107              	 .cfi_offset 3,-8
 108              	 .cfi_offset 14,-4
 151:../Dave/Generated/UART/uart.c **** 
 109              	 .loc 1 151 0
 110 0002 4368     	 ldr r3,[r0,#4]
 154:../Dave/Generated/UART/uart.c **** 
 111              	 .loc 1 154 0
 112              	 
 151:../Dave/Generated/UART/uart.c **** 
 113              	 .loc 1 151 0
 114 0004 5B68     	 ldr r3,[r3,#4]
 115 0006 9847     	 blx r3
 116              	.LVL9:
 154:../Dave/Generated/UART/uart.c **** 
 117              	 .loc 1 154 0
 118 0008 08BD     	 pop {r3,pc}
 119              	 .cfi_endproc
 120              	.LFE177:
 122              	 .section .text.UART_Transmit,"ax",%progbits
 123              	 .align 1
 124              	 .global UART_Transmit
 125              	 .code 16
 126              	 .thumb_func
 128              	UART_Transmit:
 129              	.LFB178:
 171:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_MODE_MISMATCH;
 130              	 .loc 1 171 0
 131              	 .cfi_startproc
 132              	.LVL10:
 133 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 134              	.LCFI3:
 135              	 .cfi_def_cfa_offset 24
 136              	 .cfi_offset 3,-24
 137              	 .cfi_offset 4,-20
 138              	 .cfi_offset 5,-16
 139              	 .cfi_offset 6,-12
 140              	 .cfi_offset 7,-8
 141              	 .cfi_offset 14,-4
 174:../Dave/Generated/UART/uart.c ****   {
 142              	 .loc 1 174 0
 143 0002 4468     	 ldr r4,[r0,#4]
 144 0004 A31D     	 add r3,r4,#6
 145 0006 DE7F     	 ldrb r6,[r3,#31]
 172:../Dave/Generated/UART/uart.c **** 
 146              	 .loc 1 172 0
 147 0008 0423     	 mov r3,#4
 174:../Dave/Generated/UART/uart.c ****   {
 148              	 .loc 1 174 0
 149 000a 022E     	 cmp r6,#2
 150 000c 35D1     	 bne .L10
 151              	.LVL11:
 152              	.LBB36:
 153              	.LBB37:
 723:../Dave/Generated/UART/uart.c ****   uint32_t loc_index;
 154              	 .loc 1 723 0
 155 000e 0323     	 mov r3,#3
 729:../Dave/Generated/UART/uart.c ****   {
 156              	 .loc 1 729 0
 157 0010 0029     	 cmp r1,#0
 158 0012 32D0     	 beq .L10
 159 0014 002A     	 cmp r2,#0
 160 0016 30D0     	 beq .L10
 161              	.LVL12:
 732:../Dave/Generated/UART/uart.c ****     {
 162              	 .loc 1 732 0
 163 0018 8568     	 ldr r5,[r0,#8]
 731:../Dave/Generated/UART/uart.c ****     if (handle->runtime->tx_busy == false)
 164              	 .loc 1 731 0
 165 001a 331C     	 mov r3,r6
 732:../Dave/Generated/UART/uart.c ****     {
 166              	 .loc 1 732 0
 167 001c 2F7E     	 ldrb r7,[r5,#24]
 168 001e 002F     	 cmp r7,#0
 169 0020 2BD1     	 bne .L10
 734:../Dave/Generated/UART/uart.c ****       if (handle->config->tx_fifo_size != XMC_USIC_CH_FIFO_DISABLED)
 170              	 .loc 1 734 0
 171 0022 013B     	 sub r3,r3,#1
 172 0024 2B76     	 strb r3,[r5,#24]
 735:../Dave/Generated/UART/uart.c ****       {
 173              	 .loc 1 735 0
 174 0026 0834     	 add r4,r4,#8
 175 0028 E37F     	 ldrb r3,[r4,#31]
 176 002a 002B     	 cmp r3,#0
 177 002c 04D0     	 beq .L12
 178              	.LVL13:
 179              	.LBB38:
 180              	.LBB39:
 181              	 .file 2 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2019-07-01
   4:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
   7:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  77:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  78:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  79:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  80:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  81:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  82:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  83:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  84:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  85:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  86:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  87:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  88:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  89:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-07-01:
  90:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Changed XMC_USIC_CH_SetBaudrateEx() input parameter types
  91:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  92:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  93:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
  94:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
  95:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
  96:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  97:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  98:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  99:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
 100:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 101:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 102:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 103:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 104:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 105:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 106:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 107:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 108:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 109:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 110:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 111:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 112:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 113:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 114:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 115:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 116:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 117:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 118:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 119:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 120:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 121:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 122:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 123:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 124:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 125:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 126:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 127:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 128:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 129:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 130:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 131:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 132:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 133:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 134:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 135:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 136:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 137:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 138:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 139:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 140:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 141:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 142:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 143:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 144:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 145:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 146:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 147:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 148:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 149:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 150:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 151:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 152:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 153:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 154:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 155:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 156:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 157:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 158:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 159:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 160:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 161:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 162:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 163:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 164:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 165:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 166:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 167:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 168:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 169:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 170:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 171:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 172:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 173:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 174:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 175:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 176:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 177:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 178:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 179:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 180:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 181:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 182:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 183:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 184:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 185:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 186:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 187:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 188:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 189:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 190:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 191:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 192:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 193:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 194:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 195:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 196:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 197:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 198:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 199:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 200:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 201:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 202:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 203:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 204:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 205:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 206:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 207:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 208:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 209:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 210:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 211:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 212:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 213:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 214:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 215:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 216:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 217:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 218:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 219:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 220:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 221:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 222:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 223:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 224:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 225:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 226:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 227:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 228:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 229:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 230:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 231:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 232:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 233:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 234:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 235:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 236:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 237:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 238:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 239:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 240:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 241:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 242:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 243:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 244:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 245:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 246:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 247:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 248:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 249:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 250:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 251:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 252:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 253:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 254:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 255:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 256:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 257:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 258:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 259:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 260:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 261:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 262:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 263:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 264:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 265:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 266:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 267:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 268:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 269:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 270:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 271:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 272:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 273:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 274:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 275:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 276:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 277:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 278:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 279:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 280:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 281:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 282:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 283:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 284:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 285:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 286:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 287:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 288:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 289:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 290:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 291:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 292:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 293:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 294:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 295:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 296:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 297:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 298:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 299:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 300:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 301:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 303:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 304:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 305:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 306:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 307:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 308:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 309:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 310:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 311:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 312:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 313:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 314:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 315:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 316:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 317:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 318:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 319:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 320:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 321:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 322:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 323:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 324:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 325:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 326:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 327:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 328:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 329:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 330:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 332:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 333:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 334:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 335:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 336:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 337:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 338:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 339:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 340:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 341:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 342:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 343:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 344:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 345:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 346:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 347:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 348:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 349:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 350:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 351:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 352:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 353:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 354:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 355:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 356:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 357:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 358:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 359:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 360:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 361:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 362:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 363:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 364:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 365:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 366:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 367:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 368:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 369:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 370:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 371:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 372:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 373:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 374:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 375:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 376:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 377:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 378:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 379:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 380:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 381:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 382:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 383:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 384:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 385:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 386:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 387:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 388:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 389:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 390:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 391:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 392:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 393:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 394:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 395:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 396:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 397:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 398:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 399:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 400:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 401:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 402:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 403:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 404:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 405:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 406:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 407:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 408:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 409:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 410:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 411:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 412:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 413:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 414:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 415:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 416:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 417:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 418:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 419:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 420:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 421:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 422:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 423:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 424:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 425:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 426:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 427:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 428:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 431:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 433:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 435:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 436:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 437:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 438:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 439:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 440:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 441:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 442:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 443:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 444:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 445:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 446:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 447:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 448:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 449:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 450:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 451:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 452:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 453:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 454:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 455:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 456:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 457:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 458:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 459:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 460:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 461:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
 462:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 463:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 464:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 465:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 466:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 467:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 468:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 469:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 470:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 471:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 472:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 473:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 474:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 475:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 476:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 477:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 478:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 479:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 480:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 481:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 482:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 483:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 484:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 485:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 486:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 487:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 488:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 489:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 490:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 491:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 492:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 493:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 494:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 495:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 496:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 497:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 498:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 499:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 500:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 501:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 502:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 503:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 504:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 505:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 506:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 507:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 508:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 509:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 510:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 511:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 512:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   };
 513:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 514:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 515:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 516:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 517:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 518:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 519:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 520:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 521:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 522:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   };
 523:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 524:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 525:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 526:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 527:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 528:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 529:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 530:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 531:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 532:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 533:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 534:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 535:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 536:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 537:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 538:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 539:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 540:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 541:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 542:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 543:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 544:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 545:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 546:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 547:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 548:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 549:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 550:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 551:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 552:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 553:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 554:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 555:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 556:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 557:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 558:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 559:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 560:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 561:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 562:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 563:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 564:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 565:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 566:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 567:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 568:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 569:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 570:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 571:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 572:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 573:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 574:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 575:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 576:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 577:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 578:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 579:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 580:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 581:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 582:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 583:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 584:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 585:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 586:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 587:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 588:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 589:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 590:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 591:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 592:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 593:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 594:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 595:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 596:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 597:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 598:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 599:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 600:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 601:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 602:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 603:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 604:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 605:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 606:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 607:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 608:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 609:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 610:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 611:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 612:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 613:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 614:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 615:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 616:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 617:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 618:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 619:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 620:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 621:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 622:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 623:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 624:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 625:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 626:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 627:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 628:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 629:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 630:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 631:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 632:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 633:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 634:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 635:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 636:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 637:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 638:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 639:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 640:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 641:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 642:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 643:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 644:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 645:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 646:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 647:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 648:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 649:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 650:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 651:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 652:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 653:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 654:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 655:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 656:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 657:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 658:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 659:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 660:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 661:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 662:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 663:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 664:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 665:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 666:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 667:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 668:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 669:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 670:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 671:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 672:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 673:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 674:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 675:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 676:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 677:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 678:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 679:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 680:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 681:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 682:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 683:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 684:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 685:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 686:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 687:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 688:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 689:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 690:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 691:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 692:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 693:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 694:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 695:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 696:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 697:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 698:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 699:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 700:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 701:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 702:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 703:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 704:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 705:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 706:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 707:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 708:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 709:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 710:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 711:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 712:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 713:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 714:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 715:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 716:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 717:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 718:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 719:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 720:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 721:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 722:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 723:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 724:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 725:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 726:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 727:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 728:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 729:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 730:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 731:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 732:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 733:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 734:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 735:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 736:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 737:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 738:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 739:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 740:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 741:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 742:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 743:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 744:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 745:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 746:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 747:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 748:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 749:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 750:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 751:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 752:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 753:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 754:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 755:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 756:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 757:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 758:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 759:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 760:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 761:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 762:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 763:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 764:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 765:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 766:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 767:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 768:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 769:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 770:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 771:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 772:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 773:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 774:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 775:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 776:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 777:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 778:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 779:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 780:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 781:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 782:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 783:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 784:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 785:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 786:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 787:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 788:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 789:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 790:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 791:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 792:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 793:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 794:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 795:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 796:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 797:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 798:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 799:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 800:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 801:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 802:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 803:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 804:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 805:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 806:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 807:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 808:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 809:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 810:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 811:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 812:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 813:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 814:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 815:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 816:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 817:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 818:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 819:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 820:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 821:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 822:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 823:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 824:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 825:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 826:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 827:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 828:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 829:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 830:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 831:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 832:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 833:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 834:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 835:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 836:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 837:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 838:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 839:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 840:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 841:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 842:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 843:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 844:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 845:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 846:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 847:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 848:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 849:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 850:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 851:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 852:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 853:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 854:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 855:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 856:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 857:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 858:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 859:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 860:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 861:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 862:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 863:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 864:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 865:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 866:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 867:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 868:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 869:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 870:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 871:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 872:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 873:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 875:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 876:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 877:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 878:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 879:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 880:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 881:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 882:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 883:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 884:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 885:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 886:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 887:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 888:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 889:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 890:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 891:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 892:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 893:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 894:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 895:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 896:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 897:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 898:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 899:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 900:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 901:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 902:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 903:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 904:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 905:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 906:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 907:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 908:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 909:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 910:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 911:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 912:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 913:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 914:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 915:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 916:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 917:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 918:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 919:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 920:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 921:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 922:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 923:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 924:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 925:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 926:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 927:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 928:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 929:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 930:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 931:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 932:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 933:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 934:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 935:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 936:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 937:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 938:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 939:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 940:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 941:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 942:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 943:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 944:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 945:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 946:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 947:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 948:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 949:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 950:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 951:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 952:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 953:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 954:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 955:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 956:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 957:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 958:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 959:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 960:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 961:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 962:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 963:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 964:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 965:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 966:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 967:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 968:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 969:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 970:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 971:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 972:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 973:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 974:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 975:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 976:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 977:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 978:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 979:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 980:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 981:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 982:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 983:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 984:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 985:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
 986:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 987:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 988:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
 989:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 990:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 991:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 992:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
 993:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 994:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 995:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 996:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
 997:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
 998:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 999:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1000:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1001:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1002:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1003:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1004:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1005:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1006:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1007:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1008:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1010:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1011:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1012:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
1013:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
1014:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1015:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
1016:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
1017:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1018:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1019:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1020:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1021:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1022:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1023:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1024:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1025:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1026:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1027:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1028:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1029:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1030:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1031:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1032:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1033:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
1034:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1035:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1036:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1037:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1038:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1039:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1040:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1041:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1042:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1043:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1044:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
1045:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
1046:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1047:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1048:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1049:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
1050:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1051:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
1052:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1053:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
1054:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1055:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1056:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1057:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1058:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1059:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1060:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
1061:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
1062:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1063:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1064:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1065:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
1066:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
1067:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1068:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1069:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1070:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
1071:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1072:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
1073:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint16_t data,
1074:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint32_t transmit_control_information)
1075:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1076:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
1077:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1078:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1079:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1080:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1081:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1082:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1083:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
1084:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
1085:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1086:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1087:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1088:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1089:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1090:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1091:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1092:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1093:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1094:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1095:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1096:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1097:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1098:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1099:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1100:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1101:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1102:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1103:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
1104:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b Range: minimum= 1, maximum= 16. \n
1105:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *             e.g: For word length of 8, \a word_length should be provided as 8.
1106:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1107:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1108:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1109:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
1110:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
1111:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1112:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1113:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
1114:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1115:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetShiftDirection(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_
1116:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1117:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_SDIR_Msk)) | (uint32_t)shift_direction;
1118:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1119:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1120:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1121:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1122:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1123:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1124:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Captured counter value 
1125:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1126:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1127:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1128:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The value of the counter is captured if one of the trigger signals DX0T or DX1T are activated by
1129:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1130:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetCaptureTimerValue(const XMC_USIC_CH_t *const channel)
1131:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1132:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return channel->CMTR;
1133:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1134:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1135:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1136:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1137:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1138:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  mode divider mode ::XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t \n
1139:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  step divider \n
1140:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL resulting divider = 1023 - step \n
1141:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *             \b XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL resulting divider = 1023 / step \n
1142:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1143:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1144:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1145:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1146:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The fractional divider generates its output frequency fFD by either dividing the input frequency
1147:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1148:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1149:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFractionalDivider(XMC_USIC_CH_t *const channel, const XMC_USIC_
1150:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1151:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FDR = mode | step;
1152:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1153:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1154:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1155:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1156:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1157:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1158:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1159:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1160:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1161:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1162:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1163:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1164:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1165:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1166:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly. 
1167:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1168:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1169:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1170:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1171:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1172:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1173:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1174:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1175:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1176:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1177:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1178:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1179:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1180:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1181:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1182:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1183:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1184:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1185:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1186:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1187:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1188:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1189:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1190:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1191:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1192:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1193:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1194:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1195:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1196:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
1197:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1198:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1199:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1200:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1201:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1202:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1203:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1204:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1205:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1206:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1207:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1208:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1209:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1210:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1211:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1212:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1213:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1214:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
1215:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1216:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1217:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
1218:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1219:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1220:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1221:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1222:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1223:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1224:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1225:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1226:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1227:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1228:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1229:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1230:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1231:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1232:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1233:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1234:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1235:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1236:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1237:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1238:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1239:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1240:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1241:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                          const uint32_t service_request);
1242:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1243:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1244:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1245:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1246:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1247:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1248:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1249:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1250:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1251:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1252:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1253:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1254:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1255:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1256:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1257:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1258:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1259:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1260:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1261:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
1262:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1263:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1264:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1265:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1266:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1267:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1268:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1269:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1270:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1271:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1272:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1273:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1274:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1275:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1276:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte. 
1277:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1278:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1279:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1280:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1281:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1282:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1283:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1284:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1285:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
1286:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1287:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1288:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1289:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1290:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1291:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1292:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1293:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1294:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1295:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1296:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *                              
1297:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1298:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1299:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1300:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1301:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1302:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1303:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1304:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1305:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1306:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1307:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                          const XMC_USIC_CH_START_TRANSMISION_MODE_t
1308:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1309:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1310:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1311:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1312:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1313:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1314:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1315:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1316:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1317:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1318:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1319:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1320:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1321:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1322:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1323:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1324:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1325:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1326:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1327:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1328:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output
1329:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1330:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1331:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1332:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1333:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1334:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1335:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1336:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1337:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1338:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1339:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1340:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the 
1341:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1342:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1343:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1344:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1345:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1346:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1347:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1348:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1349:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1350:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1351:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_SELMD_Msk |
1352:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_WAMD_Msk |
1353:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_HPCMD_Msk))) |
1354:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                          (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1355:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1356:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1357:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1358:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1359:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1360:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1361:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1362:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1363:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1364:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1365:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1366:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1367:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1368:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1369:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1370:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1371:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1372:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1373:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1374:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1375:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1376:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1377:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1378:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1379:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1380:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1381:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1382:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1383:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1384:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1385:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1386:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1387:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1388:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1389:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1390:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1391:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1392:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1393:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1394:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1395:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1396:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1397:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1398:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1399:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1400:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1401:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1402:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1403:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1404:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1405:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1406:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1407:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1408:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1409:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1410:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1411:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1412:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1413:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1414:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1415:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1416:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1417:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1418:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1419:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be 
1420:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled. 
1421:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1422:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1423:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1424:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1425:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1426:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1427:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
1428:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1429:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1430:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1431:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1432:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1433:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1434:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1435:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1436:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1437:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1438:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1439:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1440:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1441:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1442:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1443:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1444:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                 const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buf
1445:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1446:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
1447:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1448:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1449:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1450:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1451:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1452:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1453:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1454:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1455:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1456:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1457:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1458:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the 
1459:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1460:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1461:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1462:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1463:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1464:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1465:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                      const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive
1466:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1467:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1468:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1469:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1470:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1471:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1472:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1473:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1474:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1475:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1476:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1477:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1478:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1479:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1480:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1481:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1482:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1483:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1484:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1485:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1486:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1487:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1488:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1489:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1490:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1491:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1492:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1493:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1494:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1495:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1496:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1497:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1498:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1499:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1500:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1501:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1502:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1503:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1504:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1505:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1506:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1507:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1508:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1509:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1510:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the 
1511:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1512:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1513:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1514:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1515:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1516:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1517:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1518:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1519:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1520:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1521:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1522:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1523:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1524:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1525:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1526:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1527:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1528:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1529:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1530:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1531:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1532:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1533:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1534:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1535:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1536:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1537:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1538:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1539:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1540:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1541:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
1542:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1543:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1544:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1545:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1546:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1547:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1548:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1549:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1550:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1551:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1552:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1553:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1554:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent(). 
1555:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1556:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1557:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1558:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1559:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1560:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1561:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1562:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1563:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
1564:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1565:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1566:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1567:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1568:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1569:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1570:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1571:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1572:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1573:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1574:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1575:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1576:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1577:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1578:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1579:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1580:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1581:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1582:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1583:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1584:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1585:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1586:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1587:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1588:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1589:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1590:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1591:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
1592:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1593:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1594:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1595:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1596:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1597:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1598:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1599:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1600:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1601:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1602:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1603:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1604:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1605:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1606:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1607:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1608:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1609:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1610:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1611:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1612:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1613:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1614:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1615:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1616:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1617:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1618:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1619:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1620:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1621:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1622:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1623:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1624:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1625:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1626:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1627:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1628:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1629:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1630:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1631:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1632:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1633:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1634:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1635:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1636:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1637:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1638:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1639:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1640:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1641:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1642:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1643:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1644:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1645:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1646:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1647:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1648:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1649:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1650:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1651:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1652:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1653:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1654:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1655:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1656:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1657:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1658:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1659:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1660:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1661:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1662:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1663:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1664:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1665:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1666:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1667:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1668:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1669:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1670:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1671:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1672:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1673:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1674:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1675:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1676:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
 182              	 .loc 2 1676 0
 183 002e 8024     	 mov r4,#128
 184 0030 0368     	 ldr r3,[r0]
 185 0032 2402     	 lsl r4,r4,#8
 186 0034 FC33     	 add r3,r3,#252
 187 0036 DC61     	 str r4,[r3,#28]
 188              	.LVL14:
 189              	.L12:
 190 0038 041C     	 mov r4,r0
 191 003a 0D1C     	 mov r5,r1
 192 003c 8E18     	 add r6,r1,r2
 193              	.LVL15:
 194              	.L13:
 195 003e 6368     	 ldr r3,[r4,#4]
 196              	.LBE39:
 197              	.LBE38:
 745:../Dave/Generated/UART/uart.c ****         {
 198              	 .loc 1 745 0
 199 0040 0833     	 add r3,r3,#8
 200 0042 DB7F     	 ldrb r3,[r3,#31]
 741:../Dave/Generated/UART/uart.c ****       {
 201              	 .loc 1 741 0
 202 0044 B542     	 cmp r5,r6
 203 0046 0DD0     	 beq .L35
 745:../Dave/Generated/UART/uart.c ****         {
 204              	 .loc 1 745 0
 205 0048 002B     	 cmp r3,#0
 206 004a 05D0     	 beq .L14
 748:../Dave/Generated/UART/uart.c ****           {
 207              	 .loc 1 748 0
 208 004c 2268     	 ldr r2,[r4]
 209              	.L15:
 210              	.LVL16:
 211              	.LBB40:
 212              	.LBB41:
1677:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1678:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1679:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1680:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1681:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1682:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1683:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1684:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1685:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1686:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1687:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1688:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1689:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1690:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1691:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1692:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1693:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1694:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1695:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
 213              	 .loc 2 1695 0
 214 004e 131C     	 mov r3,r2
 215 0050 FC33     	 add r3,r3,#252
 216 0052 9B69     	 ldr r3,[r3,#24]
 217              	.LBE41:
 218              	.LBE40:
 748:../Dave/Generated/UART/uart.c ****           {
 219              	 .loc 1 748 0
 220 0054 DB04     	 lsl r3,r3,#19
 221 0056 FAD4     	 bmi .L15
 222              	.LVL17:
 223              	.L14:
 752:../Dave/Generated/UART/uart.c ****       }
 224              	 .loc 1 752 0
 225 0058 2978     	 ldrb r1,[r5]
 226 005a 2068     	 ldr r0,[r4]
 227 005c FFF7FEFF 	 bl XMC_UART_CH_Transmit
 228              	.LVL18:
 229 0060 0135     	 add r5,r5,#1
 230              	.LVL19:
 231 0062 ECE7     	 b .L13
 232              	.L35:
 755:../Dave/Generated/UART/uart.c ****       {
 233              	 .loc 1 755 0
 234 0064 002B     	 cmp r3,#0
 235 0066 05D0     	 beq .L17
 758:../Dave/Generated/UART/uart.c ****         {
 236              	 .loc 1 758 0
 237 0068 2268     	 ldr r2,[r4]
 238              	.L18:
 239              	.LVL20:
 240              	.LBB42:
 241              	.LBB43:
1696:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1697:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1698:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1699:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1700:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1701:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1702:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1703:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1704:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1705:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1706:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1707:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO, 
1708:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1709:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1710:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1711:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1712:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1713:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1714:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1715:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
 242              	 .loc 2 1715 0
 243 006a 131C     	 mov r3,r2
 244 006c FC33     	 add r3,r3,#252
 245 006e 9B69     	 ldr r3,[r3,#24]
 246              	.LBE43:
 247              	.LBE42:
 758:../Dave/Generated/UART/uart.c ****         {
 248              	 .loc 1 758 0
 249 0070 1B05     	 lsl r3,r3,#20
 250 0072 FAD5     	 bpl .L18
 251              	.LVL21:
 252              	.L17:
 763:../Dave/Generated/UART/uart.c ****     }
 253              	 .loc 1 763 0
 254 0074 0023     	 mov r3,#0
 255 0076 A268     	 ldr r2,[r4,#8]
 256 0078 1376     	 strb r3,[r2,#24]
 257              	.LVL22:
 258              	.L10:
 259              	.LBE37:
 260              	.LBE36:
 195:../Dave/Generated/UART/uart.c **** 
 261              	 .loc 1 195 0
 262 007a 181C     	 mov r0,r3
 263              	 
 264 007c F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 265              	 .cfi_endproc
 266              	.LFE178:
 268              	 .section .text.UART_AbortReceive,"ax",%progbits
 269              	 .align 1
 270              	 .global UART_AbortReceive
 271              	 .code 16
 272              	 .thumb_func
 274              	UART_AbortReceive:
 275              	.LFB180:
 319:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_SUCCESS;
 276              	 .loc 1 319 0
 277              	 .cfi_startproc
 278              	.LVL23:
 329:../Dave/Generated/UART/uart.c ****   handle->runtime->rx_data = NULL;
 279              	 .loc 1 329 0
 280 0000 0022     	 mov r2,#0
 319:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_SUCCESS;
 281              	 .loc 1 319 0
 282 0002 10B5     	 push {r4,lr}
 283              	.LCFI4:
 284              	 .cfi_def_cfa_offset 8
 285              	 .cfi_offset 4,-8
 286              	 .cfi_offset 14,-4
 329:../Dave/Generated/UART/uart.c ****   handle->runtime->rx_data = NULL;
 287              	 .loc 1 329 0
 288 0004 8368     	 ldr r3,[r0,#8]
 289 0006 5A76     	 strb r2,[r3,#25]
 330:../Dave/Generated/UART/uart.c ****   switch(handle->config->receive_mode)
 290              	 .loc 1 330 0
 291 0008 5A60     	 str r2,[r3,#4]
 331:../Dave/Generated/UART/uart.c ****   {
 292              	 .loc 1 331 0
 293 000a 4368     	 ldr r3,[r0,#4]
 294 000c DA1D     	 add r2,r3,#7
 295 000e D17F     	 ldrb r1,[r2,#31]
 296 0010 0029     	 cmp r1,#0
 297 0012 12D1     	 bne .L41
 336:../Dave/Generated/UART/uart.c ****     {
 298              	 .loc 1 336 0
 299 0014 2833     	 add r3,r3,#40
 300 0016 1C78     	 ldrb r4,[r3]
 301 0018 002C     	 cmp r4,#0
 302 001a 07D0     	 beq .L39
 338:../Dave/Generated/UART/uart.c ****             ((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD |
 303              	 .loc 1 338 0
 304 001c 0368     	 ldr r3,[r0]
 305              	.LVL24:
 306              	.LBB44:
 307              	.LBB45:
1716:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1717:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1718:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1719:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1720:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1721:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Transmit FIFO filling level. \n 
1722:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= transmit FIFO size.
1723:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1724:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1725:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO filling level. \n\n
1726:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word written to the FIFO, filling level is updated. The API gives the value
1727:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level.
1728:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1729:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1730:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1731:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1732:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1733:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1734:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_TBFLVL_Msk) >> USIC_CH_TRBSR_TBFLVL_Pos);
1735:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1736:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1737:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1738:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1739:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1740:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard transmit and transmit buffer error events. @ref XMC_USIC_CH_TXFIFO_EV
1741:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1742:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1743:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO event status. \n\n
1744:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event
1745:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bit positions in the TRBSR register in the returned value.
1746:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the @ref XMC_USIC_CH_TXFIFO_EVENT_t enumeration for checking the status of 
1747:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1748:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1749:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1750:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1751:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1752:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_ClearEvent() \n\n\n
1753:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1754:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1755:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1756:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_STBI_Msk |
1757:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_TBERI_Msk));
1758:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1759:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1760:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1761:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1762:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1763:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Transmit FIFO events to be cleared. \n
1764:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			     \b Range: @ref XMC_USIC_CH_TXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_TXFIFO_EVENT_ERROR.
1765:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1766:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1767:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1768:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the transmit FIFO event flags in the status register. \n\n
1769:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1770:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value. 
1771:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events
1772:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of 
1773:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1774:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1775:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1776:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent() \n\n\n
1777:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1778:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1779:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const uint32_t event)
1780:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1781:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1782:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1783:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1784:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1785:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1786:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1787:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1788:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1789:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1790:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1791:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of receive FIFO filling level to be considered for generating events. \n
1792:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1793:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1794:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1795:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1796:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the receive FIFO. \n\n
1797:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channe
1798:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1799:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * from where received data can be put. \a size represents the size of receive FIFO as a multiple o
1800:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO
1801:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * event or alternative receive buffer event is generated when the FIFO filling level exceeds the \
1802:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1803:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1804:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent(), XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1805:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** */
1806:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
1807:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1808:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1809:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1810:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1811:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1812:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1813:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1814:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1815:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1816:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for receive FIFO filling level to be considered for generating events. \n
1817:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1818:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1819:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1820:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1821:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the receive FIFO. \n\n
1822:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the receive FIFO. The API shall be used for the 
1823:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execut
1824:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1825:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1826:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()\ n\n\n
1827:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1828:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1829:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1830:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1831:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1832:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1833:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1834:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1835:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1836:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1837:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1838:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1839:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1840:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_t.
1841:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1842:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.<br>
1843:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1844:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1845:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1846:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1847:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1848:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1849:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1850:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1851:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1852:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR |= event;
1853:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1854:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1855:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1856:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1857:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1858:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1859:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. \n
1860:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ERR
1861:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			@ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE.
1862:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1863:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1864:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1865:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the selected interrupt events related to receive FIFO. \n\n
1866:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1867:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_RXFIFO_GetEvent(). 
1868:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration \a XMC_USIC_CH_RXFIFO_EVENT_CONF. For pr
1869:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1870:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1871:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1872:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent(), XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1873:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1874:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1875:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1876:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR &= (uint32_t)~event;
 308              	 .loc 2 1876 0
 309 001e 084A     	 ldr r2,.L42
 310 0020 FC33     	 add r3,r3,#252
 311              	.LVL25:
 312 0022 1869     	 ldr r0,[r3,#16]
 313              	.LVL26:
 314 0024 0240     	 and r2,r0
 315 0026 1A61     	 str r2,[r3,#16]
 316              	.LBE45:
 317              	.LBE44:
 320:../Dave/Generated/UART/uart.c **** #ifdef UART_RX_DMA_USED
 318              	 .loc 1 320 0
 319 0028 081C     	 mov r0,r1
 320 002a 07E0     	 b .L37
 321              	.LVL27:
 322              	.L39:
 344:../Dave/Generated/UART/uart.c ****             ((uint32_t)XMC_USIC_CH_EVENT_STANDARD_RECEIVE |
 323              	 .loc 1 344 0
 324 002c C021     	 mov r1,#192
 325 002e 0068     	 ldr r0,[r0]
 326              	.LVL28:
 327 0030 0902     	 lsl r1,r1,#8
 328 0032 FFF7FEFF 	 bl XMC_UART_CH_DisableEvent
 329              	.LVL29:
 320:../Dave/Generated/UART/uart.c **** #ifdef UART_RX_DMA_USED
 330              	 .loc 1 320 0
 331 0036 201C     	 mov r0,r4
 332 0038 00E0     	 b .L37
 333              	.LVL30:
 334              	.L41:
 366:../Dave/Generated/UART/uart.c ****     break;
 335              	 .loc 1 366 0
 336 003a 0420     	 mov r0,#4
 337              	.LVL31:
 338              	.L37:
 370:../Dave/Generated/UART/uart.c **** #endif
 339              	 .loc 1 370 0
 340              	 
 341 003c 10BD     	 pop {r4,pc}
 342              	.L43:
 343 003e C046     	 .align 2
 344              	.L42:
 345 0040 FFFFFF9F 	 .word -1610612737
 346              	 .cfi_endproc
 347              	.LFE180:
 349              	 .section .text.UART_SetBaudrate,"ax",%progbits
 350              	 .align 1
 351              	 .global UART_SetBaudrate
 352              	 .code 16
 353              	 .thumb_func
 355              	UART_SetBaudrate:
 356              	.LFB181:
 389:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_BUSY;
 357              	 .loc 1 389 0
 358              	 .cfi_startproc
 359              	.LVL32:
 360 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 361              	.LCFI5:
 362              	 .cfi_def_cfa_offset 24
 363              	 .cfi_offset 3,-24
 364              	 .cfi_offset 4,-20
 365              	 .cfi_offset 5,-16
 366              	 .cfi_offset 6,-12
 367              	 .cfi_offset 7,-8
 368              	 .cfi_offset 14,-4
 396:../Dave/Generated/UART/uart.c ****   {
 369              	 .loc 1 396 0
 370 0002 8368     	 ldr r3,[r0,#8]
 389:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_BUSY;
 371              	 .loc 1 389 0
 372 0004 0F1C     	 mov r7,r1
 396:../Dave/Generated/UART/uart.c ****   {
 373              	 .loc 1 396 0
 374 0006 1C7E     	 ldrb r4,[r3,#24]
 391:../Dave/Generated/UART/uart.c **** 
 375              	 .loc 1 391 0
 376 0008 4168     	 ldr r1,[r0,#4]
 377              	.LVL33:
 378 000a 0E6A     	 ldr r6,[r1,#32]
 379              	.LVL34:
 396:../Dave/Generated/UART/uart.c ****   {
 380              	 .loc 1 396 0
 381 000c 002C     	 cmp r4,#0
 382 000e 01D0     	 beq .L45
 383              	.LVL35:
 384              	.L47:
 390:../Dave/Generated/UART/uart.c ****   const UART_TX_CONFIG_t * ptr_tx_conf = handle->config->tx_pin_config;
 385              	 .loc 1 390 0
 386 0010 0227     	 mov r7,#2
 387              	.LVL36:
 388 0012 34E0     	 b .L46
 389              	.LVL37:
 390              	.L45:
 396:../Dave/Generated/UART/uart.c ****   {
 391              	 .loc 1 396 0 discriminator 1
 392 0014 5B7E     	 ldrb r3,[r3,#25]
 393 0016 DBB2     	 uxtb r3,r3
 394 0018 002B     	 cmp r3,#0
 395 001a F9D1     	 bne .L47
 399:../Dave/Generated/UART/uart.c ****     {
 396              	 .loc 1 399 0
 397 001c 0531     	 add r1,r1,#5
 398 001e 141C     	 mov r4,r2
 399 0020 CA7F     	 ldrb r2,[r1,#31]
 400              	.LVL38:
 401 0022 051C     	 mov r5,r0
 402 0024 022A     	 cmp r2,#2
 403 0026 04D0     	 beq .L48
 401:../Dave/Generated/UART/uart.c ****     }
 404              	 .loc 1 401 0
 405 0028 3179     	 ldrb r1,[r6,#4]
 406 002a 3068     	 ldr r0,[r6]
 407              	.LVL39:
 408 002c 1A1C     	 mov r2,r3
 409 002e FFF7FEFF 	 bl XMC_GPIO_SetMode
 410              	.LVL40:
 411              	.L48:
 404:../Dave/Generated/UART/uart.c ****     {
 412              	 .loc 1 404 0
 413 0032 2868     	 ldr r0,[r5]
 414 0034 FFF7FEFF 	 bl XMC_UART_CH_Stop
 415              	.LVL41:
 416 0038 0028     	 cmp r0,#0
 417 003a E9D1     	 bne .L47
 407:../Dave/Generated/UART/uart.c ****       /*Set the sample point if the baudrate is modified*/
 418              	 .loc 1 407 0
 419 003c 391C     	 mov r1,r7
 420 003e 2868     	 ldr r0,[r5]
 421 0040 221C     	 mov r2,r4
 422 0042 FFF7FEFF 	 bl XMC_UART_CH_SetBaudrate
 423              	.LVL42:
 424 0046 071E     	 sub r7,r0,#0
 425              	.LVL43:
 409:../Dave/Generated/UART/uart.c ****       {
 426              	 .loc 1 409 0
 427 0048 08D1     	 bne .L49
 411:../Dave/Generated/UART/uart.c ****       }
 428              	 .loc 1 411 0
 429 004a 2B68     	 ldr r3,[r5]
 430              	.LVL44:
 431 004c 6408     	 lsr r4,r4,#1
 432              	.LVL45:
 433              	.LBB50:
 434              	.LBB51:
 435              	 .file 3 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc/xmc_uart.h"
   1:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  /**
   2:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @file xmc_uart.h
   3:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @date 2019-05-07
   4:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
   5:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @cond
   6:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
   7:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
   9:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * All rights reserved.                        
  11:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *                                             
  12:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * following conditions are met:   
  14:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *                                                                              
  15:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * disclaimer.                        
  17:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  18:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  21:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *                                                                              
  24:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *                                                                              
  32:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
  35:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
  36:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Change History
  37:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * --------------
  38:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
  39:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-02-20:
  40:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Initial
  41:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *      
  42:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-05-20:
  43:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Description updated <br>
  44:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Added XMC_UART_CH_TriggerServiceRequest() and XMC_UART_CH_SelectInterruptNodePointer <br>
  45:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
  46:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-06-20:
  47:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
  49:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-09-01:
  50:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Modified XMC_UART_CH_SetInputSource() for avoiding complete DXCR register overwriting. <br
  51:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Modified XMC_UART_CH_EVENT_t enum for supporting XMC_UART_CH_EnableEvent() and XMC_UART_CH
  52:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *       for supporting multiple events configuration <br>
  53:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  54:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 2016-05-20:
  55:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Added XMC_UART_CH_EnableDataTransmission() and XMC_UART_CH_DisableDataTransmission()
  56:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
  57:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 2017-10-25:
  58:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Added XMC_UART_CH_EnableMasterClock() and XMC_UART_CH_DisableMasterClock()
  59:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
  60:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 2019-05-07:
  61:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Added normal_divider_mode to XMC_UART_CH_CONFIG_t configuration structure.
  62:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *       It selects normal divider mode for baudrate generator instead of default fractional divide
  63:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Added XMC_UART_CH_SetBaudrateEx()
  64:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
  65:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @endcond 
  66:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
  67:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
  68:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
  69:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #ifndef XMC_UART_H
  70:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART_H
  71:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
  72:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
  73:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * HEADER FILES
  74:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
  75:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
  76:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #include "xmc_usic.h"
  77:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
  78:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
  79:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @addtogroup XMClib XMC Peripheral Library
  80:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @{
  81:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
  82:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
  83:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
  84:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @addtogroup UART
  85:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @brief Universal Asynchronous Receiver/Transmitter (UART) driver for XMC microcontroller family.
  86:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
  87:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * The UART driver uses Universal Serial Interface Channel(USIC) module to implement UART protocol.
  88:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * It provides APIs to configure USIC channel for UART communication. The driver enables the user
  89:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * in getting the status of UART protocol events, configuring interrupt service requests, protocol
  90:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * related parameter configuration etc.
  91:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  92:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * UART driver features:
  93:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Configuration structure XMC_UART_CH_CONFIG_t and initialization function XMC_UART_CH_Init()
  94:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Enumeration of events with their bit masks @ref XMC_UART_CH_EVENT_t, @ref XMC_UART_CH_STATUS_
  95:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Allows the selection of input source for the DX0 input stage using the API XMC_UART_CH_SetInp
  96:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Allows configuration of baudrate using XMC_UART_CH_SetBaudrate() and configuration of data le
  97:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  XMC_UART_CH_SetWordLength() and XMC_UART_CH_SetFrameLength()
  98:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Provides the status of UART protocol events, XMC_UART_CH_GetStatusFlag()
  99:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Allows transmission of data using XMC_UART_CH_Transmit() and gets received data using XMC_UAR
 100:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 
 101:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @{
 102:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 103:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 104:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 105:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * MACROS
 106:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 107:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 108:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #if defined(USIC0)
 109:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART0_CH0 XMC_USIC0_CH0 /**< USIC0 channel 0 base address */
 110:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART0_CH1 XMC_USIC0_CH1 /**< USIC0 channel 1 base address */
 111:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 112:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 113:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #if defined(USIC1)
 114:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART1_CH0 XMC_USIC1_CH0 /**< USIC1 channel 0 base address */
 115:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART1_CH1 XMC_USIC1_CH1 /**< USIC1 channel 1 base address */
 116:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 117:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 118:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #if defined(USIC2)
 119:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART2_CH0 XMC_USIC2_CH0 /**< USIC2 channel 0 base address */
 120:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART2_CH1 XMC_USIC2_CH1 /**< USIC2 channel 1 base address */
 121:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 122:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 123:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 124:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * ENUMS
 125:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 126:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 127:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 128:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * UART driver status
 129:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 130:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_STATUS
 131:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 132:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_OK,     /**< UART driver status : OK*/
 133:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_ERROR,  /**< UART driver status : ERROR */
 134:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_BUSY    /**< UART driver status : BUSY */
 135:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_STATUS_t;
 136:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 137:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 138:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** * UART portocol status. The enum values can be used for getting the status of UART channel.
 139:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** *
 140:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** */
 141:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_STATUS_FLAG
 142:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 143:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMISSION_IDLE = USIC_CH_PSR_ASCMode_TXIDLE_Msk,                 /**< 
 144:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEPTION_IDLE = USIC_CH_PSR_ASCMode_RXIDLE_Msk,                    /**< 
 145:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_SYNCHRONIZATION_BREAK_DETECTED = USIC_CH_PSR_ASCMode_SBD_Msk,       /**< 
 146:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_COLLISION_DETECTED = USIC_CH_PSR_ASCMode_COL_Msk,                   /**< 
 147:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVER_NOISE_DETECTED = USIC_CH_PSR_ASCMode_RNS_Msk,              /**< 
 148:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_FORMAT_ERROR_IN_STOP_BIT_0 = USIC_CH_PSR_ASCMode_FER0_Msk,          /**< 
 149:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_FORMAT_ERROR_IN_STOP_BIT_1 = USIC_CH_PSR_ASCMode_FER1_Msk,          /**< 
 150:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVE_FRAME_FINISHED = USIC_CH_PSR_ASCMode_RFF_Msk,               /**< 
 151:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMITTER_FRAME_FINISHED = USIC_CH_PSR_ASCMode_TFF_Msk,           /**< 
 152:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSFER_STATUS_BUSY = USIC_CH_PSR_ASCMode_BUSY_Msk,                /**< 
 153:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_ASCMode_RSIF_Msk,           /**< 
 154:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_ASCMode_DLIF_Msk,                /**< 
 155:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_ASCMode_TSIF_Msk,           /**< 
 156:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_ASCMode_TBIF_Msk,          /**< 
 157:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_ASCMode_RIF_Msk,                   /**< 
 158:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_ASCMode_AIF_Msk,       /**< 
 159:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_ASCMode_BRGIF_Msk      /**< 
 160:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_STATUS_FLAG_t;
 161:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 162:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 163:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** * UART configuration events. The enums can be used for configuring events using the CCR register.
 164:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** */
 165:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_CH_UART_EVENT
 166:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 167:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk,  /**< Receive start event */
 168:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk,  /**< Data lost event */
 169:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk,  /**< Transmit shift event */
 170:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk,  /**< Transmit buffer event */
 171:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,   /**< Receive event */
 172:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,   /**< Alternate receive event */
 173:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 174:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   
 175:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_SYNCHRONIZATION_BREAK = USIC_CH_PCR_ASCMode_SBIEN_Msk, /**< Event synchronizati
 176:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_COLLISION = USIC_CH_PCR_ASCMode_CDEN_Msk,              /**< Event collision */
 177:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_RECEIVER_NOISE = USIC_CH_PCR_ASCMode_RNIEN_Msk,        /**< Event receiver nois
 178:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_FORMAT_ERROR = USIC_CH_PCR_ASCMode_FEIEN_Msk,          /**< Event format error 
 179:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_FRAME_FINISHED = USIC_CH_PCR_ASCMode_FFIEN_Msk         /**< Event frame finishe
 180:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_EVENT_t;
 181:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 182:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 183:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * UART Input sampling frequency options
 184:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 185:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_INPUT_SAMPLING_FREQ
 186:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 187:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_SAMPLING_FREQ_FPERIPH            = XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH,    
 188:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_D
 189:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_INPUT_SAMPLING_FREQ_t;
 190:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 191:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 192:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * UART input stages
 193:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 194:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_INPUT
 195:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 196:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_RXD = 0UL   /**< UART input stage DX0*/
 197:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #if UC_FAMILY == XMC1
 198:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   ,
 199:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_RXD1 = 3UL, /**< UART input stage DX3*/
 200:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_RXD2 = 5UL  /**< UART input stage DX5*/
 201:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 202:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_INPUT_t;
 203:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 204:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 205:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 206:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * UART channel interrupt node pointers
 207:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 208:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_INTERRUPT_NODE_POINTER
 209:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 210:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANS
 211:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANS
 212:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEI
 213:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTER
 214:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTO
 215:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_INTERRUPT_NODE_POINTER_t;
 216:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 217:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 218:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * DATA STRUCTURES
 219:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 220:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 221:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 222:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * UART initialization structure
 223:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** */
 224:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** typedef struct XMC_UART_CH_CONFIG
 225:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 226:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   uint32_t baudrate;                         /**< Desired baudrate. \b Range: minimum= 100, maximum
 227:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   bool normal_divider_mode;                  /**< Selects normal divider mode for baudrate generato
 228:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t data_bits;                         /**< Number of bits for the data field. Value configur
 229:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****                                                   \b Range: minimum= 1, maximum= 16*/
 230:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t frame_length;                      /**< Indicates nmber of bits in a frame. Configured as
 231:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****                                                   \b Range: minimum= 1, maximum= 63*/
 232:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t stop_bits;                         /**< Number of stop bits. \b Range: minimum= 1, maximu
 233:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t oversampling;						           /**< Number of samples for a symbol(DCTQ).\b Range: minimum
 234:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_PARITY_MODE_t parity_mode;     /**< Parity mode. \b Range: @ref XMC_USIC_CH_PARITY_MO
 235:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****                                                   @ref XMC_USIC_CH_PARITY_MODE_ODD*/
 236:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_CONFIG_t;
 237:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 238:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 239:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * API PROTOTYPES
 240:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 241:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 242:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #ifdef __cplusplus
 243:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** extern "C" {
 244:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 245:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 246:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 247:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 248:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, XMC_UART0_CH1,XMC_UART1_CH0, XMC_UART1_CH1,XMC_UART2_CH0, XM
 249:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param config Constant pointer to UART configuration structure of type @ref XMC_UART_CH_CONFIG_t
 250:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return XMC_UART_CH_STATUS_t Status of initializing the USIC channel for UART protocol.\n
 251:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: @ref XMC_UART_CH_STATUS_OK if initialization is successful.\n
 252:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *                    @ref XMC_UART_CH_STATUS_ERROR if configuration of baudrate failed.
 253:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 254:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 255:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Initializes the USIC channel for UART protocol.\n\n
 256:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * During the initialization, USIC channel is enabled, baudrate is configured with the defined over
 257:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * in the intialization structure. If the oversampling value is set to 0 in the structure, the defa
 258:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * is considered. Sampling point for each symbol is configured at the half of sampling period. Symb
 259:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * majority decision among 3 samples. 
 260:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Word length is configured with the number of data bits. If the value of \a frame_length is 0, th
 261:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * is set to the same value as word length. If \a frame_length is greater than 0, it is set as the 
 262:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Parity mode is set to the value configured for \a parity_mode.
 263:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * The USIC channel should be set to UART mode by calling the XMC_UART_CH_Start() API after the ini
 264:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 265:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 266:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Start(), XMC_UART_CH_Stop(), XMC_UART_CH_Transmit()\n\n\n
 267:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 268:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_Init(XMC_USIC_CH_t *const channel, const XMC_UART_CH_CONFIG_t *const config);
 269:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 270:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 271:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 272:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 273:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 274:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 275:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 276:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the USIC channel operation mode to UART mode.\n\n
 277:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * CCR register bitfield \a Mode is set to 2(UART mode). This API should be called after configurin
 278:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * the USIC channel. Transmission and reception can happen only when the UART mode is set. 
 279:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * This is an inline function.
 280:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 281:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 282:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Stop(), XMC_UART_CH_Transmit()\n\n\n
 283:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 284:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_Start(XMC_USIC_CH_t *const channel)
 285:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 286:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   channel->CCR = (uint32_t)(((channel->CCR) & (~USIC_CH_CCR_MODE_Msk)) | (uint32_t)XMC_USIC_CH_OPER
 287:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** }
 288:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 289:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 290:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 291:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 292:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return XMC_UART_CH_STATUS_t Status to indicate if the communication channel is stopped successf
 293:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *                              @ref XMC_UART_CH_STATUS_OK if the communication channel is stopped.
 294:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *                              @ref XMC_UART_CH_STATUS_BUSY if the communication channel is busy.
 295:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 296:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 297:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Stops the UART communication.\n\n
 298:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * CCR register bitfield \a Mode is reset. This disables the communication.
 299:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Before starting the communication again, the channel has to be reconfigured.
 300:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 301:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 302:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Init() \n\n\n
 303:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 304:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** XMC_UART_CH_STATUS_t XMC_UART_CH_Stop(XMC_USIC_CH_t *const channel);
 305:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 306:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 307:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 308:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				   \b Range: @ref XMC_UART0_CH0, XMC_UART0_CH1 ,XMC_UART1_CH0, XMC_UART1_CH1, XMC_UART2_CH0,
 309:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param rate Desired baudrate. \n
 310:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *           \b Range: minimum value = 100, maximum value depends on the peripheral clock frequency
 311:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				   and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/
 312:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 313:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 This can be related to the number of samples for each logic state of the data signal.\n
 314:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 \b Range: 4 to 32. Value should be chosen based on the protocol used.
 315:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return XMC_UART_CH_STATUS_t Status indicating the baudrate configuration.\n
 316:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 			     \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 317:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 318:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 319:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description:</b><br>
 320:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the bus speed in bits per second.\n\n
 321:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Derives the values of \a STEP and PDIV to arrive at the optimum realistic speed possible.
 322:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \a oversampling is the number of samples to be taken for each symbol of UART protocol.
 323:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Default \a oversampling of 16 is considered if the input \a oversampling is less than 4. It is r
 324:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * a minimum oversampling of 4 for UART.
 325:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 326:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 327:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Init(), XMC_UART_CH_Stop(), XMC_USIC_CH_GetBaudrate()
 328:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 329:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** XMC_UART_CH_STATUS_t XMC_UART_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 330:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 331:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 332:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 333:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				   \b Range: @ref XMC_UART0_CH0, XMC_UART0_CH1 ,XMC_UART1_CH0, XMC_UART1_CH1, XMC_UART2_CH0,
 334:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param rate Desired baudrate. \n
 335:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *           \b Range: minimum value = 100, maximum value depends on the peripheral clock frequency
 336:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				   and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/
 337:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 338:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 This can be related to the number of samples for each logic state of the data signal.\n
 339:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 \b Range: 4 to 32. Value should be chosen based on the protocol used.
 340:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param normal_divider_mode Selects normal divider mode for baudrate generator instead of default
 341:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return XMC_UART_CH_STATUS_t Status indicating the baudrate configuration.\n
 342:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 			     \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 343:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 344:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 345:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description:</b><br>
 346:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the bus speed in bits per second.\n\n
 347:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Derives the values of \a STEP and PDIV to arrive at the optimum realistic speed possible.
 348:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \a oversampling is the number of samples to be taken for each symbol of UART protocol.
 349:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Default \a oversampling of 16 is considered if the input \a oversampling is less than 4. It is r
 350:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * a minimum oversampling of 4 for UART.
 351:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 352:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 353:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Init(), XMC_UART_CH_Stop(), XMC_USIC_CH_GetBaudrate()
 354:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 355:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** XMC_UART_CH_STATUS_t XMC_UART_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_
 356:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 357:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 358:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 359:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 360:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  data Data to be transmitted. \n 
 361:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: 16 bit unsigned data within the range 0 to 65535. Actual size of
 362:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *          data transmitted depends on the configured number of bits for the UART protocol in the 
 363:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 364:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 365:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 366:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Transmits data over serial communication channel using UART protocol.\n\n
 367:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Based on the channel configuration, data is either put to the transmit FIFO or to TBUF register.
 368:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Before putting data to TBUF, the API waits for TBUF to finish shifting its contents to shift reg
 369:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * So user can continuously execute the API without checking for TBUF busy status. Based on the num
 370:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * data bits configured, the lower significant bits will be extracted for transmission.
 371:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 372:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Note: When FIFO is not configured, the API waits for the TBUF to be available. 
 373:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * This makes the execution a blocking call.
 374:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 375:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 376:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_GetReceivedData() \n\n\n
 377:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 378:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data);
 379:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 380:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 381:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 382:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 383:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return uint16_t Received data over UART communication channel.
 384:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 385:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Provides one word of data received over UART communication channel.\n\n
 386:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Based on the channel configuration, data is either read from the receive FIFO or RBUF register.
 387:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Before returning the value, there is no check for data validity. User should check the appropria
 388:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * data receive flags(standard receive/alternative receive/FIFO standard receive/FIFO alternative r
 389:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * before executing the API. Reading from an empty receive FIFO can generate a receive error event.
 390:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 391:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 392:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_GetStatusFlag(), XMC_UART_CH_Transmit() \n\n\n
 393:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 394:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** uint16_t XMC_UART_CH_GetReceivedData(XMC_USIC_CH_t *const channel);
 395:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 396:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 397:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 398:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 399:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  word_length Data word length. \n
 400:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: minimum= 1, maximum= 16.
 401:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 402:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 403:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 404:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the data word length in number of bits.\n\n
 405:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Word length can range from 1 to 16. It indicates the number of data bits in a data word.
 406:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * The value of \a word_length will be decremented by 1 before setting the value to \a SCTR registe
 407:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * If the UART data bits is more than 16, then the frame length should be set to the actual number 
 408:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * word length should be configured with the number of bits expected in each transaction. For examp
 409:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * for UART communication is 20 bits, then the frame length should be set as 20. Word length can be
 410:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * transmit and receive handling. If data is stored as 8bit array, then the word length can be set 
 411:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * a full message of UART data should be transmitted/ received as 3 data words.
 412:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 413:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 414:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_SetFrameLength() \n\n\n
 415:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 416:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
 417:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 418:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetWordLength(channel, word_length);
 419:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** }
 420:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 421:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 422:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 423:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 424:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  frame_length Number of data bits in each UART frame. \n
 425:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: minimum= 1, maximum= 64.
 426:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 427:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 428:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 429:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the number of data bits for UART communication.\n\n
 430:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * The frame length is configured by setting the input value to \a SCTR register.
 431:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * The value of \a frame_length will be decremented by 1, before setting it to the register.
 432:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Frame length should not be set to 64 for UART communication.
 433:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 434:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 435:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_SetWordLength() \n\n\n
 436:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 437:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
 438:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 439:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetFrameLength(channel, frame_length);
 440:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** }
 441:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 442:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 443:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 444:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 445:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  event Event bitmasks to enable. Use the type @ref XMC_UART_CH_EVENT_t for naming events.
 446:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART_CH_EVENT_RECEIVE_START, @ref XMC_UART_CH_EVENT_DATA_LOST,
 447:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  @ref XMC_UART_CH_EVENT_TRANSMIT_SHIFT, @ref XMC_UART_CH_EVENT_TRANSMIT_BUFFER,
 448:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  etc.
 449:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 450:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 451:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 452:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Enables interrupt events for UART communication.\n\n
 453:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
 454:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @ref XMC_UART_CH_EVENT_t enumerates multiple event bitmasks. These enumerations can be used as i
 455:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Events are configured by setting bits in the CCR register.
 456:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 457:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_DisableEvent(), XMC_UART_CH_SetInterruptNodePointer(), XMC_UART_CH_GetStatusFlag() \
 458:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 459:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 460:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 461:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 462:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 463:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 464:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  event Bitmask of events to disable. Use the type @ref XMC_UART_CH_EVENT_t for naming eve
 465:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART_CH_EVENT_RECEIVE_START, @ref XMC_UART_CH_EVENT_DATA_LOST,
 466:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  @ref XMC_UART_CH_EVENT_TRANSMIT_SHIFT, @ref XMC_UART_CH_EVENT_TRANSMIT_BUFFER,
 467:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  etc.
 468:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 469:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 470:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 471:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Disables the interrupt events by clearing the bits in CCR register.\n\n
 472:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
 473:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EVENT_FLAG_t enumerates multiple event bitmasks. These enumerations can be used as i
 474:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 475:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 476:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_ClearStatusFlag(), XMC_UART_CH_EnableEvent() \n\n\n
 477:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 478:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 479:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 480:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 481:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 482:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 483:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param service_request Service request number for generating protocol interrupts.\n
 484:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: 0 to 5.
 485:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 486:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 487:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 488:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the interrupt node for UART channel protocol events.\n\n
 489:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * For all the protocol events enlisted in the enumeration XMC_UART_CH_EVENT_t, one common
 490:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * interrupt gets generated. The service request connects the interrupt node to the UART 
 491:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * protocol events.
 492:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 493:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 494:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 495:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableEvent() \n\n\n
 496:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 497:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 498:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****                                                          const uint8_t service_request)
 499:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 500:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL, 
 501:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****                                               (uint32_t)service_request);
 502:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** }
 503:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 504:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 505:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 506:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 507:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
 508:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 						  \b Range: @ref XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
 509:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 						  			@ref XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
 510:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param service_request Service request number.\n
 511:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 						  \b Range: 0 to 5.
 512:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 513:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 514:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 515:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the interrupt node for USIC channel events. \n\n
 516:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
 517:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 518:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 519:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 520:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 521:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableEvent() \n\n\n
 522:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 523:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SelectInterruptNodePointer(XMC_USIC_CH_t *const channel,
 524:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****                                                             const XMC_UART_CH_INTERRUPT_NODE_POINTE
 525:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****                                                             const uint32_t service_request)
 526:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 527:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, (XMC_USIC_CH_INTERRUPT_NODE_POINTER_t)interrupt_node
 528:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 		                                       (uint32_t)service_request);
 529:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** }
 530:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 531:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 532:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 533:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				   \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@r
 534:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  service_request_line service request number of the event to be triggered. \n
 535:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 			\b Range: 0 to 5.
 536:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 537:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 538:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 539:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Trigger a UART interrupt service request.\n\n
 540:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * When the UART service request is triggered, the NVIC interrupt associated with it will be
 541:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * generated if enabled.
 542:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 543:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 544:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_SelectInterruptNodePointer() \n\n\n
 545:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 546:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
 547:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 548:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_TriggerServiceRequest(channel, (uint32_t)service_request_line);
 549:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** }
 550:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 551:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 552:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 553:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 554:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return Status of UART channel events. \n 
 555:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: Use @ref XMC_UART_CH_STATUS_FLAG_t enumerations for
 556:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 					event bitmasks. @ref XMC_UART_CH_STATUS_FLAG_TRANSMISSION_IDLE, @ref XMC_UART_CH_STATUS_FLA
 557:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 					@ref XMC_UART_CH_STATUS_FLAG_SYNCHRONIZATION_BREAK_DETECTED etc.
 558:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 559:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 560:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Provides the status of UART channel events.\n\n
 561:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Status provided by the API represents the status of multiple events at their bit positions. The 
 562:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * obtained using the enumeration XMC_UART_CH_STATUS_FLAG_t. Event status is obtained by reading
 563:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * the register PSR_ASCMode.
 564:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 565:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 566:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableEvent(),  XMC_UART_CH_ClearStatusFlag()\n\n\n
 567:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 568:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE uint32_t XMC_UART_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 569:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 570:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   return channel->PSR_ASCMode;
 571:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** }
 572:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 573:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 574:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 575:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 576:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param flag UART events to be cleared. \n
 577:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: Use @ref XMC_UART_CH_STATUS_FLAG_t enumerations for
 578:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 					event bitmasks. @ref XMC_UART_CH_STATUS_FLAG_TRANSMISSION_IDLE, @ref XMC_UART_CH_STATUS_FLA
 579:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 					@ref XMC_UART_CH_STATUS_FLAG_SYNCHRONIZATION_BREAK_DETECTED etc.
 580:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 581:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 582:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 583:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Clears the status of UART channel events.\n\n
 584:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
 585:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_STATUS_FLAG_t enumerates multiple event bitmasks. These enumerations can be used as 
 586:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Events are cleared by setting the bitmask to the PSCR register.
 587:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 588:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 589:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_DisableEvent(),  XMC_UART_CH_GetStatusFlag()\n\n\n
 590:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 591:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, const uint32_t flag)
 592:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 593:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   channel->PSCR = flag;
 594:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** }
 595:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 596:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 597:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 598:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 599:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param input UART channel input stage of type @ref XMC_UART_CH_INPUT_t. \n 
 600:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: @ref XMC_UART_CH_INPUT_RXD (for DX0),
 601:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 					@ref XMC_UART_CH_INPUT_RXD1 (for DX3), @ref XMC_UART_CH_INPUT_RXD2 (for DX5).
 602:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param source Input source select for the input stage. The table provided below maps the decimal
 603:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 604:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 605:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * </tr></table>
 606:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 607:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 608:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 609:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets input soource for the UART communication.\n\n
 610:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * It is used for configuring the input stage for data reception.
 611:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. 
 612:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * The API can be used for the input stages DX0, DX3 and DX5. 
 613:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 614:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 615:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableInputInversion() \n\n\n
 616:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 617:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_UART_CH_INP
 618:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 619:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~(USIC_CH_DX0CR_INSW_Msk|USIC_CH_DX0CR_
 620:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetInputSource(channel, (XMC_USIC_CH_INPUT_t)input, source);
 621:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** }
 622:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 623:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 624:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 625:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 626:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param pulse_length Length of the zero pulse in number of time quanta. \n 
 627:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: 0 to 7.
 628:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 629:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 630:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 631:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the length of zero pulse in number of time quanta. Value 0 indicates one time quanta.\n\n
 632:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Maximum possible is 8 time quanta with the value configured as 7.\n
 633:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * The value is set to PCR_ASCMode register.
 634:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 635:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableInputInversion(), XMC_UART_CH_SetSamplePoint() \n\n\n
 636:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 637:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** */
 638:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetPulseLength(XMC_USIC_CH_t *const channel, const uint8_t pulse_l
 639:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 640:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   channel->PCR_ASCMode = (uint32_t)(channel->PCR_ASCMode & (~USIC_CH_PCR_ASCMode_PL_Msk)) |
 641:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****                          ((uint32_t)pulse_length << USIC_CH_PCR_ASCMode_PL_Pos);
 642:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** }
 643:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 644:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 645:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 646:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 647:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 648:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 649:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 650:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 651:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Enables the generation of the master clock MCLK.\n\n
 652:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 653:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_USIC_CH_SetMclkOutputPassiveLevel()\n\n\n
 654:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 655:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** */
 656:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_EnableMasterClock(XMC_USIC_CH_t *const channel)
 657:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 658:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   channel->PCR_ASCMode |= USIC_CH_PCR_ASCMode_MCLK_Msk;
 659:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** }
 660:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 661:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 662:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 663:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 664:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 665:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 666:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 667:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Disables the generation of the master clock MCLK.\n\n
 668:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 669:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_USIC_CH_SetMclkOutputPassiveLevel()\n\n\n
 670:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 671:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** */
 672:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_DisableMasterClock(XMC_USIC_CH_t *const channel)
 673:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 674:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   channel->PCR_ASCMode &= (uint32_t)~USIC_CH_PCR_ASCMode_MCLK_Msk;
 675:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** }
 676:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** 
 677:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** /**
 678:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 679:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 680:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @param sample_point Sample point among the number of samples. \n
 681:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: minimum= 0, maximum= \a oversampling (DCTQ).
 682:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 683:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  *
 684:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 685:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the sample point among the multiple samples for each UART symbol.\n\n
 686:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * The sample point is the one sample among number of samples set as oversampling. The value should
 687:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * the oversampling value. XMC_UART_CH_Init() sets the sample point to the sample at the centre. Fo
 688:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * example if the oversampling is 16, then the sample point is set to 9.
 689:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 690:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableInputInversion(), XMC_UART_CH_SetSamplePoint() \n\n\n
 691:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****  */
 692:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetSamplePoint(XMC_USIC_CH_t *const channel, const uint32_t sample
 693:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** {
 694:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****   channel->PCR_ASCMode = (uint32_t)((channel->PCR_ASCMode & (uint32_t)(~USIC_CH_PCR_ASCMode_SP_Msk)
 436              	 .loc 3 694 0
 437 004e DA6B     	 ldr r2,[r3,#60]
 438 0050 0C49     	 ldr r1,.L56
 439              	.LBE51:
 440              	.LBE50:
 411:../Dave/Generated/UART/uart.c ****       }
 441              	 .loc 1 411 0
 442 0052 0134     	 add r4,r4,#1
 443              	.LVL46:
 444              	.LBB53:
 445              	.LBB52:
 695:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****                          (sample_point << USIC_CH_PCR_ASCMode_SP_Pos));
 446              	 .loc 3 695 0
 447 0054 2402     	 lsl r4,r4,#8
 448              	.LVL47:
 694:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h ****                          (sample_point << USIC_CH_PCR_ASCMode_SP_Pos));
 449              	 .loc 3 694 0
 450 0056 0A40     	 and r2,r1
 451 0058 1443     	 orr r4,r2
 452 005a DC63     	 str r4,[r3,#60]
 453              	.LVL48:
 454              	.L49:
 455              	.LBE52:
 456              	.LBE53:
 457              	.LBB54:
 458              	.LBB55:
 286:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** }
 459              	 .loc 3 286 0
 460 005c 0F21     	 mov r1,#15
 461              	.LBE55:
 462              	.LBE54:
 414:../Dave/Generated/UART/uart.c ****       /* Initialize UART TX pin */
 463              	 .loc 1 414 0
 464 005e 2A68     	 ldr r2,[r5]
 465              	.LVL49:
 466              	.LBB57:
 467              	.LBB56:
 286:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_uart.h **** }
 468              	 .loc 3 286 0
 469 0060 136C     	 ldr r3,[r2,#64]
 470 0062 8B43     	 bic r3,r1
 471 0064 0D39     	 sub r1,r1,#13
 472 0066 0B43     	 orr r3,r1
 473 0068 1364     	 str r3,[r2,#64]
 474              	.LBE56:
 475              	.LBE57:
 416:../Dave/Generated/UART/uart.c ****       {
 476              	 .loc 1 416 0
 477 006a 6B68     	 ldr r3,[r5,#4]
 478 006c 0533     	 add r3,r3,#5
 479 006e DB7F     	 ldrb r3,[r3,#31]
 480 0070 8B42     	 cmp r3,r1
 481 0072 04D0     	 beq .L46
 418:../Dave/Generated/UART/uart.c ****       }
 482              	 .loc 1 418 0
 483 0074 3179     	 ldrb r1,[r6,#4]
 484 0076 3068     	 ldr r0,[r6]
 485              	.LVL50:
 486 0078 B268     	 ldr r2,[r6,#8]
 487              	.LVL51:
 488 007a FFF7FEFF 	 bl XMC_GPIO_Init
 489              	.LVL52:
 490              	.L46:
 427:../Dave/Generated/UART/uart.c **** 
 491              	 .loc 1 427 0
 492 007e 381C     	 mov r0,r7
 493              	 
 494              	.LVL53:
 495              	.LVL54:
 496 0080 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 497              	.L57:
 498 0082 C046     	 .align 2
 499              	.L56:
 500 0084 FFE0FFFF 	 .word -7937
 501              	 .cfi_endproc
 502              	.LFE181:
 504              	 .section .text.UART_StartReceiveIRQ,"ax",%progbits
 505              	 .align 1
 506              	 .global UART_StartReceiveIRQ
 507              	 .code 16
 508              	 .thumb_func
 510              	UART_StartReceiveIRQ:
 511              	.LFB182:
 523:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_MODE_MISMATCH;
 512              	 .loc 1 523 0
 513              	 .cfi_startproc
 514              	.LVL55:
 515 0000 70B5     	 push {r4,r5,r6,lr}
 516              	.LCFI6:
 517              	 .cfi_def_cfa_offset 16
 518              	 .cfi_offset 4,-16
 519              	 .cfi_offset 5,-12
 520              	 .cfi_offset 6,-8
 521              	 .cfi_offset 14,-4
 530:../Dave/Generated/UART/uart.c ****   {
 522              	 .loc 1 530 0
 523 0002 4668     	 ldr r6,[r0,#4]
 525:../Dave/Generated/UART/uart.c **** 
 524              	 .loc 1 525 0
 525 0004 8568     	 ldr r5,[r0,#8]
 526              	.LVL56:
 530:../Dave/Generated/UART/uart.c ****   {
 527              	 .loc 1 530 0
 528 0006 F31D     	 add r3,r6,#7
 529 0008 DC7F     	 ldrb r4,[r3,#31]
 524:../Dave/Generated/UART/uart.c ****   UART_RUNTIME_t * ptr_runtime = handle->runtime;
 530              	 .loc 1 524 0
 531 000a 0423     	 mov r3,#4
 530:../Dave/Generated/UART/uart.c ****   {
 532              	 .loc 1 530 0
 533 000c 002C     	 cmp r4,#0
 534 000e 29D1     	 bne .L59
 535              	.LVL57:
 533:../Dave/Generated/UART/uart.c ****     {
 536              	 .loc 1 533 0
 537 0010 6C7E     	 ldrb r4,[r5,#25]
 532:../Dave/Generated/UART/uart.c ****     if (ptr_runtime->rx_busy == false)
 538              	 .loc 1 532 0
 539 0012 023B     	 sub r3,r3,#2
 533:../Dave/Generated/UART/uart.c ****     {
 540              	 .loc 1 533 0
 541 0014 E4B2     	 uxtb r4,r4
 542 0016 002C     	 cmp r4,#0
 543 0018 24D1     	 bne .L59
 567:../Dave/Generated/UART/uart.c ****       }
 544              	 .loc 1 567 0
 545 001a 0133     	 add r3,r3,#1
 536:../Dave/Generated/UART/uart.c ****       {
 546              	 .loc 1 536 0
 547 001c 0029     	 cmp r1,#0
 548 001e 21D0     	 beq .L59
 536:../Dave/Generated/UART/uart.c ****       {
 549              	 .loc 1 536 0 is_stmt 0 discriminator 1
 550 0020 002A     	 cmp r2,#0
 551 0022 1FD0     	 beq .L59
 542:../Dave/Generated/UART/uart.c ****         ptr_runtime->rx_data_index = 0U;
 552              	 .loc 1 542 0 is_stmt 1
 553 0024 023B     	 sub r3,r3,#2
 540:../Dave/Generated/UART/uart.c ****         ptr_runtime->rx_data_count = count;
 554              	 .loc 1 540 0
 555 0026 6960     	 str r1,[r5,#4]
 541:../Dave/Generated/UART/uart.c ****         ptr_runtime->rx_busy = true;
 556              	 .loc 1 541 0
 557 0028 2A61     	 str r2,[r5,#16]
 542:../Dave/Generated/UART/uart.c ****         ptr_runtime->rx_data_index = 0U;
 558              	 .loc 1 542 0
 559 002a 6B76     	 strb r3,[r5,#25]
 543:../Dave/Generated/UART/uart.c **** 
 560              	 .loc 1 543 0
 561 002c 6C61     	 str r4,[r5,#20]
 545:../Dave/Generated/UART/uart.c ****         {
 562              	 .loc 1 545 0
 563 002e 2836     	 add r6,r6,#40
 564 0030 3378     	 ldrb r3,[r6]
 565 0032 0568     	 ldr r5,[r0]
 566              	.LVL58:
 567 0034 002B     	 cmp r3,#0
 568 0036 10D0     	 beq .L60
 569              	.LBB68:
 570              	.LBB69:
 571              	.LBB70:
 572              	.LBB71:
1877:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1878:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1879:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1880:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1881:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1882:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the receive FIFO events. \n
1883:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1884:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 					@ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1885:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation.\n
1886:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: 0 to 5.
1887:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1888:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1889:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1890:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the receive FIFO events. \n\n
1891:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1892:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1893:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1894:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * A receive FIFO event can generate an interrupt only if the interrupt node is configured for the 
1895:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1896:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1897:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1898:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1899:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1900:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1901:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1902:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1903:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1904:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
1905:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1906:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1907:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1908:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1909:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1910:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Value read from the receive FIFO. \n
1911:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 16bit data. Length of data depends on the word length configuration.
1912:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1913:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1914:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets data from the receive FIFO. \n\n
1915:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO should be read only if data is availble in the FIFO. This can be checked using
1916:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * the API XMC_USIC_CH_RXFIFO_IsEmpty(). Receive FIFO error flag will be set if an attempt is made
1917:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO. To read all the received data, user should keep reading data
1918:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * until receive FIFO is empty.
1919:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1920:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1921:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent() \n\n\n
1922:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1923:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint16_t XMC_USIC_CH_RXFIFO_GetData(XMC_USIC_CH_t *const channel)
1924:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1925:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint16_t)(channel->OUTR);
1926:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1927:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1928:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1929:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1930:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1931:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1932:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1933:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1934:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of receive FIFO. \n\n
1935:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO contents will be cleared and the filling level will be reset to 0.
1936:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1937:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1938:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetLevel() \n\n\n
1939:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1940:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_Flush(XMC_USIC_CH_t *const channel)
1941:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1942:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;
 573              	 .loc 2 1942 0
 574 0038 8023     	 mov r3,#128
 575 003a 061C     	 mov r6,r0
 576              	.LVL59:
 577 003c DB01     	 lsl r3,r3,#7
 578 003e FC35     	 add r5,r5,#252
 579 0040 111C     	 mov r1,r2
 580              	.LVL60:
 581 0042 EB61     	 str r3,[r5,#28]
 582              	.LBE71:
 583              	.LBE70:
 552:../Dave/Generated/UART/uart.c **** 
 584              	 .loc 1 552 0
 585 0044 FFF7FEFF 	 bl UART_lReconfigureRxFIFO
 586              	.LVL61:
 587              	.LBB72:
 588              	.LBB73:
1852:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 589              	 .loc 2 1852 0
 590 0048 C021     	 mov r1,#192
 591              	.LBE73:
 592              	.LBE72:
 554:../Dave/Generated/UART/uart.c ****             (uint32_t)((uint32_t)XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD |
 593              	 .loc 1 554 0
 594 004a 3368     	 ldr r3,[r6]
 595              	.LVL62:
 596              	.LBB75:
 597              	.LBB74:
1852:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 598              	 .loc 2 1852 0
 599 004c C905     	 lsl r1,r1,#23
 600 004e FC33     	 add r3,r3,#252
 601              	.LVL63:
 602 0050 1A69     	 ldr r2,[r3,#16]
 603 0052 0A43     	 orr r2,r1
 604 0054 1A61     	 str r2,[r3,#16]
 605              	.LVL64:
 606 0056 231C     	 mov r3,r4
 607 0058 04E0     	 b .L59
 608              	.LVL65:
 609              	.L60:
 610              	.LBE74:
 611              	.LBE75:
 612              	.LBE69:
 613              	.LBE68:
 614              	.LBB76:
 615              	.LBB77:
1196:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 616              	 .loc 2 1196 0
 617 005a C021     	 mov r1,#192
 618              	.LVL66:
 619 005c 2A6C     	 ldr r2,[r5,#64]
 620              	.LVL67:
 621 005e 0902     	 lsl r1,r1,#8
 622 0060 0A43     	 orr r2,r1
 623 0062 2A64     	 str r2,[r5,#64]
 624              	.LVL68:
 625              	.L59:
 626              	.LBE77:
 627              	.LBE76:
 572:../Dave/Generated/UART/uart.c **** #endif
 628              	 .loc 1 572 0
 629 0064 181C     	 mov r0,r3
 630              	 
 631 0066 70BD     	 pop {r4,r5,r6,pc}
 632              	 .cfi_endproc
 633              	.LFE182:
 635              	 .section .text.UART_Receive,"ax",%progbits
 636              	 .align 1
 637              	 .global UART_Receive
 638              	 .code 16
 639              	 .thumb_func
 641              	UART_Receive:
 642              	.LFB179:
 212:../Dave/Generated/UART/uart.c ****   UART_STATUS_t ret_stat = UART_STATUS_MODE_MISMATCH;
 643              	 .loc 1 212 0
 644              	 .cfi_startproc
 645              	.LVL69:
 646 0000 08B5     	 push {r3,lr}
 647              	.LCFI7:
 648              	 .cfi_def_cfa_offset 8
 649              	 .cfi_offset 3,-8
 650              	 .cfi_offset 14,-4
 215:../Dave/Generated/UART/uart.c ****   {
 651              	 .loc 1 215 0
 652 0002 4368     	 ldr r3,[r0,#4]
 653 0004 0733     	 add r3,r3,#7
 654 0006 DB7F     	 ldrb r3,[r3,#31]
 655 0008 002B     	 cmp r3,#0
 656 000a 02D1     	 bne .L70
 219:../Dave/Generated/UART/uart.c ****     break;
 657              	 .loc 1 219 0
 658 000c FFF7FEFF 	 bl UART_StartReceiveIRQ
 659              	.LVL70:
 220:../Dave/Generated/UART/uart.c **** #endif
 660              	 .loc 1 220 0
 661 0010 00E0     	 b .L67
 662              	.LVL71:
 663              	.L70:
 213:../Dave/Generated/UART/uart.c **** 
 664              	 .loc 1 213 0
 665 0012 0420     	 mov r0,#4
 666              	.LVL72:
 667              	.L67:
 236:../Dave/Generated/UART/uart.c **** 
 668              	 .loc 1 236 0
 669              	 
 670 0014 08BD     	 pop {r3,pc}
 671              	 .cfi_endproc
 672              	.LFE179:
 674              	 .section .text.UART_lReceiveHandler,"ax",%progbits
 675              	 .align 1
 676              	 .global UART_lReceiveHandler
 677              	 .code 16
 678              	 .thumb_func
 680              	UART_lReceiveHandler:
 681              	.LFB184:
 925:../Dave/Generated/UART/uart.c ****   UART_RUNTIME_t * ptr_runtime = handle->runtime;
 682              	 .loc 1 925 0
 683              	 .cfi_startproc
 684              	.LVL73:
 685 0000 70B5     	 push {r4,r5,r6,lr}
 686              	.LCFI8:
 687              	 .cfi_def_cfa_offset 16
 688              	 .cfi_offset 4,-16
 689              	 .cfi_offset 5,-12
 690              	 .cfi_offset 6,-8
 691              	 .cfi_offset 14,-4
 928:../Dave/Generated/UART/uart.c ****   {
 692              	 .loc 1 928 0
 693 0002 4368     	 ldr r3,[r0,#4]
 925:../Dave/Generated/UART/uart.c ****   UART_RUNTIME_t * ptr_runtime = handle->runtime;
 694              	 .loc 1 925 0
 695 0004 051C     	 mov r5,r0
 928:../Dave/Generated/UART/uart.c ****   {
 696              	 .loc 1 928 0
 697 0006 2833     	 add r3,r3,#40
 698 0008 1B78     	 ldrb r3,[r3]
 926:../Dave/Generated/UART/uart.c **** 
 699              	 .loc 1 926 0
 700 000a 8468     	 ldr r4,[r0,#8]
 701              	.LVL74:
 928:../Dave/Generated/UART/uart.c ****   {
 702              	 .loc 1 928 0
 703 000c 002B     	 cmp r3,#0
 704 000e 2BD0     	 beq .L87
 705              	.LVL75:
 706              	.L72:
 931:../Dave/Generated/UART/uart.c ****     {
 707              	 .loc 1 931 0
 708 0010 2868     	 ldr r0,[r5]
 709              	.LVL76:
 710              	.LBB78:
 711              	.LBB79:
1943:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1944:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1945:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1946:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1947:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1948:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is full
1949:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO is not full.
1950:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1951:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1952:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is full. \n\n
1953:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO filling level reaches the configured size, FIFO full flag is set.
1954:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Any data received when the receive FIFO is full, is lost.
1955:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1956:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1957:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_IsEmpty(), XMC_USIC_CH_RXFIFO_Flush() \n\n\n
1958:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1959:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1960:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1961:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_RFULL_Msk);
1962:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
1963:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** 
1964:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** /**
1965:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1966:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1967:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is empty,
1968:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO has some data.
1969:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  *
1970:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1971:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is empty. \n\n
1972:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO is empty, received data will be put in receive FIFO.
1973:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt
1974:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO will set the receive FIFO error flag.
1975:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1976:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1977:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
1978:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****  */
1979:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1980:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** {
1981:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_REMPTY_Msk);
 712              	 .loc 2 1981 0
 713 0012 031C     	 mov r3,r0
 714 0014 FC33     	 add r3,r3,#252
 715 0016 9B69     	 ldr r3,[r3,#24]
 716              	.LBE79:
 717              	.LBE78:
 931:../Dave/Generated/UART/uart.c ****     {
 718              	 .loc 1 931 0
 719 0018 1B07     	 lsl r3,r3,#28
 720 001a 1CD4     	 bmi .L76
 933:../Dave/Generated/UART/uart.c ****       {
 721              	 .loc 1 933 0
 722 001c 6369     	 ldr r3,[r4,#20]
 723 001e 2269     	 ldr r2,[r4,#16]
 724 0020 9342     	 cmp r3,r2
 725 0022 07D2     	 bcs .L74
 936:../Dave/Generated/UART/uart.c ****         (ptr_runtime->rx_data_index)++;
 726              	 .loc 1 936 0
 727 0024 6268     	 ldr r2,[r4,#4]
 728 0026 D618     	 add r6,r2,r3
 729 0028 FFF7FEFF 	 bl XMC_UART_CH_GetReceivedData
 730              	.LVL77:
 731 002c 3070     	 strb r0,[r6]
 937:../Dave/Generated/UART/uart.c ****       }
 732              	 .loc 1 937 0
 733 002e 6369     	 ldr r3,[r4,#20]
 734 0030 0133     	 add r3,r3,#1
 735 0032 6361     	 str r3,[r4,#20]
 736              	.L74:
 940:../Dave/Generated/UART/uart.c ****       {
 737              	 .loc 1 940 0
 738 0034 6369     	 ldr r3,[r4,#20]
 739 0036 2269     	 ldr r2,[r4,#16]
 740 0038 9342     	 cmp r3,r2
 741 003a E9D1     	 bne .L72
 742              	.LVL78:
 943:../Dave/Generated/UART/uart.c ****         /*Disable both standard receive and alternative receive FIFO events*/
 743              	 .loc 1 943 0
 744 003c 0023     	 mov r3,#0
 745 003e 6376     	 strb r3,[r4,#25]
 746              	.LBB80:
 747              	.LBB81:
1876:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 748              	 .loc 2 1876 0
 749 0040 2B68     	 ldr r3,[r5]
 750 0042 184A     	 ldr r2,.L88
 751 0044 FC33     	 add r3,r3,#252
 752 0046 1969     	 ldr r1,[r3,#16]
 753 0048 0A40     	 and r2,r1
 754 004a 1A61     	 str r2,[r3,#16]
 755              	.LBE81:
 756              	.LBE80:
 948:../Dave/Generated/UART/uart.c ****         {
 757              	 .loc 1 948 0
 758 004c 6B68     	 ldr r3,[r5,#4]
 759 004e 9B68     	 ldr r3,[r3,#8]
 760 0050 002B     	 cmp r3,#0
 761 0052 00D0     	 beq .L76
 951:../Dave/Generated/UART/uart.c ****         }
 762              	 .loc 1 951 0
 763 0054 9847     	 blx r3
 764              	.LVL79:
 765              	.L76:
 957:../Dave/Generated/UART/uart.c ****     {
 766              	 .loc 1 957 0
 767 0056 6169     	 ldr r1,[r4,#20]
 768 0058 2369     	 ldr r3,[r4,#16]
 769 005a 9942     	 cmp r1,r3
 770 005c 21D2     	 bcs .L71
 959:../Dave/Generated/UART/uart.c ****           (uint32_t)(ptr_runtime->rx_data_count - ptr_runtime->rx_data_index));
 771              	 .loc 1 959 0
 772 005e 591A     	 sub r1,r3,r1
 773 0060 281C     	 mov r0,r5
 774 0062 FFF7FEFF 	 bl UART_lReconfigureRxFIFO
 775              	.LVL80:
 776 0066 1CE0     	 b .L71
 777              	.LVL81:
 778              	.L87:
 966:../Dave/Generated/UART/uart.c ****     {
 779              	 .loc 1 966 0
 780 0068 6369     	 ldr r3,[r4,#20]
 781 006a 2269     	 ldr r2,[r4,#16]
 782 006c 9342     	 cmp r3,r2
 783 006e 08D2     	 bcs .L81
 968:../Dave/Generated/UART/uart.c ****       (ptr_runtime->rx_data_index)++;
 784              	 .loc 1 968 0
 785 0070 6268     	 ldr r2,[r4,#4]
 786 0072 0068     	 ldr r0,[r0]
 787              	.LVL82:
 788 0074 D618     	 add r6,r2,r3
 789 0076 FFF7FEFF 	 bl XMC_UART_CH_GetReceivedData
 790              	.LVL83:
 791 007a 3070     	 strb r0,[r6]
 969:../Dave/Generated/UART/uart.c ****     }
 792              	 .loc 1 969 0
 793 007c 6369     	 ldr r3,[r4,#20]
 794 007e 0133     	 add r3,r3,#1
 795 0080 6361     	 str r3,[r4,#20]
 796              	.L81:
 972:../Dave/Generated/UART/uart.c ****     {
 797              	 .loc 1 972 0
 798 0082 6369     	 ldr r3,[r4,#20]
 799 0084 2269     	 ldr r2,[r4,#16]
 800 0086 9342     	 cmp r3,r2
 801 0088 0BD1     	 bne .L71
 975:../Dave/Generated/UART/uart.c ****       /*Disable both standard receive and alternative receive FIFO events*/
 802              	 .loc 1 975 0
 803 008a 0023     	 mov r3,#0
 977:../Dave/Generated/UART/uart.c ****           (uint32_t)((uint32_t)XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE | (uint32_t)XMC_USIC_CH_EVENT_
 804              	 .loc 1 977 0
 805 008c 2A68     	 ldr r2,[r5]
 806              	.LVL84:
 975:../Dave/Generated/UART/uart.c ****       /*Disable both standard receive and alternative receive FIFO events*/
 807              	 .loc 1 975 0
 808 008e 6376     	 strb r3,[r4,#25]
 809              	.LBB82:
 810              	.LBB83:
1217:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_usic.h **** }
 811              	 .loc 2 1217 0
 812 0090 116C     	 ldr r1,[r2,#64]
 813 0092 054B     	 ldr r3,.L88+4
 814 0094 0B40     	 and r3,r1
 815 0096 1364     	 str r3,[r2,#64]
 816              	.LBE83:
 817              	.LBE82:
 980:../Dave/Generated/UART/uart.c ****       {
 818              	 .loc 1 980 0
 819 0098 6B68     	 ldr r3,[r5,#4]
 820 009a 9B68     	 ldr r3,[r3,#8]
 821 009c 002B     	 cmp r3,#0
 822 009e 00D0     	 beq .L71
 983:../Dave/Generated/UART/uart.c ****       }
 823              	 .loc 1 983 0
 824 00a0 9847     	 blx r3
 825              	.LVL85:
 826              	.L71:
 987:../Dave/Generated/UART/uart.c **** 
 827              	 .loc 1 987 0
 828              	 
 829              	.LVL86:
 830              	.LVL87:
 831 00a2 70BD     	 pop {r4,r5,r6,pc}
 832              	.L89:
 833              	 .align 2
 834              	.L88:
 835 00a4 FFFFFF9F 	 .word -1610612737
 836 00a8 FF3FFFFF 	 .word -49153
 837              	 .cfi_endproc
 838              	.LFE184:
 840              	 .global uart_event_conf_flags
 841              	 .global uart_event_status_flags
 842              	 .section .rodata.uart_event_status_flags,"a",%progbits
 843              	 .align 2
 846              	uart_event_status_flags:
 847 0000 04000000 	 .word 4
 848 0004 10000000 	 .word 16
 849 0008 20000000 	 .word 32
 850 000c 40000000 	 .word 64
 851 0010 08000000 	 .word 8
 852              	 .section .rodata.uart_event_conf_flags,"a",%progbits
 853              	 .align 2
 856              	uart_event_conf_flags:
 857 0000 08000000 	 .word 8
 858 0004 20000000 	 .word 32
 859 0008 40000000 	 .word 64
 860 000c 40000000 	 .word 64
 861 0010 10000000 	 .word 16
 862              	 .text
 863              	.Letext0:
 864              	 .file 4 "c:\\dave_4-4-2_64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 865              	 .file 5 "c:\\dave_4-4-2_64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 866              	 .file 6 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc/xmc_gpio.h"
 867              	 .file 7 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc/xmc1_gpio.h"
 868              	 .file 8 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Dave/Generated/DAVE_common.h"
 869              	 .file 9 "../Dave/Generated/UART/uart.h"
 870              	 .file 10 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include/cmsis_gcc.h"
 871              	 .file 11 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
    {standard input}:18     .text.UART_lReconfigureRxFIFO:00000000 $t
    {standard input}:22     .text.UART_lReconfigureRxFIFO:00000000 UART_lReconfigureRxFIFO
    {standard input}:66     .text.UART_GetAppVersion:00000000 $t
    {standard input}:71     .text.UART_GetAppVersion:00000000 UART_GetAppVersion
    {standard input}:89     .text.UART_GetAppVersion:00000008 $d
    {standard input}:94     .text.UART_Init:00000000 $t
    {standard input}:99     .text.UART_Init:00000000 UART_Init
    {standard input}:123    .text.UART_Transmit:00000000 $t
    {standard input}:128    .text.UART_Transmit:00000000 UART_Transmit
    {standard input}:269    .text.UART_AbortReceive:00000000 $t
    {standard input}:274    .text.UART_AbortReceive:00000000 UART_AbortReceive
    {standard input}:345    .text.UART_AbortReceive:00000040 $d
    {standard input}:350    .text.UART_SetBaudrate:00000000 $t
    {standard input}:355    .text.UART_SetBaudrate:00000000 UART_SetBaudrate
    {standard input}:500    .text.UART_SetBaudrate:00000084 $d
    {standard input}:505    .text.UART_StartReceiveIRQ:00000000 $t
    {standard input}:510    .text.UART_StartReceiveIRQ:00000000 UART_StartReceiveIRQ
    {standard input}:636    .text.UART_Receive:00000000 $t
    {standard input}:641    .text.UART_Receive:00000000 UART_Receive
    {standard input}:675    .text.UART_lReceiveHandler:00000000 $t
    {standard input}:680    .text.UART_lReceiveHandler:00000000 UART_lReceiveHandler
    {standard input}:835    .text.UART_lReceiveHandler:000000a4 $d
    {standard input}:856    .rodata.uart_event_conf_flags:00000000 uart_event_conf_flags
    {standard input}:846    .rodata.uart_event_status_flags:00000000 uart_event_status_flags
    {standard input}:843    .rodata.uart_event_status_flags:00000000 $d
    {standard input}:853    .rodata.uart_event_conf_flags:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
XMC_UART_CH_Transmit
XMC_UART_CH_DisableEvent
XMC_GPIO_SetMode
XMC_UART_CH_Stop
XMC_UART_CH_SetBaudrate
XMC_GPIO_Init
XMC_UART_CH_GetReceivedData
