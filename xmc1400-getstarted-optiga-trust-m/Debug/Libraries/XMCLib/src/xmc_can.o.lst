   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,4
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_can.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .global __aeabi_uidivmod
  18              	 .global __aeabi_uidiv
  19              	 .section .text.XMC_CAN_NODE_NominalBitTimeConfigureEx,"ax",%progbits
  20              	 .align 1
  21              	 .global XMC_CAN_NODE_NominalBitTimeConfigureEx
  22              	 .code 16
  23              	 .thumb_func
  25              	XMC_CAN_NODE_NominalBitTimeConfigureEx:
  26              	.LFB127:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc_can.c"
   1:../Libraries/XMCLib/src/xmc_can.c **** /**
   2:../Libraries/XMCLib/src/xmc_can.c ****  * @file xmc_can.c
   3:../Libraries/XMCLib/src/xmc_can.c ****  * @date 2019-06-26
   4:../Libraries/XMCLib/src/xmc_can.c ****  *
   5:../Libraries/XMCLib/src/xmc_can.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_can.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_can.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_can.c ****  *
   9:../Libraries/XMCLib/src/xmc_can.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_can.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_can.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_can.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_can.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_can.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_can.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_can.c ****  * 
  18:../Libraries/XMCLib/src/xmc_can.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_can.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_can.c ****  * 
  21:../Libraries/XMCLib/src/xmc_can.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_can.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_can.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_can.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_can.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_can.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_can.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_can.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_can.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_can.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_can.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_can.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_can.c ****  *
  36:../Libraries/XMCLib/src/xmc_can.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_can.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_can.c ****  *
  39:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_can.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_can.c ****  *
  42:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-05-20:
  43:../Libraries/XMCLib/src/xmc_can.c ****  *     - New API added: XMC_CAN_MO_ReceiveData() <br>
  44:../Libraries/XMCLib/src/xmc_can.c ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  45:../Libraries/XMCLib/src/xmc_can.c ****  *     - Minor fix in XMC_CAN_TXFIFO_ConfigMOSlaveObject(). <br>
  46:../Libraries/XMCLib/src/xmc_can.c ****  *
  47:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-06-20:
  48:../Libraries/XMCLib/src/xmc_can.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  49:../Libraries/XMCLib/src/xmc_can.c ****  *
  50:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-09-01:
  51:../Libraries/XMCLib/src/xmc_can.c ****  *     - Removed  fCANB clock support <br>
  52:../Libraries/XMCLib/src/xmc_can.c ****  *
  53:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-09-08:
  54:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed bug in XMC_CAN_Init() <br>
  55:../Libraries/XMCLib/src/xmc_can.c ****  *
  56:../Libraries/XMCLib/src/xmc_can.c ****  * 2016-06-07:
  57:../Libraries/XMCLib/src/xmc_can.c ****  *     - Changed XMC_CAN_AllocateMOtoNodeList to wait for ready status of list controller
  58:../Libraries/XMCLib/src/xmc_can.c ****  *
  59:../Libraries/XMCLib/src/xmc_can.c ****  * 2016-06-20:
  60:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed bug in XMC_CAN_MO_Config() <br> 
  61:../Libraries/XMCLib/src/xmc_can.c ****  *
  62:../Libraries/XMCLib/src/xmc_can.c ****  * 2017-11-09:
  63:../Libraries/XMCLib/src/xmc_can.c ****  *     - Added XMC_CAN_InitEx() and XMC_CAN_NODE_NominalBitTimeConfigureEx()
  64:../Libraries/XMCLib/src/xmc_can.c ****  *     - Make XMC_CAN_GetBaudrateClockSource(), XMC_CAN_SetBaudrateClockSource() and XMC_CAN_GetBau
  65:../Libraries/XMCLib/src/xmc_can.c ****  *     - Changed refactoring XMC_CAN_MO_Config() to configure MOCTR depending on transmit or receiv
  66:../Libraries/XMCLib/src/xmc_can.c ****  *
  67:../Libraries/XMCLib/src/xmc_can.c ****  * 2018-06-21:
  68:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_NODE_NominalBitTimeConfigureEx()
  69:../Libraries/XMCLib/src/xmc_can.c ****  *
  70:../Libraries/XMCLib/src/xmc_can.c ****  * 2018-11-12:
  71:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed assertion at XMC_CAN_InitEx()
  72:../Libraries/XMCLib/src/xmc_can.c ****  *
  73:../Libraries/XMCLib/src/xmc_can.c ****  * 2019-05-07:
  74:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed compilation warnings
  75:../Libraries/XMCLib/src/xmc_can.c ****  *
  76:../Libraries/XMCLib/src/xmc_can.c ****  * 2019-06-26:
  77:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_NODE_NominalBitTimeConfigureEx() non returning, decrementing ntq before cont
  78:../Libraries/XMCLib/src/xmc_can.c ****  *     - Added XMC_CAN_GetClockFrequency()
  79:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_InitEx() so that XMC_CAN_SetBaudrateClockSource() is invoked before XMC_CAN_
  80:../Libraries/XMCLib/src/xmc_can.c ****  *
  81:../Libraries/XMCLib/src/xmc_can.c ****  * @endcond
  82:../Libraries/XMCLib/src/xmc_can.c ****  *
  83:../Libraries/XMCLib/src/xmc_can.c ****  */ 
  84:../Libraries/XMCLib/src/xmc_can.c **** 
  85:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
  86:../Libraries/XMCLib/src/xmc_can.c ****  * HEADER FILES
  87:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
  88:../Libraries/XMCLib/src/xmc_can.c **** #include "xmc_can.h"
  89:../Libraries/XMCLib/src/xmc_can.c **** 
  90:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CAN)
  91:../Libraries/XMCLib/src/xmc_can.c **** #include "xmc_scu.h"
  92:../Libraries/XMCLib/src/xmc_can.c **** 
  93:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t max(uint32_t a, uint32_t b)
  94:../Libraries/XMCLib/src/xmc_can.c **** {
  95:../Libraries/XMCLib/src/xmc_can.c ****   return (a > b) ? a : b;
  96:../Libraries/XMCLib/src/xmc_can.c **** }
  97:../Libraries/XMCLib/src/xmc_can.c **** 
  98:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t min(uint32_t a, uint32_t b)
  99:../Libraries/XMCLib/src/xmc_can.c **** {
 100:../Libraries/XMCLib/src/xmc_can.c ****   return (a < b) ? a : b;
 101:../Libraries/XMCLib/src/xmc_can.c **** }
 102:../Libraries/XMCLib/src/xmc_can.c **** 
 103:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
 104:../Libraries/XMCLib/src/xmc_can.c ****  * API IMPLEMENTATION
 105:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
 106:../Libraries/XMCLib/src/xmc_can.c **** 
 107:../Libraries/XMCLib/src/xmc_can.c **** /* The max prescaler is the equal to max BRP setting (64) multiply by 8 (DIV8) */
 108:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_PRESCALER 512
 109:../Libraries/XMCLib/src/xmc_can.c **** 
 110:../Libraries/XMCLib/src/xmc_can.c **** /* maximum TSEG1 is 16 and maximum TSEG2 is 8, plus one fix sync tq */
 111:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_NTQ 25
 112:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_NTQ 8
 113:../Libraries/XMCLib/src/xmc_can.c **** 
 114:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_TSEG1 3
 115:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_TSEG2 2
 116:../Libraries/XMCLib/src/xmc_can.c **** 
 117:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_TSEG1 15
 118:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_TSEG2 7
 119:../Libraries/XMCLib/src/xmc_can.c **** 
 120:../Libraries/XMCLib/src/xmc_can.c **** 
 121:../Libraries/XMCLib/src/xmc_can.c **** int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx(XMC_CAN_NODE_t *const can_node,
 122:../Libraries/XMCLib/src/xmc_can.c ****                                                const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const 
 123:../Libraries/XMCLib/src/xmc_can.c **** {
  28              	 .loc 1 123 0
  29              	 .cfi_startproc
  30              	.LVL0:
  31 0000 F0B5     	 push {r4,r5,r6,r7,lr}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 20
  34              	 .cfi_offset 4,-20
  35              	 .cfi_offset 5,-16
  36              	 .cfi_offset 6,-12
  37              	 .cfi_offset 7,-8
  38              	 .cfi_offset 14,-4
 124:../Libraries/XMCLib/src/xmc_can.c ****   /* Check that the CAN frequency is a multiple of the required baudrate */
 125:../Libraries/XMCLib/src/xmc_can.c ****   if ((bit_time_config->can_frequency % bit_time_config->baudrate) == 0)
  39              	 .loc 1 125 0
  40 0002 0F68     	 ldr r7,[r1]
  41 0004 4C68     	 ldr r4,[r1,#4]
 123:../Libraries/XMCLib/src/xmc_can.c ****   /* Check that the CAN frequency is a multiple of the required baudrate */
  42              	 .loc 1 123 0
  43 0006 85B0     	 sub sp,sp,#20
  44              	.LCFI1:
  45              	 .cfi_def_cfa_offset 40
 123:../Libraries/XMCLib/src/xmc_can.c ****   /* Check that the CAN frequency is a multiple of the required baudrate */
  46              	 .loc 1 123 0
  47 0008 051C     	 mov r5,r0
  48 000a 0E1C     	 mov r6,r1
  49              	 .loc 1 125 0
  50 000c 381C     	 mov r0,r7
  51              	.LVL1:
  52 000e 211C     	 mov r1,r4
  53              	.LVL2:
  54 0010 FFF7FEFF 	 bl __aeabi_uidivmod
  55              	.LVL3:
 126:../Libraries/XMCLib/src/xmc_can.c ****   {
 127:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t prescaler;
 128:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t div8 = 0;
 129:../Libraries/XMCLib/src/xmc_can.c **** 
 130:../Libraries/XMCLib/src/xmc_can.c ****     /* Calculate the factor between can frequency and required baudrate, this is equal to (prescale
 131:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t fcan_div = bit_time_config->can_frequency / bit_time_config->baudrate;
 132:../Libraries/XMCLib/src/xmc_can.c **** 
 133:../Libraries/XMCLib/src/xmc_can.c ****     /* start with highest ntq, i.e as much as possible time quanta should be used to construct a bi
 134:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t ntq = XMC_CAN_NODE_MAX_NTQ;
 135:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tseg1 = 0;
 136:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tseg2 = 0;
 137:../Libraries/XMCLib/src/xmc_can.c ****     while (ntq >= XMC_CAN_NODE_MIN_NTQ)
 138:../Libraries/XMCLib/src/xmc_can.c ****     {
 139:../Libraries/XMCLib/src/xmc_can.c ****       /* consider this ntq, only if fcan_div is multiple of ntq */
 140:../Libraries/XMCLib/src/xmc_can.c ****       if ((fcan_div % ntq) == 0)
 141:../Libraries/XMCLib/src/xmc_can.c ****       {
 142:../Libraries/XMCLib/src/xmc_can.c ****     	  div8 = 0;
 143:../Libraries/XMCLib/src/xmc_can.c ****         prescaler = fcan_div / ntq;
 144:../Libraries/XMCLib/src/xmc_can.c ****         if ((prescaler > 0) && (prescaler <= XMC_CAN_NODE_MAX_PRESCALER))
 145:../Libraries/XMCLib/src/xmc_can.c ****         {
 146:../Libraries/XMCLib/src/xmc_can.c ****           if (prescaler >= 64)
 147:../Libraries/XMCLib/src/xmc_can.c ****           {
 148:../Libraries/XMCLib/src/xmc_can.c ****             /* consider prescaler >=64, if it is integer divisible by 8*/
 149:../Libraries/XMCLib/src/xmc_can.c ****             if ((prescaler & 0x7U) != 0)
 150:../Libraries/XMCLib/src/xmc_can.c ****             {
 151:../Libraries/XMCLib/src/xmc_can.c ****               --ntq;
 152:../Libraries/XMCLib/src/xmc_can.c ****               continue;
 153:../Libraries/XMCLib/src/xmc_can.c ****             }
 154:../Libraries/XMCLib/src/xmc_can.c ****             else
 155:../Libraries/XMCLib/src/xmc_can.c ****             {
 156:../Libraries/XMCLib/src/xmc_can.c ****               div8 = 1;
 157:../Libraries/XMCLib/src/xmc_can.c ****             }
 158:../Libraries/XMCLib/src/xmc_can.c ****           }
 159:../Libraries/XMCLib/src/xmc_can.c **** 
 160:../Libraries/XMCLib/src/xmc_can.c ****           tseg1 = ((ntq - 1) * bit_time_config->sample_point) / 10000;
 161:../Libraries/XMCLib/src/xmc_can.c ****           tseg2 = ntq - tseg1 - 1;
 162:../Libraries/XMCLib/src/xmc_can.c **** 
 163:../Libraries/XMCLib/src/xmc_can.c ****           if ((XMC_CAN_NODE_MIN_TSEG1 <= tseg1) && (tseg1 <= XMC_CAN_NODE_MAX_TSEG1) &&
 164:../Libraries/XMCLib/src/xmc_can.c ****         		  (XMC_CAN_NODE_MIN_TSEG2 <= tseg2) && (tseg2 < XMC_CAN_NODE_MAX_TSEG2) && (tseg2 >= bit_
 165:../Libraries/XMCLib/src/xmc_can.c ****           {
 166:../Libraries/XMCLib/src/xmc_can.c ****             break;
 167:../Libraries/XMCLib/src/xmc_can.c ****           }
 168:../Libraries/XMCLib/src/xmc_can.c **** 
 169:../Libraries/XMCLib/src/xmc_can.c **** 
 170:../Libraries/XMCLib/src/xmc_can.c ****         }
 171:../Libraries/XMCLib/src/xmc_can.c ****       }
 172:../Libraries/XMCLib/src/xmc_can.c ****       --ntq;
 173:../Libraries/XMCLib/src/xmc_can.c ****     }
 174:../Libraries/XMCLib/src/xmc_can.c **** 
 175:../Libraries/XMCLib/src/xmc_can.c ****     if (ntq >= XMC_CAN_NODE_MIN_NTQ)
 176:../Libraries/XMCLib/src/xmc_can.c ****     {
 177:../Libraries/XMCLib/src/xmc_can.c **** 
 178:../Libraries/XMCLib/src/xmc_can.c **** 
 179:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_NODE_EnableConfigurationChange(can_node);
 180:../Libraries/XMCLib/src/xmc_can.c **** 
 181:../Libraries/XMCLib/src/xmc_can.c ****       /* Configure bit timing register */
 182:../Libraries/XMCLib/src/xmc_can.c ****       can_node->NBTR = (((tseg2 - 1u) << CAN_NODE_NBTR_TSEG2_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG2_M
 183:../Libraries/XMCLib/src/xmc_can.c ****                         (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NOD
 184:../Libraries/XMCLib/src/xmc_can.c ****                         (((tseg1 - 1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG1_
 185:../Libraries/XMCLib/src/xmc_can.c ****                         ((((prescaler >> (3 * div8)) - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CA
 186:../Libraries/XMCLib/src/xmc_can.c ****                         ((div8 << CAN_NODE_NBTR_DIV8_Pos) & (uint32_t)CAN_NODE_NBTR_DIV8_Msk);
 187:../Libraries/XMCLib/src/xmc_can.c **** 
 188:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_NODE_DisableConfigurationChange(can_node);
 189:../Libraries/XMCLib/src/xmc_can.c **** 
 190:../Libraries/XMCLib/src/xmc_can.c ****       return XMC_CAN_STATUS_SUCCESS;
 191:../Libraries/XMCLib/src/xmc_can.c ****     }
 192:../Libraries/XMCLib/src/xmc_can.c ****   }
 193:../Libraries/XMCLib/src/xmc_can.c **** 
 194:../Libraries/XMCLib/src/xmc_can.c ****   return XMC_CAN_STATUS_ERROR;
  56              	 .loc 1 194 0
  57 0014 0120     	 mov r0,#1
 125:../Libraries/XMCLib/src/xmc_can.c ****   {
  58              	 .loc 1 125 0
  59 0016 0029     	 cmp r1,#0
  60 0018 59D1     	 bne .L9
  61              	.LVL4:
  62              	.LBB31:
 131:../Libraries/XMCLib/src/xmc_can.c **** 
  63              	 .loc 1 131 0
  64 001a 381C     	 mov r0,r7
  65 001c 211C     	 mov r1,r4
  66 001e FFF7FEFF 	 bl __aeabi_uidiv
  67              	.LVL5:
  68 0022 1823     	 mov r3,#24
  69 0024 0390     	 str r0,[sp,#12]
  70              	.LVL6:
  71 0026 0193     	 str r3,[sp,#4]
  72              	.LVL7:
  73              	.L6:
  74 0028 019B     	 ldr r3,[sp,#4]
 140:../Libraries/XMCLib/src/xmc_can.c ****       {
  75              	 .loc 1 140 0
  76 002a 0398     	 ldr r0,[sp,#12]
  77 002c 5C1C     	 add r4,r3,#1
  78              	.LVL8:
  79 002e 211C     	 mov r1,r4
  80 0030 FFF7FEFF 	 bl __aeabi_uidivmod
  81              	.LVL9:
  82 0034 0F1E     	 sub r7,r1,#0
  83 0036 1FD1     	 bne .L3
  84              	.LVL10:
 143:../Libraries/XMCLib/src/xmc_can.c ****         if ((prescaler > 0) && (prescaler <= XMC_CAN_NODE_MAX_PRESCALER))
  85              	 .loc 1 143 0
  86 0038 0398     	 ldr r0,[sp,#12]
  87 003a 211C     	 mov r1,r4
  88 003c FFF7FEFF 	 bl __aeabi_uidiv
  89              	.LVL11:
 144:../Libraries/XMCLib/src/xmc_can.c ****         {
  90              	 .loc 1 144 0
  91 0040 244B     	 ldr r3,.L11
  92 0042 421E     	 sub r2,r0,#1
 143:../Libraries/XMCLib/src/xmc_can.c ****         if ((prescaler > 0) && (prescaler <= XMC_CAN_NODE_MAX_PRESCALER))
  93              	 .loc 1 143 0
  94 0044 0290     	 str r0,[sp,#8]
  95              	.LVL12:
 144:../Libraries/XMCLib/src/xmc_can.c ****         {
  96              	 .loc 1 144 0
  97 0046 9A42     	 cmp r2,r3
  98 0048 16D8     	 bhi .L3
 146:../Libraries/XMCLib/src/xmc_can.c ****           {
  99              	 .loc 1 146 0
 100 004a 031E     	 sub r3,r0,#0
 101 004c 3F2B     	 cmp r3,#63
 102 004e 02D9     	 bls .L4
 149:../Libraries/XMCLib/src/xmc_can.c ****             {
 103              	 .loc 1 149 0
 104 0050 5B07     	 lsl r3,r3,#29
 105 0052 11D1     	 bne .L3
 156:../Libraries/XMCLib/src/xmc_can.c ****             }
 106              	 .loc 1 156 0
 107 0054 0137     	 add r7,r7,#1
 108              	.L4:
 109              	.LVL13:
 160:../Libraries/XMCLib/src/xmc_can.c ****           tseg2 = ntq - tseg1 - 1;
 110              	 .loc 1 160 0
 111 0056 019B     	 ldr r3,[sp,#4]
 112 0058 3089     	 ldrh r0,[r6,#8]
 113              	.LVL14:
 114 005a 1F49     	 ldr r1,.L11+4
 115 005c 5843     	 mul r0,r3
 116 005e FFF7FEFF 	 bl __aeabi_uidiv
 117              	.LVL15:
 163:../Libraries/XMCLib/src/xmc_can.c ****         		  (XMC_CAN_NODE_MIN_TSEG2 <= tseg2) && (tseg2 < XMC_CAN_NODE_MAX_TSEG2) && (tseg2 >= bit_
 118              	 .loc 1 163 0
 119 0062 C31E     	 sub r3,r0,#3
 120 0064 0C2B     	 cmp r3,#12
 121 0066 07D8     	 bhi .L3
 161:../Libraries/XMCLib/src/xmc_can.c **** 
 122              	 .loc 1 161 0 discriminator 1
 123 0068 241A     	 sub r4,r4,r0
 124              	.LVL16:
 163:../Libraries/XMCLib/src/xmc_can.c ****         		  (XMC_CAN_NODE_MIN_TSEG2 <= tseg2) && (tseg2 < XMC_CAN_NODE_MAX_TSEG2) && (tseg2 >= bit_
 125              	 .loc 1 163 0 discriminator 1
 126 006a E31E     	 sub r3,r4,#3
 127 006c 042B     	 cmp r3,#4
 128 006e 03D8     	 bhi .L3
 164:../Libraries/XMCLib/src/xmc_can.c ****           {
 129              	 .loc 1 164 0 discriminator 1
 130 0070 7289     	 ldrh r2,[r6,#10]
 161:../Libraries/XMCLib/src/xmc_can.c **** 
 131              	 .loc 1 161 0 discriminator 1
 132 0072 631E     	 sub r3,r4,#1
 164:../Libraries/XMCLib/src/xmc_can.c ****           {
 133              	 .loc 1 164 0 discriminator 1
 134 0074 9342     	 cmp r3,r2
 135 0076 06D2     	 bcs .L5
 136              	.LVL17:
 137              	.L3:
 138 0078 019B     	 ldr r3,[sp,#4]
 139 007a 013B     	 sub r3,r3,#1
 140 007c 0193     	 str r3,[sp,#4]
 141              	.LVL18:
 137:../Libraries/XMCLib/src/xmc_can.c ****     {
 142              	 .loc 1 137 0
 143 007e 062B     	 cmp r3,#6
 144 0080 D2D1     	 bne .L6
 145              	.LBE31:
 146              	 .loc 1 194 0
 147 0082 0120     	 mov r0,#1
 148              	.LBB38:
 149 0084 23E0     	 b .L9
 150              	.LVL19:
 151              	.L5:
 152              	.LBB32:
 153              	.LBB33:
 154              	 .file 2 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc/xmc_can.h"
   1:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
   2:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @file xmc_can.h
   3:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @date 2019-07-02
   4:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
   5:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @cond
   6:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
   7:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
   9:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * All rights reserved.                        
  11:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *                                             
  12:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * following conditions are met:   
  14:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  15:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * disclaimer.                        
  17:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * 
  18:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * 
  21:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  24:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  32:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
  35:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
  36:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Change History
  37:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * --------------
  38:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
  39:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-02-20:
  40:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *     - Initial <br>
  41:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *     - Documentation improved <br>
  42:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
  43:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-05-20:
  44:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *     - New elements have added in XMC_CAN_MO_t data structure <br>
  45:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  46:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_STATUS_t enum structure has updated. <br>
  47:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
  48:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-06-20:
  49:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *     - New APIs added: XMC_CAN_NODE_ClearStatus(),XMC_CAN_MO_ReceiveData(), XMC_CAN_GATEWAY_InitD
  50:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  51:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *      
  52:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-07-09:
  53:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *     - New API added: XMC_CAN_NODE_Enable. <br>
  54:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
  55:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-01:
  56:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed fCANB clock support <br>
  57:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
  58:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-15:
  59:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added "xmc_can_map.h" include <br>
  60:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
  61:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-07:
  62:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsPanelControlReady()
  63:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * 
  64:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * 2017-11-09:
  65:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_InitEx() and XMC_CAN_NODE_NominalBitTimeConfigureEx()
  66:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *     - Make XMC_CAN_GetBaudrateClockSource(), XMC_CAN_SetBaudrateClockSource() and XMC_CAN_GetBau
  67:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
  68:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * 2019-07-02:
  69:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_GetClockFrequency()
  70:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsListEmpty(), XMC_CAN_GetListBegin(), XMC_CAN_GetListSize(), XMC_CAN_MO_Get
  71:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * 
  72:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Details of use for node configuration related APIs</b><br>
  73:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Please use the XMC_CAN_NODE_SetInitBit() and XMC_CAN_NODE_EnableConfigurationChange() before cal
  74:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * related APIs.
  75:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange() and  XMC_CAN_NODE_ResetInitBit() can be called for dis
  76:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * change and enable the node for communication afterwards.
  77:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Do not use this when configuring the nominal bit time with XMC_CAN_NODE_NominalBitTimeConfigure(
  78:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Enable/Disable node configuration change is taken in account.
  79:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
  80:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Example Usage:</b>
  81:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @code
  82:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * //disabling the Node
  83:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit(CAN_NODE0)
  84:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * //allowing the configuration change
  85:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(CAN_NODE0)
  86:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * //Node configuration
  87:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_FrameCounterConfigure(CAN_NODE0,&can_node_frame_counter);
  88:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack(CAN_NODE0)
  89:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * //disable configuration
  90:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange(CAN_NODE0)
  91:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * //Enabling node for communication
  92:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit(CAN_NODE0)
  93:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @endcode
  94:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
  95:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-20:
  96:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *     - Fixed bug in XMC_CAN_MO_Config() <br>  
  97:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @endcond
  98:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
  99:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 100:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 101:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #ifndef XMC_CAN_H
 102:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_H
 103:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 104:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 105:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * HEADER FILES
 106:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 107:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_common.h"
 108:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 109:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #if defined(CAN)
 110:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 111:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_scu.h"
 112:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_can_map.h"
 113:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #include <string.h>
 114:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 115:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 116:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup XMClib XMC Peripheral Library
 117:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 118:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 119:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 120:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 121:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup CAN
 122:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @brief Controller Area Network Controller (CAN) driver for the XMC microcontroller family.
 123:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 124:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * CAN driver provides transfer of CAN frames in accordance with CAN specificetion V2.0 B (active).
 125:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * can receive and transmit standard frames with 11-bit identifiers as well as extended frames with
 126:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * All CAN nodes share a common set of message objects. Each message object can be individually all
 127:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * CAN nodes. 
 128:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Besides serving as a storage container for incoming and outgoing frames, message objects can be 
 129:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * gateways between 
 130:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * the CAN nodes or to setup a FIFO buffer. The CAN module provides Analyzer mode,Loop-back mode an
 131:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * node analysis.
 132:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * 
 133:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * The driver is divided into five sections:
 134:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN Global features:
 135:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure module frequency using function XMC_CAN_Init().
 136:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Module interrupt using configuration structure XMC_CAN_NODE_INTERRUPT_TRI
 137:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_EventTrigger().
 138:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * 
 139:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_NODE features:
 140:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to set baud rate by configuration structure XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t and
 141:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *    function XMC_CAN_NODE_NominalBitTimeConfigure().
 142:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure loop-back mode using fuction XMC_CAN_NODE_EnableLoopBack().
 143:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure CAN Node analyzer using function XMC_CAN_NODE_SetAnalyzerMode().
 144:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows CAN node events enable/ disable by enum structure XMC_CAN_NODE_EVENT_t and functions X
 145:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *    and XMC_CAN_NODE_DisableEvent().
 146:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides bit timming analysis, configuration structure XMC_CAN_NODE_FRAME_COUNTER_t and funct
 147:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_NODE_FrameCounterConfigure(). 
 148:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 149:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_MO features:
 150:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object initialization by configuration structure XMC_CAN_MO_t and function XMC
 151:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows transfer of message objects using functions XMC_CAN_MO_Transmit() and XMC_CAN_MO_Recei
 152:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Single Data Transfer and Single Transmit Trial using functions 
 153:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_EnableSingleTransmitTrial() and XMC_CAN_MO_EnableSingleTransmitTrial().
 154:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure MO events using function XMC_CAN_MO_EnableEvent(). 
 155:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 156:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_FIFO features:
 157:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object FIFO structure by configuration structure XMC_CAN_FIFO_CONFIG_t and fun
 158:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_TXFIFO_ConfigMOBaseObject() , XMC_CAN_RXFIFO_ConfigMOBaseObject() and XMC_CAN_TXFIFO_Tra
 159:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 160:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_GATEWAY features:
 161:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides Gateway mode, configuration structure XMC_CAN_GATEWAY_CONFIG_t and function XMC_CAN_
 162:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 163:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 164:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 165:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 166:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 167:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * MACROS
 168:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 169:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Pos (18U)   /**< Standard Identifier bitposition */
 170:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 171:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Msk ((0x000007FFUL) << XMC_CAN_MO_MOAR_STDID_Pos) /**< Standard Ident
 172:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 173:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_NODE_NIPR_Msk         (0x7UL) /**< Node event mask */
 174:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 175:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_MO_MOIPR_Msk          (0x7U)  /**< Message Object event mask */
 176:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 177:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 178:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * ENUMS
 179:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 180:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 181:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  Defines the status of CAN, to verify the CAN related API calls. Use type \a XMC_CAN_STATUS_t fo
 182:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** */
 183:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_STATUS
 184:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 185:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_SUCCESS,           /**< Driver accepted application request*/
 186:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_ERROR,             /**< Returned when unknown error occurred */
 187:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_BUSY,              /**< Driver is busy and can not handle request*/
 188:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_NOT_ACCEPTABLE, /**< Message object type not allowed*/
 189:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_DISABLED       /**< Returned if Message object is disabled */
 190:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_STATUS_t;
 191:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 192:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 193:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN module Panel Commands . Use type \a XMC_CAN_PANCMD_t for this enum.
 194:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** */
 195:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_PANCMD
 196:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 197:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_INIT_LIST = 1U,              /**< Command to initialize a list */
 198:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_ALLOCATE = 2U,        /**< Command to activate static allocation */
 199:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_ALLOCATE = 3U,       /**< Command to activate dynamic allocation */
 200:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 201:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEFORE = 4U,   /**< Remove a message object from the list and insert
 202:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEFORE = 5U,  /**< Command to activate dynamic allocation */
 203:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEHIND = 6U,   /**< Command to activate dynamic allocation */
 204:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEHIND = 7U   /**< Command to activate dynamic allocation */
 205:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_PANCMD_t;
 206:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 207:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 208:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** * Defines loop Back Mode, to enable/disable an in-system test of the MultiCAN module .
 209:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** * Use type \a XMC_CAN_LOOKBACKMODE_t for this enum.
 210:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** */
 211:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_LOOKBACKMODE
 212:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 213:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_ENABLED,   /**< Each CAN node can be connected to the internal CAN bus  */
 214:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_DISABLED   /**< Each CAN node can be connected to the external CAN bus */
 215:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_LOOKBACKMODE_t;
 216:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 217:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 218:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Message Object direction. Use type \a XMC_CAN_MO_TYPE_t for this enum.
 219:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 220:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_TYPE
 221:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 222:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_RECMSGOBJ,   /**< Receive Message Object selected */
 223:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_TRANSMSGOBJ  /**< Transmit Message Object selected */
 224:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_TYPE_t;
 225:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 226:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 227:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Data frame types. Use type \a XMC_CAN_FRAME_TYPE_t for this enum.
 228:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 229:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_TYPE
 230:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 231:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_STANDARD_11BITS, /**< Standard type identifier*/
 232:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_EXTENDED_29BITS  /**< Extended type identifier*/
 233:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_TYPE_t;
 234:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 235:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 236:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 237:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines arbitration mode for transmit acceptance filtering. Use type \a XMC_CAN_ARBITRATION_MODE
 238:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 239:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_ARBITRATION_MODE
 240:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 241:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_1 = 1U,   /**< Transmit acceptance based in the order(p
 242:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_IDE_DIR_BASED_PRIO_2 = 2U, /**< Transmit acceptance filtering is based o
 243:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_3 = 3U    /**< Transmit acceptance based in the order *
 244:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_ARBITRATION_MODE_t;
 245:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 246:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 247:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the operation mode of the frame counter. Use type \a XMC_CAN_FRAME_COUNT_MODE_t for this
 248:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 249:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_COUNT_MODE
 250:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 251:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE = 0U,       /**< Frame Count Mode */
 252:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_TIME_STAMP = 1U,  /**< The frame counter is incremented with the beginni
 253:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_BIT_TIMING = 2U   /**< Used for baud rate detection and analysis of the 
 254:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_COUNT_MODE_t;
 255:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 256:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 257:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Divider Modes. Use type \a XMC_CAN_DM_t for this enum.
 258:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 259:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_DM
 260:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 261:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_NORMAL = 1U,      /**< Normal divider mode */
 262:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_FRACTIONAL = 2U,  /**< Fractional divider mode */
 263:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_OFF = 3U          /**< Divider Mode in off-state*/
 264:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_DM_t;
 265:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 266:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 267:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object set status. Use type \a XMC_CAN_MO_SET_STATUS_t for th
 268:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 269:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_SET_STATUS
 270:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 271:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_PENDING = CAN_MO_MOCTR_SETRXPND_Msk,     /**< Set receive pending */
 272:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_PENDING = CAN_MO_MOCTR_SETTXPND_Msk,     /**< Set transmit pending */
 273:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_UPDATING = CAN_MO_MOCTR_SETRXUPD_Msk,    /**< Set receive updating */
 274:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_NEW_DATA = CAN_MO_MOCTR_SETNEWDAT_Msk,      /**< Set new data */
 275:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_SETMSGLST_Msk,  /**< Set message lost */
 276:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_SETMSGVAL_Msk, /**< Set message valid */
 277:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_SETRTSEL_Msk, /**< Set transmit/receive selec
 278:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_ENABLE = CAN_MO_MOCTR_SETRXEN_Msk,       /**< Set receive enable */
 279:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_REQUEST = CAN_MO_MOCTR_SETTXRQ_Msk,      /**< Set transmit request */
 280:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_SETTXEN0_Msk,     /**< Set transmit enable 0 */
 281:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_SETTXEN1_Msk,     /**< Set transmit enable 1 */
 282:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_SETDIR_Msk /**< Set message direction */
 283:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_SET_STATUS_t;
 284:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 285:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 286:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object reset status. Use type \a XMC_CAN_MO_RESET_STATUS_t fo
 287:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 288:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_RESET_STATUS
 289:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 290:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_PENDING = CAN_MO_MOCTR_RESRXPND_Msk,     /**< Reset receive pending */
 291:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_PENDING = CAN_MO_MOCTR_RESTXPND_Msk,     /**< Reset transmit pending *
 292:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_UPDATING = CAN_MO_MOCTR_RESRXUPD_Msk,    /**< Reset receive updating *
 293:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_NEW_DATA = CAN_MO_MOCTR_RESNEWDAT_Msk,      /**< Reset new data */
 294:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_RESMSGLST_Msk,  /**< Reset message lost */
 295:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_RESMSGVAL_Msk, /**< Reset message valid */
 296:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_RESRTSEL_Msk, /**< Reset transmit/receive s
 297:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_ENABLE = CAN_MO_MOCTR_RESRXEN_Msk,       /**< Reset receive enable */
 298:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_REQUEST = CAN_MO_MOCTR_RESTXRQ_Msk,      /**< Reset transmit request *
 299:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_RESTXEN0_Msk,     /**< Reset transmit enable 0 
 300:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_RESTXEN1_Msk,     /**< Reset transmit enable 1 
 301:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_RESDIR_Msk /**< Reset message direction 
 302:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_RESET_STATUS_t;
 303:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 304:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 305:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object status. Use type \a XMC_CAN_MO_STATUS_t for this enum.
 306:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 307:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_STATUS
 308:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 309:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_PENDING = CAN_MO_MOSTAT_RXPND_Msk,                   /**< Defines message ha
 310:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_PENDING = CAN_MO_MOSTAT_TXPND_Msk,                   /**< Defines message ha
 311:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_UPDATING = CAN_MO_MOSTAT_RXUPD_Msk,                  /**< Defines Message id
 312:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_NEW_DATA = CAN_MO_MOSTAT_NEWDAT_Msk,                    /**< Defines no update 
 313:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_LOST = CAN_MO_MOSTAT_MSGLST_Msk,                /**< CAN message is los
 314:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_VALID = CAN_MO_MOSTAT_MSGVAL_Msk,               /**< Message valid */
 315:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_TX_SELECTED = CAN_MO_MOSTAT_RTSEL_Msk,               /**< Transmit/Receive s
 316:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_ENABLE = CAN_MO_MOSTAT_RXEN_Msk,                     /**< Receive enable */
 317:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_REQUEST = CAN_MO_MOSTAT_TXRQ_Msk,                    /**< Transmit request *
 318:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE0 = CAN_MO_MOSTAT_TXEN0_Msk,                   /**< Transmit enable 0 
 319:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE1 = CAN_MO_MOSTAT_TXEN1_Msk,                   /**< Transmit enable 1 
 320:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_DIRECTION = CAN_MO_MOSTAT_DIR_Msk,              /**< Message direction 
 321:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_LIST = CAN_MO_MOSTAT_LIST_Msk,                          /**< List allocation */
 322:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_PREVIOUS_MO = CAN_MO_MOSTAT_PPREV_Msk,     /**< Pointer to previous 
 323:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_NEXT_MO = (int32_t)CAN_MO_MOSTAT_PNEXT_Msk   /**< Pointer to next Me
 324:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_STATUS_t;
 325:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 326:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 327:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node status. Use type \a XMC_CAN_NODE_STATUS_t for this enum.
 328:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 329:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_STATUS
 330:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 331:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LAST_ERROR_CODE = CAN_NODE_NSR_LEC_Msk,       /**< Last Error Code */
 332:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_TX_OK = CAN_NODE_NSR_TXOK_Msk,                /**< Message transmitted succes
 333:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_RX_OK = CAN_NODE_NSR_RXOK_Msk,                /**< Message received successfu
 334:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ALERT_WARNING = CAN_NODE_NSR_ALERT_Msk,       /**< Alert warning */
 335:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ERROR_WARNING_STATUS = CAN_NODE_NSR_EWRN_Msk, /**< Error warning status */
 336:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_BUS_OFF= CAN_NODE_NSR_BOFF_Msk,       /**< Bus-off status */
 337:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_LENGTH_ERROR = CAN_NODE_NSR_LLE_Msk,     /**< List length error */
 338:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_OBJECT_ERROR = CAN_NODE_NSR_LOE_Msk,     /**< List object error */
 339:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 340:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_SUSPENDED_ACK = CAN_NODE_NSR_SUSACK_Msk       /**< Suspend Acknowledge */
 341:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #endif
 342:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_STATUS_t;
 343:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 344:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 345:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node control like initialization, node disable and analyzer mode .
 346:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_NODE_CONTROL_t for this enum.
 347:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 348:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_CONTROL
 349:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 350:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_NODE_INIT = CAN_NODE_NCR_INIT_Msk,            /**< Node initialization */
 351:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_TX_INT_ENABLE = CAN_NODE_NCR_TRIE_Msk,        /**< Transfer event enable */
 352:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_LEC_INT_ENABLE = CAN_NODE_NCR_LECIE_Msk,      /**< LEC Indicated Error Event
 353:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_ALERT_INT_ENABLE = CAN_NODE_NCR_ALIE_Msk,     /**< Alert Event Enable */
 354:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_DISABLE = CAN_NODE_NCR_CANDIS_Msk,        /**< CAN disable */
 355:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CONF_CHANGE_ENABLE= CAN_NODE_NCR_CCE_Msk,     /**< Configuration change enab
 356:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_ANALYZER_NODEDE = CAN_NODE_NCR_CALM_Msk,  /**< CAN Analyzer mode */
 357:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 358:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_SUSPENDED_ENABLE = CAN_NODE_NCR_SUSEN_Msk     /**< Suspend Enable */
 359:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #endif
 360:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_CONTROL_t;
 361:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 362:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 363:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node events. Use type \a XMC_CAN_NODE_EVENT_t for this enum.
 364:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 365:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_EVENT
 366:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 367:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_TX_INT = CAN_NODE_NCR_TRIE_Msk,   /**< Node Transfer OK Event */
 368:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_ALERT = CAN_NODE_NCR_ALIE_Msk,    /**< Node Alert Event */
 369:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_LEC = CAN_NODE_NCR_LECIE_Msk,     /**< Last Error code Event */
 370:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_CFCIE = CAN_NODE_NFCR_CFCIE_Msk   /**< CAN Frame Count Event  */
 371:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_EVENT_t;
 372:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 373:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 374:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN node pointer events position. Use type \a XMC_CAN_NODE_POINTER_EVENT_
 375:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 376:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_POINTER_EVENT
 377:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 378:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_ALERT = CAN_NODE_NIPR_ALINP_Pos,           /**< Node Alert Event node 
 379:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_LEC = CAN_NODE_NIPR_LECINP_Pos,            /**< Last Error code Event 
 380:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK = CAN_NODE_NIPR_TRINP_Pos,     /**< Transmit Event node po
 381:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER = CAN_NODE_NIPR_CFCINP_Pos   /**< CAN Frame Count Event 
 382:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_POINTER_EVENT_t;
 383:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 384:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 385:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object event node pointer position. Use type \a XMC_CAN_MO_POINTER_EVENT_t f
 386:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 387:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_POINTER_EVENT
 388:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 389:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_TRANSMIT = CAN_MO_MOIPR_TXINP_Pos,     /**< Transmit Event node pointer 
 390:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_RECEIVE = CAN_MO_MOIPR_RXINP_Pos       /**< Receive Event node pointer *
 391:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_POINTER_EVENT_t;
 392:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 393:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 394:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object event type. Use type \a XMC_CAN_MO_EVENT_t for this en
 395:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 396:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_EVENT
 397:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 398:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_TRANSMIT = CAN_MO_MOFCR_TXIE_Msk,  /**< Message Object transmit event */
 399:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_RECEIVE = CAN_MO_MOFCR_RXIE_Msk,   /**< Message Object receive event */
 400:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_OVERFLOW = CAN_MO_MOFCR_OVIE_Msk,  /**< Message Object overflow event */
 401:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_EVENT_t;
 402:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 403:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 404:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the possible receive inputs. Use type \a XMC_CAN_NODE_RECEIVE_INPUT_t for this enum.
 405:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 406:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_RECEIVE_INPUT
 407:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 408:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCA,   /**< CAN Receive Input A */
 409:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCB,   /**< CAN Receive Input B */
 410:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCC,   /**< CAN Receive Input C */
 411:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCD,   /**< CAN Receive Input D */
 412:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCE,   /**< CAN Receive Input E */
 413:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCF,   /**< CAN Receive Input F */
 414:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCG,   /**< CAN Receive Input G */
 415:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCH    /**< CAN Receive Input H */
 416:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_RECEIVE_INPUT_t;
 417:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 418:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 419:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error transfer direction. Use type \a XMC_CAN_NODE_LAST_ERROR_DIR_t for this enum.
 420:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 421:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_DIR
 422:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 423:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_RECEPCION,    /**< The last error occurred while the CAN n
 424:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_TRANSMISSION  /**< The last error occurred while the CAN n
 425:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_DIR_t;
 426:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 427:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 428:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 429:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error increment. Use type \a XMC_CAN_NODE_LAST_ERROR_INC_t for this enum.
 430:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 431:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_INC
 432:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 433:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_1, /**< The last error led to an error counter increment of 1. */
 434:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_8  /**< The last error led to an error counter increment of 8. */
 435:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_INC_t;
 436:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 437:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 438:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines interrupt request on interrupt output line INT_O[n]. Use type \a XMC_CAN_NODE_INTERRUPT_
 439:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 440:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_INTERRUPT_TRIGGER
 441:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 442:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_0 = 0x1U,
 443:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_1 = 0x2U,
 444:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_2 = 0x4U,
 445:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_3 = 0x8U,
 446:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_4 = 0x16U,
 447:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_5 = 0x32U,
 448:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_6 = 0x64U,
 449:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_7 = 0x128U,
 450:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_INTERRUPT_TRIGGER_t;
 451:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 452:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 453:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Clock source used for the MCAN baudrate generator 
 454:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 455:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_CANCLKSRC
 456:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {  
 457:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 458:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #if (UC_FAMILY == XMC4)
 459:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 460:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #else
 461:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_MCLK = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock. 
 462:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #endif
 463:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FOHP = 0x2U, /**< Use high performance oscillator (fOHP) as MCAN baudrate gener
 464:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #else
 465:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 466:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #endif
 467:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_CANCLKSRC_t;
 468:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 469:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 470:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * DATA STRUCTURES
 471:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 472:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 473:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN node Nominal Bit Time. Use type \a XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t for this s
 474:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** */
 475:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG
 476:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 477:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t can_frequency;       /**< Frequency of the CAN module(fCAN). \a can_frequency shall be r
 478:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t baudrate;          /**< Specifies the node baud rate. Unit: baud \a baudrate shall be ra
 479:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sample_point;      /**< Sample point is used to compensate mismatch between transmitter 
 480:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                    the synchronization segment. Sample point. Range = [0, 10000] with respect [0%, 
 481:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sjw;               /**< (Re) Synchronization Jump Width. Range:0-3 */
 482:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t;
 483:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 484:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 485:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines base, top and bottom of CAN Message Object FIFO Structure. Use type \a XMC_CAN_FIFO_CONF
 486:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * A FIFO consists of one base object and n slave objects.
 487:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 488:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_FIFO_CONFIG
 489:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 490:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_bottom;    /**< points to the first element(slave object) in a FIFO structure.Range 
 491:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_top;     /**< points to the last element(slave object) in a FIFO structure. Range :0
 492:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_base;    /**< points to the actual target object(Base object) within a FIFO/Gateway 
 493:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FIFO_CONFIG_t;
 494:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 495:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 496:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Gateway FIFO structure and provides additional options for gateway destination objec
 497:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_GATEWAY_CONFIG_t for this structure.
 498:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 499:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_GATEWAY_CONFIG
 500:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 501:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_bottom;       /**< points to the first element(gateway destination object) in a F
 502:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_top;        /**< points to the last element(gateway destination object) in a FIFO
 503:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_base;       /**< points to the actual target object within a FIFO/Gateway structu
 504:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_frame_send;   /**< TXRQ updated in the gateway destination object after the int
 505:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object */
 506:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_identifier_copy;   /**< The identifier of the gateway source object (after storing t
 507:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object. */
 508:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 509:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_length_code_copy; /**< Data length code of the gateway source object (after sto
 510:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                                            gateway destination object */
 511:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_copy;  /**< Data fields in registers MODATALn and MODATAHn of the gateway sourc
 512:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                                 are copied to the gateway destination.*/
 513:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 514:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_GATEWAY_CONFIG_t;
 515:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 516:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 517:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN Global Initialization structure
 518:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** */
 519:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_GLOBAL_TypeDef XMC_CAN_t;
 520:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 521:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard start*/
 522:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 523:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   #pragma push
 524:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   #pragma anon_unions
 525:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 526:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   #pragma warning 586
 527:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #endif
 528:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 529:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 530:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines frame counter configuration. Use type \a XMC_CAN_NODE_FRAME_COUNTER_t for this structure
 531:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * It provides configuration of frame counter that counts transmitted/received CAN frames or obtain
 532:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * when a frame has been started to transmit or be received by the CAN node.
 533:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** */
 534:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_FRAME_COUNTER
 535:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 536:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 537:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   union{
 538:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****     struct{
 539:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 16;
 540:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_selection:3;   /**<   Defines function of the frame counter  */
 541:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_mode:2;      /**<   Determines the operation mode of the frame count
 542:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 11;
 543:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****     };
 544:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t nfcr;
 545:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 546:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   };
 547:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_FRAME_COUNTER_t;
 548:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 549:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 550:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *Defines Node Runtime structure.
 551:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** */
 552:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_NODE_TypeDef  XMC_CAN_NODE_t;            /**<  pointer to the Node CAN register */
 553:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 554:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 555:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object runtime elements. Use type \a XMC_CAN_MO_t for this structure.
 556:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 557:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_MO
 558:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 559:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   CAN_MO_TypeDef *can_mo_ptr;                     /**< Pointer to the Message Object CAN register *
 560:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   union{
 561:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****     struct{
 562:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_identifier:29;            /**< standard (11 bit)/Extended (29 bit) message ident
 563:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mode:1;                /**< Standard/Extended identifier support */
 564:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_priority:2;               /**< Arbitration Mode/Priority */
 565:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****     };
 566:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_ar;
 567:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   };
 568:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   union{
 569:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****     struct{
 570:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mask:29;              /**< CAN Identifier of Message Object */
 571:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_ide_mask:1;              /**< Identifier Extension Bit of Message Object */
 572:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****     };
 573:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_amr;
 574:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   };
 575:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t can_data_length;                        /**< Message data length, Range:0-8 */
 576:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 577:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   union{
 578:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 579:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****       uint8_t can_data_byte[8];                 /**< Each position of the array represents a data b
 580:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****       uint16_t can_data_word[4];                /**< Each position of the array represents a 16 bit
 581:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_data[2];                     /**< can_data[0] lower 4 bytes of the data. can_dat
 582:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                               of the data */
 583:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****       uint64_t can_data_long;                   /** Data of the Message Object*/
 584:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****       };
 585:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 586:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_t can_mo_type;                  /**<  Message Type */
 587:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 588:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_t;
 589:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard end*/
 590:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 591:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   #pragma pop
 592:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 593:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   #pragma warning restore
 594:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #endif
 595:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 596:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * API Prototypes
 597:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 598:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #ifdef __cplusplus
 599:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** extern "C" {
 600:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #endif
 601:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 602:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 603:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 604:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 605:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 606:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 607:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 608:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 609:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 610:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  Disables CAN module. In disabled state, no registers of CAN module can be read or written excep
 611:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 612:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 613:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_Enable()\n\n\n
 614:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 615:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 616:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 617:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Disable(XMC_CAN_t *const obj);
 618:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 619:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 620:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 621:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 622:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *         for details.
 623:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 624:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 625:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 626:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 627:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  Enables CAN module and initializes all CAN registers to reset values. It is required to re-conf
 628:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  before any data transfer. It configures CAN_CLC.DISR bit.
 629:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 630:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 631:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_Disable()\n\n\n
 632:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 633:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 634:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 635:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Enable(XMC_CAN_t *const obj);
 636:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 637:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 638:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 639:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 640:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 641:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 642:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param node_num  CAN node number,Range : 0-2
 643:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param mo_num  CAN Message Object number,Range : 0-63
 644:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 645:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 646:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 647:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 648:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  Allocates Message Object from free list to node list. Each \a node_num is linked to one unique 
 649:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  A CAN node performs message transfer only with the \a mo_num message objects that are allocated
 650:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  It configures PANCTR register.
 651:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 652:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 653:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 654:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 655:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 656:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 657:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 658:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 659:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 660:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 661:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 662:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 663:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 664:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return Ready status of list controller
 665:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 666:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 667:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns ready status of the list controller
 668:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 669:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 670:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_PanelControl()
 671:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 672:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 673:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE bool XMC_CAN_IsPanelControlReady(XMC_CAN_t *const obj)
 674:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 675:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   return (bool)((obj->PANCTR & (CAN_PANCTR_BUSY_Msk | CAN_PANCTR_RBUSY_Msk)) == 0);
 676:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
 677:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 678:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 679:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 680:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 681:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 682:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 683:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param pancmd panal command selection. Refer @ref XMC_CAN_PANCMD_t for valid values.
 684:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg1   Panel Argument 1,Range : 0-2
 685:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg2   Panel Argument 2, Range : 0-63
 686:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 687:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 688:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 689:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 690:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures the panel command and panel arguments. A panel operation consists of a command code 
 691:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  panel arguments (PANAR1, PANAR2). Commands that have a return value deliver it to the PANAR1 bi
 692:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  return an error flag deliver it to bit 31 of the Panel Control Register, this means bit 7 of PA
 693:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  panel argument PANAR1,\a arg2 represents panel argument PANAR2 and \a pancmd represents command
 694:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  register.
 695:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 696:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 697:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 698:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 699:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 700:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 701:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_PanelControl(XMC_CAN_t *const obj,
 702:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_PANCMD_t pancmd,
 703:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                                       const uint8_t arg1,
 704:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                                       const uint8_t arg2)
 705:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 706:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 707:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****             (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 708:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****             (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
 709:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
 710:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 711:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 712:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 713:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 714:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 715:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 716:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 717:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_requestr  Interrupt trigger number selection. Refer @ref XMC_CAN_NODE_INTERRUPT_T
 718:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *               Multiple interrupt trigger events can be ORed.
 719:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 720:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 721:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 722:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 723:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures multiple interrupt requests with a single write operation. \a service_requestr repre
 724:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  request or multiple.It configures MITR register.
 725:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 726:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 727:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 728:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 729:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 730:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 731:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_EventTrigger(XMC_CAN_t *const obj,const XMC_CAN_NODE_INTERRUPT_TRIGGER
 732:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 733:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   obj->MITR = ((uint32_t)service_requestr << CAN_MITR_IT_Pos) & (uint32_t)CAN_MITR_IT_Msk;
 734:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
 735:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 736:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 737:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 738:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 739:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 740:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 741:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 742:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source
 743:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN). 
 744:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *        The can_frequency shall be an integer divisor of the CAN clock source frequency (fPERI/fM
 745:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *        it should be selected such that if fulfills the minimum operating frequency specified in 
 746:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *        In addition the can_frequency shall be an integer multiple of the baudrate.
 747:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *        Max. value: Max. clock source frequency, i.e. if using fOHP and using a XTAL of 20MHz the
 748:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 749:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return Actual frequency
 750:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 751:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 752:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_Init() configures clock rate of the module timer clock fCAN. 
 753:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that only the normal divider is used to avoid jitter.
 754:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * In addition the actual achievable frequency is returned.
 755:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 756:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 757:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Altering CAN module \a can_frequency shall affects baud rate, call XMC_CAN_NODE_NominalBitTimeCo
 758:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 759:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 760:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 761:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx()\n\n\n
 762:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 763:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 764:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_InitEx(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 765:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 766:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 767:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 768:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 769:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 770:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return Baudrate generator clock source
 771:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 772:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 773:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Returns CAN baudrate generator clock source
 774:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 775:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj);
 776:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 777:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 778:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 779:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 780:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 781:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 782:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * 
 783:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 784:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Sets CAN baudrate generator clock source
 785:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 786:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj,const XMC_CAN_CANCLKSRC_t source);
 787:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 788:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 789:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 790:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 791:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 792:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return baudrate generator input clock frequency 
 793:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 794:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 795:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN baudrate generator input clock frequency
 796:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 797:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj);
 798:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 799:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 800:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 801:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 802:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 803:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return fCAN clock frequency 
 804:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 805:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 806:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN base clock frequency
 807:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 808:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 809:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetClockFrequency(XMC_CAN_t *const obj);
 810:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 811:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 812:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 813:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 814:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 815:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 816:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 817:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source.
 818:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN). Max. value: Max. clock source frequency, i.e. i
 819:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use clksrc parameter only for XMC1400 series and XMC47/4800 series projects, otherwise omi
 820:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 821:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 822:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 823:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 824:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Configures clock rate of the module timer clock fCAN. Altering CAN module \a can_frequency shall
 825:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_NominalBitTimeConfigure() or XMC_CAN_NODE_NominalBitTimeConfigureEx() to confi
 826:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 827:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 828:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 829:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 830:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 831:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx(), XMC_CAN_InitEx
 832:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 833:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 834:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 835:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #else
 836:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency);
 837:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** #endif
 838:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 839:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 840:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 841:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
 842:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 843:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 844:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 845:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 846:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Initializes CAN message object. Initialization includes configuring Message Object identifier ty
 847:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * identifier value, Message Object type, and transfer requests. It configures FDR register.
 848:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 849:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 850:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * None
 851:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 852:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 853:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo);
 854:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 855:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /* NODE APIs */
 856:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 857:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 858:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 859:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node      Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers.
 860:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param ptr_event     CAN_NODE interrupt pointer position. Refer @ref XMC_CAN_NODE_POINTER_EVENT_
 861:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request Interrupt service request number. Range : 0-7
 862:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 863:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 864:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 865:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 866:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures node interrupt pointer \a service_request for CAN Node events \a ptr_event. It confi
 867:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 868:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 869:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * None
 870:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 871:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 872:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 873:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetEventNodePointer(XMC_CAN_NODE_t *const can_node,
 874:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_NODE_POINTER_EVENT_t ptr_event,
 875:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                                           const uint32_t service_request)
 876:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 877:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NIPR = (uint32_t)((can_node->NIPR) & ~(uint32_t)(CAN_NODE_NIPR_Msk << (uint32_t)ptr_eve
 878:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
 879:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 880:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 881:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 882:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 883:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 884:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 885:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 886:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 887:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 888:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 889:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 890:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 891:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 892:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 893:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * None
 894:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 895:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 896:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_NominalBitTimeConfigure(XMC_CAN_NODE_t *const can_node,
 897:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_b
 898:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 899:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 900:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 901:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 902:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 903:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 904:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return Status on the sucess setting the desired bitrate XMC_CAN_STATUS_t
 905:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 906:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 907:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_NODE_NominalBitTimeConfigure() configures the CAN node baudrate. 
 908:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that allows bitrates below 100kpbs.
 909:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @note Consider using the new API for new projects. XMC_CAN_NODE_NominalBitTimeConfigure() is kep
 910:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 911:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 912:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 913:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 914:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 915:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_InitEx()
 916:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 917:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 918:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx(XMC_CAN_NODE_t *const can_node,
 919:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                                                const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const 
 920:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 921:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 922:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 923:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param input    CAN receive input selection. Refer @ref XMC_CAN_NODE_RECEIVE_INPUT_t for details
 924:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 925:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 926:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 927:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 928:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \a input specifies CAN input receive pin. This API Configures NPCRx register,it is required to c
 929:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(), before configuring NPCRx register, call XMC_CAN_NODE_D
 930:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * API after configuring NPCRx register. CAN input receive pins which falls under analog port pins 
 931:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_GPIO_EnableDigitalInput(),to enable digital pad.
 932:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 933:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Related APIs:</b><BR>
 934:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * None
 935:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 936:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 937:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 938:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 939:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 940:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 941:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveInput(XMC_CAN_NODE_t *const can_node,
 942:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                                               const XMC_CAN_NODE_RECEIVE_INPUT_t input)
 943:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 944:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR = ((can_node->NPCR) & ~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk)) |
 945:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)input << CAN_NODE_NPCR_RXSEL_Pos) & (uint32_t)CAN_NODE_NPCR_RXSEL_Ms
 946:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
 947:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 948:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 949:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 950:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node  Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_
 951:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 952:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 953:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 954:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 955:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Enable Node \a can_node in Loop-Back Mode. A Node is connected to an internal (virtual) loop-bac
 956:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * nodes which are in Loop- Back Mode are connected to this virtual CAN bus so that they can commun
 957:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * other internally. The external transmit line is forced recessive in Loop-Back Mode. This API Con
 958:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 959:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration configuration.
 960:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 961:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 962:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_DisableLoopBack().
 963:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 964:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
 965:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  NPCRx can be written only if bit NCRx.CCE is set.
 966:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 967:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 968:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 969:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableLoopBack(XMC_CAN_NODE_t *const can_node)
 970:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 971:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR |= (uint32_t)CAN_NODE_NPCR_LBM_Msk;
 972:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
 973:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 974:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 975:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
 976:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 977:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 978:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 979:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 980:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 981:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Disable Node Loop-Back Mode, disables internal (virtual) loop-back CAN bus. This API Configures 
 982:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 983:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration.
 984:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 985:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 986:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack()
 987:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 988:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 989:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 990:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 991:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
 992:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
 993:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 994:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableLoopBack(XMC_CAN_NODE_t *const can_node)
 995:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
 996:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR &= ~(uint32_t)CAN_NODE_NPCR_LBM_Msk;
 997:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
 998:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
 999:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1000:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
1001:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1002:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1003:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1004:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1005:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1006:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1007:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1008:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1009:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  Enable CAN Node events. It configures NFCR register.
1010:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1011:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1012:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableEvent()
1013:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1014:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
1015:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1016:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1017:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1018:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1019:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
1020:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1021:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1022:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1023:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1024:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1025:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1026:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1027:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1028:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  Disable CAN Node events. It configures NFCR register.
1029:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1030:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1031:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableEvent()
1032:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1033:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
1034:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1035:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1036:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1037:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1038:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
1039:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1040:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1041:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1042:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_DIR_t Last error transfer direction. Refer @ref XMC_CAN_NODE_LAS
1043:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1044:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1045:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Returns NODE Last Error occurred during Transmit/receive direction. It returns value of NFCR reg
1046:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1047:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1048:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferInc()\n\n\n
1049:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1050:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
1051:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1052:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_DIR_t XMC_CAN_NODE_GetLastErrTransferDir(XMC_CAN_NODE_t *co
1053:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
1054:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_DIR_t)(((node->NECNT) & CAN_NODE_NECNT_LETD_Msk) >> CAN_NODE_NECN
1055:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
1056:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1057:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1058:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
1059:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1060:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1061:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1062:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_INC_t Last error transfer increment. Refer @ref XMC_CAN_NODE_LAS
1063:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1064:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1065:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns NODE Last Error Transfer Increment. It returns value of NFCR register.
1066:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1067:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1068:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferDir()\n\n\n
1069:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1070:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
1071:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1072:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_INC_t XMC_CAN_NODE_GetLastErrTransferInc(XMC_CAN_NODE_t *co
1073:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
1074:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_INC_t)(((node->NECNT) & CAN_NODE_NECNT_LEINC_Msk)>> CAN_NODE_NECN
1075:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
1076:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1077:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1078:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
1079:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1080:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1081:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param  error_warning_level  Error Warning level value. Range :0-255.
1082:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1083:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1084:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1085:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1086:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Configures error warning level in order to set the corresponding error warning bit EWRN. It conf
1087:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * into NECNT register. Before this configuration call XMC_CAN_NODE_EnableConfigurationChange() API
1088:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1089:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1090:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetErrorWarningLevel()\n\n\n
1091:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1092:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1093:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1094:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1095:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
1096:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1097:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetErrorWarningLevel(XMC_CAN_NODE_t *const can_node, uint8_t erro
1098:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
1099:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_EWRNLVL_Msk)) |
1100:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)error_warning_level << CAN_NODE_NECNT_EWRNLVL_Pos) & (uint32_t)CAN_
1101:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
1102:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1103:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1104:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
1105:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1106:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1107:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_tec  transmit error counter value. Range :0-255
1108:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1109:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1110:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1111:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1112:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Transmit error counter. It configures \a can_tec into NECNT register. Before this co
1113:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_EnableConfigurationChange() API.
1114:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1115:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1116:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetTransmitErrorCounter()\n\n\n
1117:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1118:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
1119:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1120:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1121:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
1122:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1123:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1124:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t c
1125:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
1126:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_TEC_Msk)) |
1127:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_tec << CAN_NODE_NECNT_TEC_Pos) & (uint32_t)CAN_NODE_NECNT_TEC_M
1128:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
1129:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1130:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1131:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
1132:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1133:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1134:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_rec  receive error counter value. Range :0-255
1135:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1136:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1137:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1138:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1139:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Receive Error Counter. It configures \a can_rec into NECNT register. Before this conf
1140:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange() API.
1141:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1142:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1143:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetReceiveErrorCounter()\n\n\n
1144:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1145:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1146:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1147:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1148:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
1149:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1150:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t ca
1151:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
1152:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_REC_Msk)) |
1153:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)can_rec << CAN_NODE_NECNT_REC_Pos) & (uint32_t)CAN_NODE_NECNT_REC_Ms
1154:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
1155:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1156:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1157:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
1158:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1159:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1160:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1161:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t Error Warning Level. Range :0 - 255
1162:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1163:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1164:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns error warning level. This determines the threshold value (warning level, default 96) to
1165:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  to set the corresponding error warning bit EWRN. It reads NECNT register.
1166:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1167:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1168:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetErrorWarningLevel()\n\n\n
1169:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1170:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
1171:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1172:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1173:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetErrorWarningLevel(XMC_CAN_NODE_t *const can_node)
1174:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
1175:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_EWRNLVL_Msk) >> CAN_NODE_NECNT_EWR
1176:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
1177:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1178:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1179:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
1180:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1181:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1182:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1183:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t transmit error counter value. Range :0 - 255
1184:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1185:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1186:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Transmit Error Counter value. If the Bitstream Processor detects an error while a trans
1187:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  running, the Transmit Error Counter is incremented by 8. An increment of 1 is used when the err
1188:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  reported by an external CAN node via an Error Frame generation. It reads NECNT register.
1189:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1190:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1191:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetTransmitErrorCounter()
1192:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1193:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1194:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1195:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1196:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
1197:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1198:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node)
1199:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
1200:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_TEC_Msk) >> CAN_NODE_NECNT_TEC_Po
1201:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
1202:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1203:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1204:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
1205:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1206:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1207:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1208:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t  receive error counter value.
1209:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1210:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1211:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Receive Error Counter value. It reads NECNT register.
1212:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1213:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1214:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetReceiveErrorCounter()
1215:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1216:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
1217:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1218:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node)
1219:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
1220:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_REC_Msk) >> CAN_NODE_NECNT_REC_Po
1221:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
1222:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1223:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1224:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
1225:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1226:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1227:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1228:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current status of the node.
1229:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1230:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1231:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Returns errors status as well as successfully transferred CAN frames status.
1232:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1233:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1234:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_ClearStatus()
1235:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1236:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
1237:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1238:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_NODE_GetStatus(XMC_CAN_NODE_t *const can_node)
1239:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
1240:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_node->NSR));
1241:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
1242:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1243:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
1244:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1245:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1246:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_status Status to clear.Refer @ref XMC_CAN_NODE_STATUS_t for valid values.
1247:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1248:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1249:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1250:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1251:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Clear errors status as well as successfully transferred CAN frames status.
1252:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1253:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1254:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetStatus()
1255:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1256:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
1257:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1258:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ClearStatus(XMC_CAN_NODE_t *const can_node,XMC_CAN_NODE_STATUS_t 
1259:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
1260:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****    can_node->NSR &= ~(uint32_t)can_node_status;
1261:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
1262:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1263:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1264:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
1265:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1266:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1267:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1268:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1269:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1270:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1271:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * Allow to change the configuration of the CAN node, like bit timing, CAN bus transmit/receive por
1272:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * counters read. It configures NCRx.CCE bit.
1273:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1274:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1275:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange()
1276:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1277:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
1278:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1279:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1280:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
1281:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CCE_Msk;
 155              	 .loc 2 1281 0
 156 0086 4023     	 mov r3,#64
 157 0088 2968     	 ldr r1,[r5]
 158              	.LBE33:
 159              	.LBE32:
 182:../Libraries/XMCLib/src/xmc_can.c ****                         (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NOD
 160              	 .loc 1 182 0
 161 008a 023C     	 sub r4,r4,#2
 162              	.LBB35:
 163              	.LBB34:
 164              	 .loc 2 1281 0
 165 008c 1943     	 orr r1,r3
 166 008e 2960     	 str r1,[r5]
 167              	.LBE34:
 168              	.LBE35:
 182:../Libraries/XMCLib/src/xmc_can.c ****                         (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NOD
 169              	 .loc 1 182 0
 170 0090 E021     	 mov r1,#224
 171 0092 2403     	 lsl r4,r4,#12
 172 0094 C901     	 lsl r1,r1,#7
 173 0096 0C40     	 and r4,r1
 183:../Libraries/XMCLib/src/xmc_can.c ****                         (((tseg1 - 1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG1_
 174              	 .loc 1 183 0
 175 0098 FF21     	 mov r1,#255
 176 009a 013A     	 sub r2,r2,#1
 177 009c 9201     	 lsl r2,r2,#6
 178 009e 0A40     	 and r2,r1
 179 00a0 1443     	 orr r4,r2
 186:../Libraries/XMCLib/src/xmc_can.c **** 
 180              	 .loc 1 186 0
 181 00a2 FA03     	 lsl r2,r7,#15
 182 00a4 1443     	 orr r4,r2
 184:../Libraries/XMCLib/src/xmc_can.c ****                         ((((prescaler >> (3 * div8)) - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CA
 183              	 .loc 1 184 0
 184 00a6 F022     	 mov r2,#240
 185 00a8 0138     	 sub r0,r0,#1
 186              	.LVL20:
 187 00aa 1201     	 lsl r2,r2,#4
 188 00ac 0002     	 lsl r0,r0,#8
 189              	.LVL21:
 190 00ae 1040     	 and r0,r2
 185:../Libraries/XMCLib/src/xmc_can.c ****                         ((div8 << CAN_NODE_NBTR_DIV8_Pos) & (uint32_t)CAN_NODE_NBTR_DIV8_Msk);
 191              	 .loc 1 185 0
 192 00b0 0322     	 mov r2,#3
 193 00b2 5743     	 mul r7,r2
 194              	.LVL22:
 195 00b4 029A     	 ldr r2,[sp,#8]
 196 00b6 C039     	 sub r1,r1,#192
 197 00b8 FA40     	 lsr r2,r2,r7
 198 00ba 171C     	 mov r7,r2
 199 00bc 013F     	 sub r7,r7,#1
 200 00be 2043     	 orr r0,r4
 201 00c0 0F40     	 and r7,r1
 202 00c2 0743     	 orr r7,r0
 190:../Libraries/XMCLib/src/xmc_can.c ****     }
 203              	 .loc 1 190 0
 204 00c4 0020     	 mov r0,#0
 182:../Libraries/XMCLib/src/xmc_can.c ****                         (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NOD
 205              	 .loc 1 182 0
 206 00c6 2F61     	 str r7,[r5,#16]
 207              	.LVL23:
 208              	.LBB36:
 209              	.LBB37:
1282:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
1283:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1284:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1285:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** /**
1286:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1287:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1288:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1289:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1290:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1291:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1292:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *  Forbid to change the configuration of the CAN node. It configures NCRx.CCE bit.
1293:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1294:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1295:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange()
1296:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  *
1297:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****  */
1298:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** 
1299:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1300:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** {
1301:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CCE_Msk;
 210              	 .loc 2 1301 0
 211 00c8 2A68     	 ldr r2,[r5]
 212 00ca 9A43     	 bic r2,r3
 213 00cc 2A60     	 str r2,[r5]
 214              	.LVL24:
 215              	.L9:
 216              	.LBE37:
 217              	.LBE36:
 218              	.LBE38:
 195:../Libraries/XMCLib/src/xmc_can.c **** }
 219              	 .loc 1 195 0
 220 00ce 05B0     	 add sp,sp,#20
 221              	 
 222              	.LVL25:
 223              	.LVL26:
 224 00d0 F0BD     	 pop {r4,r5,r6,r7,pc}
 225              	.L12:
 226 00d2 C046     	 .align 2
 227              	.L11:
 228 00d4 FF010000 	 .word 511
 229 00d8 10270000 	 .word 10000
 230              	 .cfi_endproc
 231              	.LFE127:
 233              	 .section .text.XMC_CAN_NODE_NominalBitTimeConfigure,"ax",%progbits
 234              	 .align 1
 235              	 .global XMC_CAN_NODE_NominalBitTimeConfigure
 236              	 .code 16
 237              	 .thumb_func
 239              	XMC_CAN_NODE_NominalBitTimeConfigure:
 240              	.LFB128:
 196:../Libraries/XMCLib/src/xmc_can.c **** 
 197:../Libraries/XMCLib/src/xmc_can.c **** /* Baudrate Configuration */
 198:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_NominalBitTimeConfigure (XMC_CAN_NODE_t *const can_node,
 199:../Libraries/XMCLib/src/xmc_can.c ****                                            const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_
 200:../Libraries/XMCLib/src/xmc_can.c **** {
 241              	 .loc 1 200 0
 242              	 .cfi_startproc
 243              	.LVL27:
 244 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 245              	.LCFI2:
 246              	 .cfi_def_cfa_offset 20
 247              	 .cfi_offset 4,-20
 248              	 .cfi_offset 5,-16
 249              	 .cfi_offset 6,-12
 250              	 .cfi_offset 7,-8
 251              	 .cfi_offset 14,-4
 252              	.LBB39:
 201:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_brp = 12U ;
 202:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_tseg1 = 12U;
 203:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_brp = 0U;
 204:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg1 = 1U;
 205:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg2 = 0U;
 206:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tbaud = 0U;
 207:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_error = 10000U;
 208:../Libraries/XMCLib/src/xmc_can.c **** 
 209:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: rate not supported", (can_bit_time->baudrate
 210:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->baudrate >= 100000U));
 211:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
 212:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency <= 120000000U);
 213:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
 214:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency > 5000000U);
 215:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: sample point not supported",
 216:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->sample_point < 10000U) && ((can_bit_time->sample_point > 0U)));
 217:../Libraries/XMCLib/src/xmc_can.c ****        
 218:../Libraries/XMCLib/src/xmc_can.c ****   /*
 219:../Libraries/XMCLib/src/xmc_can.c ****    * Bit timing & sampling
 220:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = (BRP+1)/Fcan if DIV8 = 0
 221:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = 8*(BRP+1)/Fcan if DIV8 = 1
 222:../Libraries/XMCLib/src/xmc_can.c ****    * TSync = 1.Tq
 223:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 = (TSEG1+1)*Tq                >= 3Tq
 224:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 = (TSEG2+1)*Tq                >= 2Tq
 225:../Libraries/XMCLib/src/xmc_can.c ****    * Bit Time = TSync + TSeg1 + TSeg2    >= 8Tq
 226:../Libraries/XMCLib/src/xmc_can.c ****    *
 227:../Libraries/XMCLib/src/xmc_can.c ****    * Resynchronization:
 228:../Libraries/XMCLib/src/xmc_can.c ****    *
 229:../Libraries/XMCLib/src/xmc_can.c ****    * Tsjw = (SJW + 1)*Tq
 230:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 >= Tsjw + Tprop
 231:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 >= Tsjw
 232:../Libraries/XMCLib/src/xmc_can.c ****    */
 233:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best baudrate */
 234:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_brp = 1U; temp_brp <= 64U; temp_brp++)
 235:../Libraries/XMCLib/src/xmc_can.c ****   {
 236:../Libraries/XMCLib/src/xmc_can.c **** 
 237:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t f_quanta = (uint32_t)((can_bit_time->can_frequency * 10U) / temp_brp);
 253              	 .loc 1 237 0
 254 0002 0B68     	 ldr r3,[r1]
 255              	.LBE39:
 200:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_brp = 12U ;
 256              	 .loc 1 200 0
 257 0004 87B0     	 sub sp,sp,#28
 258              	.LCFI3:
 259              	 .cfi_def_cfa_offset 48
 260              	.LBB40:
 261              	 .loc 1 237 0
 262 0006 0093     	 str r3,[sp]
 263 0008 0A23     	 mov r3,#10
 264 000a 009A     	 ldr r2,[sp]
 265              	.LBE40:
 200:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_brp = 12U ;
 266              	 .loc 1 200 0
 267 000c 071C     	 mov r7,r0
 268              	.LBB41:
 269              	 .loc 1 237 0
 270 000e 5A43     	 mul r2,r3
 271              	.LBE41:
 207:../Libraries/XMCLib/src/xmc_can.c **** 
 272              	 .loc 1 207 0
 273 0010 424B     	 ldr r3,.L29
 234:../Libraries/XMCLib/src/xmc_can.c ****   {
 274              	 .loc 1 234 0
 275 0012 0126     	 mov r6,#1
 207:../Libraries/XMCLib/src/xmc_can.c **** 
 276              	 .loc 1 207 0
 277 0014 0493     	 str r3,[sp,#16]
 206:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_error = 10000U;
 278              	 .loc 1 206 0
 279 0016 0023     	 mov r3,#0
 280              	.LBB42:
 238:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_tbaud = (uint32_t)(f_quanta / (can_bit_time->baudrate));
 281              	 .loc 1 238 0
 282 0018 4D68     	 ldr r5,[r1,#4]
 283              	.LBE42:
 200:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_brp = 12U ;
 284              	 .loc 1 200 0
 285 001a 0191     	 str r1,[sp,#4]
 286              	.LBB43:
 237:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_tbaud = (uint32_t)(f_quanta / (can_bit_time->baudrate));
 287              	 .loc 1 237 0
 288 001c 0592     	 str r2,[sp,#20]
 289              	.LBE43:
 206:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_error = 10000U;
 290              	 .loc 1 206 0
 291 001e 0093     	 str r3,[sp]
 203:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg1 = 1U;
 292              	 .loc 1 203 0
 293 0020 0293     	 str r3,[sp,#8]
 294              	.LVL28:
 295              	.L22:
 296              	.LBB44:
 237:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_tbaud = (uint32_t)(f_quanta / (can_bit_time->baudrate));
 297              	 .loc 1 237 0
 298 0022 311C     	 mov r1,r6
 299 0024 0598     	 ldr r0,[sp,#20]
 300 0026 FFF7FEFF 	 bl __aeabi_uidiv
 301              	.LVL29:
 302              	 .loc 1 238 0
 303 002a 291C     	 mov r1,r5
 237:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_tbaud = (uint32_t)(f_quanta / (can_bit_time->baudrate));
 304              	 .loc 1 237 0
 305 002c 0390     	 str r0,[sp,#12]
 306              	.LVL30:
 307              	 .loc 1 238 0
 308 002e FFF7FEFF 	 bl __aeabi_uidiv
 309              	.LVL31:
 239:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_baudrate;
 240:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t error;
 241:../Libraries/XMCLib/src/xmc_can.c **** 
 242:../Libraries/XMCLib/src/xmc_can.c ****   if((temp_tbaud % 10U) > 5U)
 310              	 .loc 1 242 0
 311 0032 0A21     	 mov r1,#10
 238:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_baudrate;
 312              	 .loc 1 238 0
 313 0034 041C     	 mov r4,r0
 314              	.LVL32:
 315              	 .loc 1 242 0
 316 0036 FFF7FEFF 	 bl __aeabi_uidivmod
 317              	.LVL33:
 243:../Libraries/XMCLib/src/xmc_can.c ****   {
 244:../Libraries/XMCLib/src/xmc_can.c ****   temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 318              	 .loc 1 244 0
 319 003a 201C     	 mov r0,r4
 242:../Libraries/XMCLib/src/xmc_can.c ****   {
 320              	 .loc 1 242 0
 321 003c 0529     	 cmp r1,#5
 322 003e 04D9     	 bls .L14
 323              	.LVL34:
 324              	 .loc 1 244 0
 325 0040 0A21     	 mov r1,#10
 326 0042 FFF7FEFF 	 bl __aeabi_uidiv
 327              	.LVL35:
 245:../Libraries/XMCLib/src/xmc_can.c ****   temp_tbaud++;
 328              	 .loc 1 245 0
 329 0046 441C     	 add r4,r0,#1
 330              	.LVL36:
 331 0048 04E0     	 b .L15
 332              	.LVL37:
 333              	.L14:
 246:../Libraries/XMCLib/src/xmc_can.c ****   }
 247:../Libraries/XMCLib/src/xmc_can.c ****   else
 248:../Libraries/XMCLib/src/xmc_can.c ****   {
 249:../Libraries/XMCLib/src/xmc_can.c ****   temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 334              	 .loc 1 249 0
 335 004a 0A21     	 mov r1,#10
 336 004c FFF7FEFF 	 bl __aeabi_uidiv
 337              	.LVL38:
 338 0050 041E     	 sub r4,r0,#0
 339              	.LVL39:
 250:../Libraries/XMCLib/src/xmc_can.c ****   }
 251:../Libraries/XMCLib/src/xmc_can.c **** 
 252:../Libraries/XMCLib/src/xmc_can.c ****   if(temp_tbaud > 0U)
 340              	 .loc 1 252 0
 341 0052 05D0     	 beq .L16
 342              	.LVL40:
 343              	.L15:
 253:../Libraries/XMCLib/src/xmc_can.c ****   {
 254:../Libraries/XMCLib/src/xmc_can.c ****     temp_baudrate = (uint32_t) (f_quanta / (temp_tbaud * 10U));
 344              	 .loc 1 254 0
 345 0054 0A21     	 mov r1,#10
 346 0056 0398     	 ldr r0,[sp,#12]
 347 0058 6143     	 mul r1,r4
 348 005a FFF7FEFF 	 bl __aeabi_uidiv
 349              	.LVL41:
 350 005e 04E0     	 b .L17
 351              	.LVL42:
 352              	.L16:
 255:../Libraries/XMCLib/src/xmc_can.c ****   }
 256:../Libraries/XMCLib/src/xmc_can.c ****   else
 257:../Libraries/XMCLib/src/xmc_can.c ****   {
 258:../Libraries/XMCLib/src/xmc_can.c ****     temp_baudrate = f_quanta / 10U;
 353              	 .loc 1 258 0
 354 0060 0398     	 ldr r0,[sp,#12]
 355              	.LVL43:
 356 0062 0A21     	 mov r1,#10
 357 0064 FFF7FEFF 	 bl __aeabi_uidiv
 358              	.LVL44:
 259:../Libraries/XMCLib/src/xmc_can.c ****   temp_tbaud = 1;
 359              	 .loc 1 259 0
 360 0068 0124     	 mov r4,#1
 361              	.LVL45:
 362              	.L17:
 260:../Libraries/XMCLib/src/xmc_can.c ****   }
 261:../Libraries/XMCLib/src/xmc_can.c **** 
 262:../Libraries/XMCLib/src/xmc_can.c ****   if(temp_baudrate >= can_bit_time->baudrate)
 263:../Libraries/XMCLib/src/xmc_can.c ****   {
 264:../Libraries/XMCLib/src/xmc_can.c ****   error = temp_baudrate - can_bit_time->baudrate;
 265:../Libraries/XMCLib/src/xmc_can.c ****   }
 266:../Libraries/XMCLib/src/xmc_can.c ****   else
 267:../Libraries/XMCLib/src/xmc_can.c ****   {
 268:../Libraries/XMCLib/src/xmc_can.c ****   error = can_bit_time->baudrate - temp_baudrate;
 363              	 .loc 1 268 0
 364 006a 2B1A     	 sub r3,r5,r0
 262:../Libraries/XMCLib/src/xmc_can.c ****   {
 365              	 .loc 1 262 0
 366 006c A842     	 cmp r0,r5
 367 006e 00D3     	 bcc .L19
 264:../Libraries/XMCLib/src/xmc_can.c ****   }
 368              	 .loc 1 264 0
 369 0070 431B     	 sub r3,r0,r5
 370              	.LVL46:
 371              	.L19:
 269:../Libraries/XMCLib/src/xmc_can.c ****   }
 270:../Libraries/XMCLib/src/xmc_can.c **** 
 271:../Libraries/XMCLib/src/xmc_can.c ****   if ((temp_tbaud <= 20U) && (best_error > error))
 372              	 .loc 1 271 0
 373 0072 142C     	 cmp r4,#20
 374 0074 08D8     	 bhi .L20
 375              	 .loc 1 271 0 is_stmt 0 discriminator 1
 376 0076 049A     	 ldr r2,[sp,#16]
 377 0078 9A42     	 cmp r2,r3
 378 007a 05D9     	 bls .L20
 379              	.LVL47:
 272:../Libraries/XMCLib/src/xmc_can.c ****   {
 273:../Libraries/XMCLib/src/xmc_can.c ****     best_brp = temp_brp;
 274:../Libraries/XMCLib/src/xmc_can.c ****     best_tbaud = temp_tbaud;
 275:../Libraries/XMCLib/src/xmc_can.c ****     best_error = (error);
 276:../Libraries/XMCLib/src/xmc_can.c **** 
 277:../Libraries/XMCLib/src/xmc_can.c ****     if (error < 1000U)
 380              	 .loc 1 277 0 is_stmt 1
 381 007c 284A     	 ldr r2,.L29+4
 382 007e 9342     	 cmp r3,r2
 383 0080 06D9     	 bls .L27
 384 0082 0493     	 str r3,[sp,#16]
 385 0084 0094     	 str r4,[sp]
 386 0086 0296     	 str r6,[sp,#8]
 387              	.LVL48:
 388              	.L20:
 389              	.LBE44:
 234:../Libraries/XMCLib/src/xmc_can.c ****   {
 390              	 .loc 1 234 0 discriminator 2
 391 0088 0136     	 add r6,r6,#1
 392              	.LVL49:
 393 008a 412E     	 cmp r6,#65
 394 008c C9D1     	 bne .L22
 395 008e 01E0     	 b .L21
 396              	.LVL50:
 397              	.L27:
 398 0090 0094     	 str r4,[sp]
 399 0092 0296     	 str r6,[sp,#8]
 400              	.LVL51:
 401              	.L21:
 204:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg2 = 0U;
 402              	 .loc 1 204 0
 403 0094 0124     	 mov r4,#1
 404              	.LVL52:
 278:../Libraries/XMCLib/src/xmc_can.c ****     {
 279:../Libraries/XMCLib/src/xmc_can.c ****       break;
 280:../Libraries/XMCLib/src/xmc_can.c ****     }
 281:../Libraries/XMCLib/src/xmc_can.c ****    }
 282:../Libraries/XMCLib/src/xmc_can.c ****   }
 283:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best sample point */
 284:../Libraries/XMCLib/src/xmc_can.c ****   best_error = 10000U;
 285:../Libraries/XMCLib/src/xmc_can.c **** 
 286:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_tseg1 = 64U; temp_tseg1 >= 3U; temp_tseg1--)
 405              	 .loc 1 286 0
 406 0096 4025     	 mov r5,#64
 407              	.LBB45:
 287:../Libraries/XMCLib/src/xmc_can.c ****   {
 288:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tempSamplePoint = ((temp_tseg1 + 1U) * 10000U) / best_tbaud;
 289:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t error;
 290:../Libraries/XMCLib/src/xmc_can.c ****   if (tempSamplePoint >= can_bit_time->sample_point)
 408              	 .loc 1 290 0
 409 0098 019B     	 ldr r3,[sp,#4]
 410              	.LVL53:
 411              	.LBE45:
 284:../Libraries/XMCLib/src/xmc_can.c **** 
 412              	 .loc 1 284 0
 413 009a 204E     	 ldr r6,.L29
 414              	.LVL54:
 415              	.LBB46:
 416              	 .loc 1 290 0
 417 009c 1B89     	 ldrh r3,[r3,#8]
 418 009e 0393     	 str r3,[sp,#12]
 419              	.LVL55:
 420              	.L26:
 421 00a0 1E4B     	 ldr r3,.L29
 422 00a2 681C     	 add r0,r5,#1
 423 00a4 5843     	 mul r0,r3
 288:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t error;
 424              	 .loc 1 288 0
 425 00a6 0099     	 ldr r1,[sp]
 426 00a8 FFF7FEFF 	 bl __aeabi_uidiv
 427              	.LVL56:
 428              	 .loc 1 290 0
 429 00ac 039B     	 ldr r3,[sp,#12]
 430 00ae 9842     	 cmp r0,r3
 431 00b0 05D3     	 bcc .L23
 291:../Libraries/XMCLib/src/xmc_can.c ****   {
 292:../Libraries/XMCLib/src/xmc_can.c ****       error = tempSamplePoint  - can_bit_time->sample_point;
 432              	 .loc 1 292 0
 433 00b2 C01A     	 sub r0,r0,r3
 434              	.LVL57:
 293:../Libraries/XMCLib/src/xmc_can.c ****   }
 294:../Libraries/XMCLib/src/xmc_can.c ****   else
 295:../Libraries/XMCLib/src/xmc_can.c ****   {
 296:../Libraries/XMCLib/src/xmc_can.c ****     error = can_bit_time->sample_point  - tempSamplePoint;
 297:../Libraries/XMCLib/src/xmc_can.c ****   }
 298:../Libraries/XMCLib/src/xmc_can.c ****     if (best_error > error)
 435              	 .loc 1 298 0
 436 00b4 8642     	 cmp r6,r0
 437 00b6 0AD9     	 bls .L24
 438 00b8 061C     	 mov r6,r0
 439              	.LVL58:
 440 00ba 2C1C     	 mov r4,r5
 441              	.LVL59:
 442 00bc 07E0     	 b .L24
 443              	.LVL60:
 444              	.L23:
 296:../Libraries/XMCLib/src/xmc_can.c ****   }
 445              	 .loc 1 296 0
 446 00be 039A     	 ldr r2,[sp,#12]
 447 00c0 231C     	 mov r3,r4
 448 00c2 101A     	 sub r0,r2,r0
 449              	.LVL61:
 450 00c4 2C1C     	 mov r4,r5
 451              	.LVL62:
 452              	 .loc 1 298 0
 453 00c6 8642     	 cmp r6,r0
 454 00c8 04D8     	 bhi .L25
 455              	.LVL63:
 456 00ca 1C1C     	 mov r4,r3
 457              	.LVL64:
 458 00cc 02E0     	 b .L25
 459              	.LVL65:
 460              	.L24:
 461              	.LBE46:
 286:../Libraries/XMCLib/src/xmc_can.c ****   {
 462              	 .loc 1 286 0 discriminator 2
 463 00ce 013D     	 sub r5,r5,#1
 464              	.LVL66:
 465 00d0 022D     	 cmp r5,#2
 466 00d2 E5D1     	 bne .L26
 467              	.LVL67:
 468              	.L25:
 469              	.LBB47:
 470              	.LBB48:
1281:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
 471              	 .loc 2 1281 0
 472 00d4 4022     	 mov r2,#64
 473              	.LBE48:
 474              	.LBE47:
 299:../Libraries/XMCLib/src/xmc_can.c ****     {
 300:../Libraries/XMCLib/src/xmc_can.c ****       best_tseg1 = temp_tseg1;
 301:../Libraries/XMCLib/src/xmc_can.c ****       best_error = error;
 302:../Libraries/XMCLib/src/xmc_can.c ****     }
 303:../Libraries/XMCLib/src/xmc_can.c ****     if (tempSamplePoint < (can_bit_time->sample_point))
 304:../Libraries/XMCLib/src/xmc_can.c ****     {
 305:../Libraries/XMCLib/src/xmc_can.c ****       break;
 306:../Libraries/XMCLib/src/xmc_can.c ****     }
 307:../Libraries/XMCLib/src/xmc_can.c ****   }
 308:../Libraries/XMCLib/src/xmc_can.c **** 
 309:../Libraries/XMCLib/src/xmc_can.c ****   best_tseg2 = best_tbaud - best_tseg1 - 1U;
 310:../Libraries/XMCLib/src/xmc_can.c **** 
 311:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_EnableConfigurationChange(can_node);
 312:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure bit timing register */
 313:../Libraries/XMCLib/src/xmc_can.c ****   can_node->NBTR = (((uint32_t)(best_tseg2 - 1u) << CAN_NODE_NBTR_TSEG2_Pos) & (uint32_t)CAN_NODE_N
 314:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 315:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_tseg1-1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBT
 316:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_brp - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN_NODE_NBTR_
 475              	 .loc 1 316 0
 476 00d6 3F21     	 mov r1,#63
 314:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_tseg1-1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBT
 477              	 .loc 1 314 0
 478 00d8 FF20     	 mov r0,#255
 479              	.LBB50:
 480              	.LBB49:
1281:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
 481              	 .loc 2 1281 0
 482 00da 3B68     	 ldr r3,[r7]
 483 00dc 1343     	 orr r3,r2
 484 00de 3B60     	 str r3,[r7]
 485              	.LBE49:
 486              	.LBE50:
 487              	 .loc 1 316 0
 488 00e0 029B     	 ldr r3,[sp,#8]
 489 00e2 013B     	 sub r3,r3,#1
 490 00e4 0B40     	 and r3,r1
 314:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_tseg1-1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBT
 491              	 .loc 1 314 0
 492 00e6 0199     	 ldr r1,[sp,#4]
 493 00e8 4989     	 ldrh r1,[r1,#10]
 494 00ea 0139     	 sub r1,r1,#1
 495 00ec 8901     	 lsl r1,r1,#6
 496 00ee 0140     	 and r1,r0
 315:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_brp - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN_NODE_NBTR_
 497              	 .loc 1 315 0
 498 00f0 F020     	 mov r0,#240
 499 00f2 0B43     	 orr r3,r1
 500 00f4 611E     	 sub r1,r4,#1
 501 00f6 0001     	 lsl r0,r0,#4
 502 00f8 0902     	 lsl r1,r1,#8
 503 00fa 0140     	 and r1,r0
 504 00fc 1943     	 orr r1,r3
 505 00fe 009B     	 ldr r3,[sp]
 506 0100 023B     	 sub r3,r3,#2
 313:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 507              	 .loc 1 313 0
 508 0102 1C1B     	 sub r4,r3,r4
 509              	.LVL68:
 510 0104 E023     	 mov r3,#224
 511 0106 2403     	 lsl r4,r4,#12
 512 0108 DB01     	 lsl r3,r3,#7
 513 010a 1C40     	 and r4,r3
 514              	 .loc 1 316 0
 515 010c 0C43     	 orr r4,r1
 313:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 516              	 .loc 1 313 0
 517 010e 3C61     	 str r4,[r7,#16]
 518              	.LVL69:
 519              	.LBB51:
 520              	.LBB52:
 521              	 .loc 2 1301 0
 522 0110 3B68     	 ldr r3,[r7]
 523 0112 9343     	 bic r3,r2
 524 0114 3B60     	 str r3,[r7]
 525              	.LBE52:
 526              	.LBE51:
 317:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)0U << CAN_NODE_NBTR_DIV8_Pos) & (uint32_t)CAN_NODE_NBTR_DIV8_Msk);
 318:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_DisableConfigurationChange(can_node);
 319:../Libraries/XMCLib/src/xmc_can.c **** }
 527              	 .loc 1 319 0
 528 0116 07B0     	 add sp,sp,#28
 529              	.LVL70:
 530              	 
 531              	.LVL71:
 532              	.LVL72:
 533              	.LVL73:
 534 0118 F0BD     	 pop {r4,r5,r6,r7,pc}
 535              	.L30:
 536 011a C046     	 .align 2
 537              	.L29:
 538 011c 10270000 	 .word 10000
 539 0120 E7030000 	 .word 999
 540              	 .cfi_endproc
 541              	.LFE128:
 543              	 .section .text.XMC_CAN_AllocateMOtoNodeList,"ax",%progbits
 544              	 .align 1
 545              	 .global XMC_CAN_AllocateMOtoNodeList
 546              	 .code 16
 547              	 .thumb_func
 549              	XMC_CAN_AllocateMOtoNodeList:
 550              	.LFB129:
 320:../Libraries/XMCLib/src/xmc_can.c **** /* Function to allocate message object from free list to node list */
 321:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 322:../Libraries/XMCLib/src/xmc_can.c **** {
 551              	 .loc 1 322 0
 552              	 .cfi_startproc
 553              	.LVL74:
 554 0000 30B5     	 push {r4,r5,lr}
 555              	.LCFI4:
 556              	 .cfi_def_cfa_offset 12
 557              	 .cfi_offset 4,-12
 558              	 .cfi_offset 5,-8
 559              	 .cfi_offset 14,-4
 560              	.L32:
 561              	.LVL75:
 562              	.LBB57:
 563              	.LBB58:
 675:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
 564              	 .loc 2 675 0 discriminator 1
 565 0002 E223     	 mov r3,#226
 566              	.LBE58:
 567              	.LBE57:
 323:../Libraries/XMCLib/src/xmc_can.c ****   /* wait while panel operation is in progress. */
 324:../Libraries/XMCLib/src/xmc_can.c ****   while (XMC_CAN_IsPanelControlReady(obj) == false)
 568              	 .loc 1 324 0 discriminator 1
 569 0004 C024     	 mov r4,#192
 570              	.LBB60:
 571              	.LBB59:
 675:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
 572              	 .loc 2 675 0 discriminator 1
 573 0006 5B00     	 lsl r3,r3,#1
 574 0008 C558     	 ldr r5,[r0,r3]
 575              	.LBE59:
 576              	.LBE60:
 577              	 .loc 1 324 0 discriminator 1
 578 000a A400     	 lsl r4,r4,#2
 579 000c 2542     	 tst r5,r4
 580 000e F8D1     	 bne .L32
 581              	.LVL76:
 582              	.LBB61:
 583              	.LBB62:
 706:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****             (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 584              	 .loc 2 706 0
 585 0010 0224     	 mov r4,#2
 707:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****             (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
 586              	 .loc 2 707 0
 587 0012 1204     	 lsl r2,r2,#16
 588              	.LVL77:
 589              	.LBE62:
 590              	.LBE61:
 325:../Libraries/XMCLib/src/xmc_can.c ****   {
 326:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 327:../Libraries/XMCLib/src/xmc_can.c ****   };
 328:../Libraries/XMCLib/src/xmc_can.c **** 
 329:../Libraries/XMCLib/src/xmc_can.c ****   /* Panel Command for  allocation of MO to node list */
 330:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_PanelControl(obj, XMC_CAN_PANCMD_STATIC_ALLOCATE,mo_num,(node_num + 1U));
 591              	 .loc 1 330 0
 592 0014 0131     	 add r1,r1,#1
 593              	.LVL78:
 594              	.LBB64:
 595              	.LBB63:
 706:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****             (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 596              	 .loc 2 706 0
 597 0016 2243     	 orr r2,r4
 708:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h **** }
 598              	 .loc 2 708 0
 599 0018 0906     	 lsl r1,r1,#24
 707:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****             (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
 600              	 .loc 2 707 0
 601 001a 1143     	 orr r1,r2
 706:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_can.h ****             (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 602              	 .loc 2 706 0
 603 001c C150     	 str r1,[r0,r3]
 604              	.LBE63:
 605              	.LBE64:
 331:../Libraries/XMCLib/src/xmc_can.c **** }
 606              	 .loc 1 331 0
 607              	 
 608 001e 30BD     	 pop {r4,r5,pc}
 609              	 .cfi_endproc
 610              	.LFE129:
 612              	 .section .text.XMC_CAN_Disable,"ax",%progbits
 613              	 .align 1
 614              	 .global XMC_CAN_Disable
 615              	 .code 16
 616              	 .thumb_func
 618              	XMC_CAN_Disable:
 619              	.LFB130:
 332:../Libraries/XMCLib/src/xmc_can.c **** 
 333:../Libraries/XMCLib/src/xmc_can.c **** /* Disable XMC_CAN Peripheral */
 334:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Disable(XMC_CAN_t *const obj)
 335:../Libraries/XMCLib/src/xmc_can.c **** {
 620              	 .loc 1 335 0
 621              	 .cfi_startproc
 622              	.LVL79:
 623 0000 08B5     	 push {r3,lr}
 624              	.LCFI5:
 625              	 .cfi_def_cfa_offset 8
 626              	 .cfi_offset 3,-8
 627              	 .cfi_offset 14,-4
 336:../Libraries/XMCLib/src/xmc_can.c ****   /* Disable CAN Module */
 337:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC = CAN_CLC_DISR_Msk;
 628              	 .loc 1 337 0
 629 0002 0123     	 mov r3,#1
 630 0004 0360     	 str r3,[r0]
 338:../Libraries/XMCLib/src/xmc_can.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 339:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 340:../Libraries/XMCLib/src/xmc_can.c **** #endif
 341:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CLOCK_GATING_SUPPORTED)
 342:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MCAN);
 631              	 .loc 1 342 0
 632 0006 8020     	 mov r0,#128
 633              	.LVL80:
 634 0008 8003     	 lsl r0,r0,#14
 635 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 636              	.LVL81:
 343:../Libraries/XMCLib/src/xmc_can.c **** #endif
 344:../Libraries/XMCLib/src/xmc_can.c **** }
 637              	 .loc 1 344 0
 638              	 
 639 000e 08BD     	 pop {r3,pc}
 640              	 .cfi_endproc
 641              	.LFE130:
 643              	 .section .text.XMC_CAN_Enable,"ax",%progbits
 644              	 .align 1
 645              	 .global XMC_CAN_Enable
 646              	 .code 16
 647              	 .thumb_func
 649              	XMC_CAN_Enable:
 650              	.LFB131:
 345:../Libraries/XMCLib/src/xmc_can.c **** 
 346:../Libraries/XMCLib/src/xmc_can.c **** /* Enable XMC_CAN Peripheral */
 347:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Enable(XMC_CAN_t *const obj)
 348:../Libraries/XMCLib/src/xmc_can.c **** {
 651              	 .loc 1 348 0
 652              	 .cfi_startproc
 653              	.LVL82:
 654 0000 10B5     	 push {r4,lr}
 655              	.LCFI6:
 656              	 .cfi_def_cfa_offset 8
 657              	 .cfi_offset 4,-8
 658              	 .cfi_offset 14,-4
 659              	 .loc 1 348 0
 660 0002 041C     	 mov r4,r0
 349:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CLOCK_GATING_SUPPORTED)
 350:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MCAN);
 661              	 .loc 1 350 0
 662 0004 8020     	 mov r0,#128
 663              	.LVL83:
 664 0006 8003     	 lsl r0,r0,#14
 665 0008 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 666              	.LVL84:
 351:../Libraries/XMCLib/src/xmc_can.c **** #endif
 352:../Libraries/XMCLib/src/xmc_can.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 353:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 354:../Libraries/XMCLib/src/xmc_can.c **** #endif
 355:../Libraries/XMCLib/src/xmc_can.c ****   /* Enable CAN Module */
 356:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC &= ~(uint32_t)CAN_CLC_DISR_Msk;
 667              	 .loc 1 356 0
 668 000c 0122     	 mov r2,#1
 669 000e 2368     	 ldr r3,[r4]
 670 0010 9343     	 bic r3,r2
 671 0012 2360     	 str r3,[r4]
 672              	.L35:
 357:../Libraries/XMCLib/src/xmc_can.c ****   while (obj->CLC & CAN_CLC_DISS_Msk)
 673              	 .loc 1 357 0 discriminator 1
 674 0014 2368     	 ldr r3,[r4]
 675 0016 9B07     	 lsl r3,r3,#30
 676 0018 FCD4     	 bmi .L35
 358:../Libraries/XMCLib/src/xmc_can.c ****   {
 359:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 360:../Libraries/XMCLib/src/xmc_can.c ****   };
 361:../Libraries/XMCLib/src/xmc_can.c **** }
 677              	 .loc 1 361 0
 678              	 
 679              	.LVL85:
 680 001a 10BD     	 pop {r4,pc}
 681              	 .cfi_endproc
 682              	.LFE131:
 684              	 .section .text.XMC_CAN_SetBaudrateClockSource,"ax",%progbits
 685              	 .align 1
 686              	 .global XMC_CAN_SetBaudrateClockSource
 687              	 .code 16
 688              	 .thumb_func
 690              	XMC_CAN_SetBaudrateClockSource:
 691              	.LFB133:
 362:../Libraries/XMCLib/src/xmc_can.c **** 
 363:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 364:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency)
 365:../Libraries/XMCLib/src/xmc_can.c **** {
 366:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 367:../Libraries/XMCLib/src/xmc_can.c ****   bool normal_divider;
 368:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n, freq_f;
 369:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step;
 370:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t can_frequency_khz;
 371:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency_khz;
 372:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_DM_t can_divider_mode;
 373:../Libraries/XMCLib/src/xmc_can.c **** 
 374:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency;
 375:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 376:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 377:../Libraries/XMCLib/src/xmc_can.c **** 
 378:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_SetBaudrateClockSource(obj, clksrc);
 379:../Libraries/XMCLib/src/xmc_can.c **** 
 380:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency = XMC_CAN_GetBaudrateClockFrequency(obj);
 381:../Libraries/XMCLib/src/xmc_can.c **** 
 382:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 383:../Libraries/XMCLib/src/xmc_can.c **** 
 384:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 385:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 386:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 387:../Libraries/XMCLib/src/xmc_can.c **** 
 388:../Libraries/XMCLib/src/xmc_can.c ****   /* Fractional divider mode */
 389:../Libraries/XMCLib/src/xmc_can.c ****   can_frequency_khz = (uint32_t) (can_frequency >> 6);
 390:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 391:../Libraries/XMCLib/src/xmc_can.c **** 
 392:../Libraries/XMCLib/src/xmc_can.c ****   step_f = (uint32_t)(min( (((1024U * can_frequency_khz) / peripheral_frequency_khz) ), 1023U ));
 393:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 394:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 395:../Libraries/XMCLib/src/xmc_can.c **** 
 396:../Libraries/XMCLib/src/xmc_can.c ****   normal_divider  = (uint32_t)(can_frequency - freq_n) <= (can_frequency - freq_f);
 397:../Libraries/XMCLib/src/xmc_can.c **** 
 398:../Libraries/XMCLib/src/xmc_can.c ****   step   = (normal_divider != 0U) ? step_n : step_f;
 399:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 400:../Libraries/XMCLib/src/xmc_can.c **** 
 401:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 402:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 403:../Libraries/XMCLib/src/xmc_can.c **** 
 404:../Libraries/XMCLib/src/xmc_can.c **** }
 405:../Libraries/XMCLib/src/xmc_can.c **** 
 406:../Libraries/XMCLib/src/xmc_can.c **** #else
 407:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN GLOBAL Object */
 408:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency)
 409:../Libraries/XMCLib/src/xmc_can.c **** {
 410:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 411:../Libraries/XMCLib/src/xmc_can.c ****   bool normal_divider;
 412:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n, freq_f;
 413:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step;
 414:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t can_frequency_khz;
 415:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency_khz;
 416:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_DM_t can_divider_mode;
 417:../Libraries/XMCLib/src/xmc_can.c **** 
 418:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency = (XMC_SCU_CLOCK_GetPeripheralClockFrequency());
 419:../Libraries/XMCLib/src/xmc_can.c **** 
 420:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 421:../Libraries/XMCLib/src/xmc_can.c **** 
 422:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 423:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 424:../Libraries/XMCLib/src/xmc_can.c **** 
 425:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 426:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 427:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 428:../Libraries/XMCLib/src/xmc_can.c **** 
 429:../Libraries/XMCLib/src/xmc_can.c ****   /* Fractional divider mode */
 430:../Libraries/XMCLib/src/xmc_can.c ****   can_frequency_khz = (uint32_t) (can_frequency >> 6);
 431:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 432:../Libraries/XMCLib/src/xmc_can.c **** 
 433:../Libraries/XMCLib/src/xmc_can.c ****   step_f = (uint32_t)(min( (((1024U * can_frequency_khz) / peripheral_frequency_khz) ), 1023U ));
 434:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 435:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 436:../Libraries/XMCLib/src/xmc_can.c **** 
 437:../Libraries/XMCLib/src/xmc_can.c ****   normal_divider  = (uint32_t)(can_frequency - freq_n) <= (can_frequency - freq_f);
 438:../Libraries/XMCLib/src/xmc_can.c **** 
 439:../Libraries/XMCLib/src/xmc_can.c ****   step   = (normal_divider != 0U) ? step_n : step_f;
 440:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 441:../Libraries/XMCLib/src/xmc_can.c **** 
 442:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 443:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 444:../Libraries/XMCLib/src/xmc_can.c **** }
 445:../Libraries/XMCLib/src/xmc_can.c **** #endif
 446:../Libraries/XMCLib/src/xmc_can.c **** 
 447:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj,const XMC_CAN_CANCLKSRC_t source)
 448:../Libraries/XMCLib/src/xmc_can.c **** {
 692              	 .loc 1 448 0
 693              	 .cfi_startproc
 694              	.LVL86:
 449:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 450:../Libraries/XMCLib/src/xmc_can.c ****   obj->MCR = (obj->MCR & ~CAN_MCR_CLKSEL_Msk) | source ;
 695              	 .loc 1 450 0
 696 0000 E422     	 mov r2,#228
 448:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 697              	 .loc 1 448 0
 698 0002 10B5     	 push {r4,lr}
 699              	.LCFI7:
 700              	 .cfi_def_cfa_offset 8
 701              	 .cfi_offset 4,-8
 702              	 .cfi_offset 14,-4
 703              	 .loc 1 450 0
 704 0004 0F24     	 mov r4,#15
 705 0006 5200     	 lsl r2,r2,#1
 706 0008 8358     	 ldr r3,[r0,r2]
 451:../Libraries/XMCLib/src/xmc_can.c **** #else
 452:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(obj);
 453:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(source);
 454:../Libraries/XMCLib/src/xmc_can.c **** #endif
 455:../Libraries/XMCLib/src/xmc_can.c **** }
 707              	 .loc 1 455 0
 708              	 
 450:../Libraries/XMCLib/src/xmc_can.c **** #else
 709              	 .loc 1 450 0
 710 000a A343     	 bic r3,r4
 711 000c 1943     	 orr r1,r3
 712              	.LVL87:
 713 000e 8150     	 str r1,[r0,r2]
 714              	 .loc 1 455 0
 715 0010 10BD     	 pop {r4,pc}
 716              	 .cfi_endproc
 717              	.LFE133:
 719              	 .section .text.XMC_CAN_GetBaudrateClockSource,"ax",%progbits
 720              	 .align 1
 721              	 .global XMC_CAN_GetBaudrateClockSource
 722              	 .code 16
 723              	 .thumb_func
 725              	XMC_CAN_GetBaudrateClockSource:
 726              	.LFB134:
 456:../Libraries/XMCLib/src/xmc_can.c **** 
 457:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj)
 458:../Libraries/XMCLib/src/xmc_can.c **** {
 727              	 .loc 1 458 0
 728              	 .cfi_startproc
 729              	.LVL88:
 459:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 460:../Libraries/XMCLib/src/xmc_can.c ****   return ((XMC_CAN_CANCLKSRC_t)((obj->MCR & CAN_MCR_CLKSEL_Msk) >> CAN_MCR_CLKSEL_Pos));
 730              	 .loc 1 460 0
 731 0000 E423     	 mov r3,#228
 732 0002 5B00     	 lsl r3,r3,#1
 733 0004 C058     	 ldr r0,[r0,r3]
 734              	.LVL89:
 735 0006 BA3B     	 sub r3,r3,#186
 736 0008 FF3B     	 sub r3,r3,#255
 737 000a 1840     	 and r0,r3
 461:../Libraries/XMCLib/src/xmc_can.c **** #elif (UC_FAMILY == XMC4) 
 462:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(obj);
 463:../Libraries/XMCLib/src/xmc_can.c ****   return XMC_CAN_CANCLKSRC_FPERI;
 464:../Libraries/XMCLib/src/xmc_can.c **** #endif    
 465:../Libraries/XMCLib/src/xmc_can.c **** }
 738              	 .loc 1 465 0
 739              	 
 740 000c 7047     	 bx lr
 741              	 .cfi_endproc
 742              	.LFE134:
 744              	 .section .text.XMC_CAN_GetBaudrateClockFrequency,"ax",%progbits
 745              	 .align 1
 746              	 .global XMC_CAN_GetBaudrateClockFrequency
 747              	 .code 16
 748              	 .thumb_func
 750              	XMC_CAN_GetBaudrateClockFrequency:
 751              	.LFB135:
 466:../Libraries/XMCLib/src/xmc_can.c **** 
 467:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj)
 468:../Libraries/XMCLib/src/xmc_can.c **** {
 752              	 .loc 1 468 0
 753              	 .cfi_startproc
 754              	.LVL90:
 755 0000 08B5     	 push {r3,lr}
 756              	.LCFI8:
 757              	 .cfi_def_cfa_offset 8
 758              	 .cfi_offset 3,-8
 759              	 .cfi_offset 14,-4
 760              	.LBB65:
 761              	.LBB66:
 460:../Libraries/XMCLib/src/xmc_can.c **** #elif (UC_FAMILY == XMC4) 
 762              	 .loc 1 460 0
 763 0002 E423     	 mov r3,#228
 764 0004 5B00     	 lsl r3,r3,#1
 765 0006 C258     	 ldr r2,[r0,r3]
 766              	.LBE66:
 767              	.LBE65:
 469:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t frequency;
 470:../Libraries/XMCLib/src/xmc_can.c **** 
 471:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 472:../Libraries/XMCLib/src/xmc_can.c ****   switch(XMC_CAN_GetBaudrateClockSource(obj))
 768              	 .loc 1 472 0
 769 0008 BA3B     	 sub r3,r3,#186
 770 000a FF3B     	 sub r3,r3,#255
 771 000c 1340     	 and r3,r2
 772 000e 012B     	 cmp r3,#1
 773 0010 04D0     	 beq .L40
 774 0012 022B     	 cmp r3,#2
 775 0014 05D1     	 bne .L44
 473:../Libraries/XMCLib/src/xmc_can.c ****   {
 474:../Libraries/XMCLib/src/xmc_can.c **** #if UC_FAMILY == XMC4
 475:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_FPERI:
 476:../Libraries/XMCLib/src/xmc_can.c ****       frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 477:../Libraries/XMCLib/src/xmc_can.c ****       break;
 478:../Libraries/XMCLib/src/xmc_can.c **** #else
 479:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_MCLK:
 480:../Libraries/XMCLib/src/xmc_can.c ****       frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 481:../Libraries/XMCLib/src/xmc_can.c ****       break;
 482:../Libraries/XMCLib/src/xmc_can.c **** #endif
 483:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_FOHP:
 484:../Libraries/XMCLib/src/xmc_can.c ****       frequency = OSCHP_GetFrequency();
 776              	 .loc 1 484 0
 777 0016 FFF7FEFF 	 bl OSCHP_GetFrequency
 778              	.LVL91:
 485:../Libraries/XMCLib/src/xmc_can.c ****       break;
 779              	 .loc 1 485 0
 780 001a 03E0     	 b .L39
 781              	.LVL92:
 782              	.L40:
 480:../Libraries/XMCLib/src/xmc_can.c ****       break;
 783              	 .loc 1 480 0
 784 001c FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 785              	.LVL93:
 481:../Libraries/XMCLib/src/xmc_can.c **** #endif
 786              	 .loc 1 481 0
 787 0020 00E0     	 b .L39
 788              	.LVL94:
 789              	.L44:
 486:../Libraries/XMCLib/src/xmc_can.c **** 
 487:../Libraries/XMCLib/src/xmc_can.c ****     default:
 488:../Libraries/XMCLib/src/xmc_can.c ****       frequency = 0;
 790              	 .loc 1 488 0
 791 0022 0020     	 mov r0,#0
 792              	.LVL95:
 793              	.L39:
 489:../Libraries/XMCLib/src/xmc_can.c ****       break;
 490:../Libraries/XMCLib/src/xmc_can.c ****   }
 491:../Libraries/XMCLib/src/xmc_can.c **** #else
 492:../Libraries/XMCLib/src/xmc_can.c ****   XMC_UNUSED_ARG(obj);
 493:../Libraries/XMCLib/src/xmc_can.c ****   frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 494:../Libraries/XMCLib/src/xmc_can.c **** #endif  
 495:../Libraries/XMCLib/src/xmc_can.c **** 
 496:../Libraries/XMCLib/src/xmc_can.c ****   return frequency;
 497:../Libraries/XMCLib/src/xmc_can.c **** }
 794              	 .loc 1 497 0
 795              	 
 796 0024 08BD     	 pop {r3,pc}
 797              	 .cfi_endproc
 798              	.LFE135:
 800              	 .section .text.XMC_CAN_Init,"ax",%progbits
 801              	 .align 1
 802              	 .global XMC_CAN_Init
 803              	 .code 16
 804              	 .thumb_func
 806              	XMC_CAN_Init:
 807              	.LFB132:
 365:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 808              	 .loc 1 365 0
 809              	 .cfi_startproc
 810              	.LVL96:
 811 0000 F7B5     	 push {r0,r1,r2,r4,r5,r6,r7,lr}
 812              	.LCFI9:
 813              	 .cfi_def_cfa_offset 32
 814              	 .cfi_offset 0,-32
 815              	 .cfi_offset 1,-28
 816              	 .cfi_offset 2,-24
 817              	 .cfi_offset 4,-20
 818              	 .cfi_offset 5,-16
 819              	 .cfi_offset 6,-12
 820              	 .cfi_offset 7,-8
 821              	 .cfi_offset 14,-4
 365:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 822              	 .loc 1 365 0
 823 0002 041C     	 mov r4,r0
 824 0004 0E1C     	 mov r6,r1
 825 0006 151C     	 mov r5,r2
 376:../Libraries/XMCLib/src/xmc_can.c **** 
 826              	 .loc 1 376 0
 827 0008 FFF7FEFF 	 bl XMC_CAN_Enable
 828              	.LVL97:
 829              	.LBB67:
 830              	.LBB68:
 450:../Libraries/XMCLib/src/xmc_can.c **** #else
 831              	 .loc 1 450 0
 832 000c E423     	 mov r3,#228
 833 000e 0F22     	 mov r2,#15
 834 0010 5B00     	 lsl r3,r3,#1
 835 0012 E158     	 ldr r1,[r4,r3]
 836              	.LBE68:
 837              	.LBE67:
 380:../Libraries/XMCLib/src/xmc_can.c **** 
 838              	 .loc 1 380 0
 839 0014 201C     	 mov r0,r4
 840              	.LBB70:
 841              	.LBB69:
 450:../Libraries/XMCLib/src/xmc_can.c **** #else
 842              	 .loc 1 450 0
 843 0016 9143     	 bic r1,r2
 844 0018 3143     	 orr r1,r6
 845 001a E150     	 str r1,[r4,r3]
 846              	.LBE69:
 847              	.LBE70:
 380:../Libraries/XMCLib/src/xmc_can.c **** 
 848              	 .loc 1 380 0
 849 001c FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockFrequency
 850              	.LVL98:
 385:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 851              	 .loc 1 385 0
 852 0020 291C     	 mov r1,r5
 380:../Libraries/XMCLib/src/xmc_can.c **** 
 853              	 .loc 1 380 0
 854 0022 0090     	 str r0,[sp]
 855              	.LVL99:
 385:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 856              	 .loc 1 385 0
 857 0024 FFF7FEFF 	 bl __aeabi_uidiv
 858              	.LVL100:
 859 0028 8023     	 mov r3,#128
 860 002a DB00     	 lsl r3,r3,#3
 861 002c 1F1A     	 sub r7,r3,r0
 862              	.LBB71:
 863              	.LBB72:
 100:../Libraries/XMCLib/src/xmc_can.c **** }
 864              	 .loc 1 100 0
 865 002e 174B     	 ldr r3,.L51
 866 0030 9F42     	 cmp r7,r3
 867 0032 00D9     	 bls .L47
 868 0034 1F1C     	 mov r7,r3
 869              	.L47:
 870              	.LVL101:
 871              	.LBE72:
 872              	.LBE71:
 390:../Libraries/XMCLib/src/xmc_can.c **** 
 873              	 .loc 1 390 0
 874 0036 009B     	 ldr r3,[sp]
 389:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 875              	 .loc 1 389 0
 876 0038 A809     	 lsr r0,r5,#6
 877              	.LVL102:
 390:../Libraries/XMCLib/src/xmc_can.c **** 
 878              	 .loc 1 390 0
 879 003a 9B09     	 lsr r3,r3,#6
 392:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 880              	 .loc 1 392 0
 881 003c 191C     	 mov r1,r3
 882 003e 8002     	 lsl r0,r0,#10
 883              	.LVL103:
 390:../Libraries/XMCLib/src/xmc_can.c **** 
 884              	 .loc 1 390 0
 885 0040 0193     	 str r3,[sp,#4]
 886              	.LVL104:
 392:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 887              	 .loc 1 392 0
 888 0042 FFF7FEFF 	 bl __aeabi_uidiv
 889              	.LVL105:
 890              	.LBB73:
 891              	.LBB74:
 100:../Libraries/XMCLib/src/xmc_can.c **** }
 892              	 .loc 1 100 0
 893 0046 114B     	 ldr r3,.L51
 894              	.LBE74:
 895              	.LBE73:
 392:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 896              	 .loc 1 392 0
 897 0048 061E     	 sub r6,r0,#0
 898              	.LVL106:
 899              	.LBB76:
 900              	.LBB75:
 100:../Libraries/XMCLib/src/xmc_can.c **** }
 901              	 .loc 1 100 0
 902 004a 9E42     	 cmp r6,r3
 903 004c 00D9     	 bls .L48
 904 004e 1E1C     	 mov r6,r3
 905              	.L48:
 906              	.LBE75:
 907              	.LBE76:
 386:../Libraries/XMCLib/src/xmc_can.c **** 
 908              	 .loc 1 386 0
 909 0050 8021     	 mov r1,#128
 393:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 910              	 .loc 1 393 0
 911 0052 019B     	 ldr r3,[sp,#4]
 386:../Libraries/XMCLib/src/xmc_can.c **** 
 912              	 .loc 1 386 0
 913 0054 C900     	 lsl r1,r1,#3
 393:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 914              	 .loc 1 393 0
 915 0056 7343     	 mul r3,r6
 386:../Libraries/XMCLib/src/xmc_can.c **** 
 916              	 .loc 1 386 0
 917 0058 C91B     	 sub r1,r1,r7
 393:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 918              	 .loc 1 393 0
 919 005a 9B0A     	 lsr r3,r3,#10
 386:../Libraries/XMCLib/src/xmc_can.c **** 
 920              	 .loc 1 386 0
 921 005c 0098     	 ldr r0,[sp]
 393:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 922              	 .loc 1 393 0
 923 005e 0193     	 str r3,[sp,#4]
 924              	.LVL107:
 386:../Libraries/XMCLib/src/xmc_can.c **** 
 925              	 .loc 1 386 0
 926 0060 FFF7FEFF 	 bl __aeabi_uidiv
 927              	.LVL108:
 394:../Libraries/XMCLib/src/xmc_can.c **** 
 928              	 .loc 1 394 0
 929 0064 019B     	 ldr r3,[sp,#4]
 396:../Libraries/XMCLib/src/xmc_can.c **** 
 930              	 .loc 1 396 0
 931 0066 281A     	 sub r0,r5,r0
 394:../Libraries/XMCLib/src/xmc_can.c **** 
 932              	 .loc 1 394 0
 933 0068 9B01     	 lsl r3,r3,#6
 934              	.LVL109:
 396:../Libraries/XMCLib/src/xmc_can.c **** 
 935              	 .loc 1 396 0
 936 006a ED1A     	 sub r5,r5,r3
 937              	.LVL110:
 399:../Libraries/XMCLib/src/xmc_can.c **** 
 938              	 .loc 1 399 0
 939 006c 0223     	 mov r3,#2
 940              	.LVL111:
 398:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 941              	 .loc 1 398 0
 942 006e A842     	 cmp r0,r5
 943 0070 01D8     	 bhi .L49
 944 0072 3E1C     	 mov r6,r7
 399:../Libraries/XMCLib/src/xmc_can.c **** 
 945              	 .loc 1 399 0
 946 0074 013B     	 sub r3,r3,#1
 947              	.L49:
 948              	.LVL112:
 401:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 949              	 .loc 1 401 0 discriminator 4
 950 0076 E168     	 ldr r1,[r4,#12]
 951 0078 054A     	 ldr r2,.L51+4
 402:../Libraries/XMCLib/src/xmc_can.c **** 
 952              	 .loc 1 402 0 discriminator 4
 953 007a 9B03     	 lsl r3,r3,#14
 954              	.LVL113:
 401:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 955              	 .loc 1 401 0 discriminator 4
 956 007c 0A40     	 and r2,r1
 957 007e E260     	 str r2,[r4,#12]
 402:../Libraries/XMCLib/src/xmc_can.c **** 
 958              	 .loc 1 402 0 discriminator 4
 959 0080 E268     	 ldr r2,[r4,#12]
 404:../Libraries/XMCLib/src/xmc_can.c **** 
 960              	 .loc 1 404 0 discriminator 4
 961              	 
 962 0082 1643     	 orr r6,r2
 402:../Libraries/XMCLib/src/xmc_can.c **** 
 963              	 .loc 1 402 0 discriminator 4
 964 0084 1E43     	 orr r6,r3
 965 0086 E660     	 str r6,[r4,#12]
 966              	.LVL114:
 967              	.LVL115:
 404:../Libraries/XMCLib/src/xmc_can.c **** 
 968              	 .loc 1 404 0 discriminator 4
 969 0088 F7BD     	 pop {r0,r1,r2,r4,r5,r6,r7,pc}
 970              	.L52:
 971 008a C046     	 .align 2
 972              	.L51:
 973 008c FF030000 	 .word 1023
 974 0090 003CFFFF 	 .word -50176
 975              	 .cfi_endproc
 976              	.LFE132:
 978              	 .section .text.XMC_CAN_InitEx,"ax",%progbits
 979              	 .align 1
 980              	 .global XMC_CAN_InitEx
 981              	 .code 16
 982              	 .thumb_func
 984              	XMC_CAN_InitEx:
 985              	.LFB136:
 498:../Libraries/XMCLib/src/xmc_can.c **** 
 499:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_InitEx(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency)
 500:../Libraries/XMCLib/src/xmc_can.c **** {
 986              	 .loc 1 500 0
 987              	 .cfi_startproc
 988              	.LVL116:
 989 0000 70B5     	 push {r4,r5,r6,lr}
 990              	.LCFI10:
 991              	 .cfi_def_cfa_offset 16
 992              	 .cfi_offset 4,-16
 993              	 .cfi_offset 5,-12
 994              	 .cfi_offset 6,-8
 995              	 .cfi_offset 14,-4
 996              	 .loc 1 500 0
 997 0002 041C     	 mov r4,r0
 998 0004 0D1C     	 mov r5,r1
 999 0006 161C     	 mov r6,r2
 501:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step_n;
 502:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n;
 503:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency;
 504:../Libraries/XMCLib/src/xmc_can.c **** 
 505:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 506:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 1000              	 .loc 1 506 0
 1001 0008 FFF7FEFF 	 bl XMC_CAN_Enable
 1002              	.LVL117:
 1003              	.LBB77:
 1004              	.LBB78:
 450:../Libraries/XMCLib/src/xmc_can.c **** #else
 1005              	 .loc 1 450 0
 1006 000c E423     	 mov r3,#228
 1007 000e 0F22     	 mov r2,#15
 1008 0010 5B00     	 lsl r3,r3,#1
 1009 0012 E158     	 ldr r1,[r4,r3]
 1010              	.LBE78:
 1011              	.LBE77:
 507:../Libraries/XMCLib/src/xmc_can.c **** 
 508:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_SetBaudrateClockSource(obj, clksrc);
 509:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency = XMC_CAN_GetBaudrateClockFrequency(obj);
 1012              	 .loc 1 509 0
 1013 0014 201C     	 mov r0,r4
 1014              	.LBB80:
 1015              	.LBB79:
 450:../Libraries/XMCLib/src/xmc_can.c **** #else
 1016              	 .loc 1 450 0
 1017 0016 9143     	 bic r1,r2
 1018 0018 2943     	 orr r1,r5
 1019 001a E150     	 str r1,[r4,r3]
 1020              	.LBE79:
 1021              	.LBE80:
 1022              	 .loc 1 509 0
 1023 001c FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockFrequency
 1024              	.LVL118:
 510:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 511:../Libraries/XMCLib/src/xmc_can.c **** 
 512:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 513:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 1025              	 .loc 1 513 0
 1026 0020 311C     	 mov r1,r6
 509:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 1027              	 .loc 1 509 0
 1028 0022 051C     	 mov r5,r0
 1029              	.LVL119:
 1030              	 .loc 1 513 0
 1031 0024 FFF7FEFF 	 bl __aeabi_uidiv
 1032              	.LVL120:
 1033 0028 8021     	 mov r1,#128
 1034              	.LBB81:
 1035              	.LBB82:
 100:../Libraries/XMCLib/src/xmc_can.c **** }
 1036              	 .loc 1 100 0
 1037 002a 0B4B     	 ldr r3,.L56
 1038              	.LBE82:
 1039              	.LBE81:
 1040              	 .loc 1 513 0
 1041 002c C900     	 lsl r1,r1,#3
 1042 002e 081A     	 sub r0,r1,r0
 1043              	.LBB84:
 1044              	.LBB83:
 100:../Libraries/XMCLib/src/xmc_can.c **** }
 1045              	 .loc 1 100 0
 1046 0030 9842     	 cmp r0,r3
 1047 0032 00D9     	 bls .L55
 1048 0034 181C     	 mov r0,r3
 1049              	.L55:
 1050              	.LVL121:
 1051              	.LBE83:
 1052              	.LBE84:
 514:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t)(peripheral_frequency / (1024U - step_n));
 515:../Libraries/XMCLib/src/xmc_can.c **** 
 516:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 1053              	 .loc 1 516 0
 1054 0036 E268     	 ldr r2,[r4,#12]
 1055 0038 084B     	 ldr r3,.L56+4
 514:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t)(peripheral_frequency / (1024U - step_n));
 1056              	 .loc 1 514 0
 1057 003a 8021     	 mov r1,#128
 1058              	 .loc 1 516 0
 1059 003c 1340     	 and r3,r2
 1060 003e 8022     	 mov r2,#128
 1061 0040 E360     	 str r3,[r4,#12]
 517:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)XMC_CAN_DM_NORMAL << CAN_FDR_DM_Pos) | ((uint32_t)step_n << CAN_FDR_STEP_P
 1062              	 .loc 1 517 0
 1063 0042 E368     	 ldr r3,[r4,#12]
 1064 0044 D201     	 lsl r2,r2,#7
 1065 0046 1343     	 orr r3,r2
 1066 0048 0343     	 orr r3,r0
 514:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t)(peripheral_frequency / (1024U - step_n));
 1067              	 .loc 1 514 0
 1068 004a C900     	 lsl r1,r1,#3
 1069 004c 091A     	 sub r1,r1,r0
 1070              	 .loc 1 517 0
 1071 004e E360     	 str r3,[r4,#12]
 514:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t)(peripheral_frequency / (1024U - step_n));
 1072              	 .loc 1 514 0
 1073 0050 281C     	 mov r0,r5
 1074              	.LVL122:
 1075 0052 FFF7FEFF 	 bl __aeabi_uidiv
 1076              	.LVL123:
 518:../Libraries/XMCLib/src/xmc_can.c **** 
 519:../Libraries/XMCLib/src/xmc_can.c ****   return freq_n;
 520:../Libraries/XMCLib/src/xmc_can.c **** }
 1077              	 .loc 1 520 0
 1078              	 
 1079              	.LVL124:
 1080              	.LVL125:
 1081              	.LVL126:
 1082 0056 70BD     	 pop {r4,r5,r6,pc}
 1083              	.L57:
 1084              	 .align 2
 1085              	.L56:
 1086 0058 FF030000 	 .word 1023
 1087 005c 003CFFFF 	 .word -50176
 1088              	 .cfi_endproc
 1089              	.LFE136:
 1091              	 .section .text.XMC_CAN_GetClockFrequency,"ax",%progbits
 1092              	 .align 1
 1093              	 .global XMC_CAN_GetClockFrequency
 1094              	 .code 16
 1095              	 .thumb_func
 1097              	XMC_CAN_GetClockFrequency:
 1098              	.LFB137:
 521:../Libraries/XMCLib/src/xmc_can.c **** 
 522:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_GetClockFrequency(XMC_CAN_t *const obj)
 523:../Libraries/XMCLib/src/xmc_can.c **** {
 1099              	 .loc 1 523 0
 1100              	 .cfi_startproc
 1101              	.LVL127:
 1102 0000 10B5     	 push {r4,lr}
 1103              	.LCFI11:
 1104              	 .cfi_def_cfa_offset 8
 1105              	 .cfi_offset 4,-8
 1106              	 .cfi_offset 14,-4
 524:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step_n = (obj->FDR & CAN_FDR_STEP_Msk) >> CAN_FDR_STEP_Pos;
 1107              	 .loc 1 524 0
 1108 0002 C468     	 ldr r4,[r0,#12]
 1109              	.LVL128:
 525:../Libraries/XMCLib/src/xmc_can.c ****   return (XMC_CAN_GetBaudrateClockFrequency(obj) * (1024U - step_n));
 1110              	 .loc 1 525 0
 1111 0004 FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockFrequency
 1112              	.LVL129:
 1113 0008 8022     	 mov r2,#128
 524:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step_n = (obj->FDR & CAN_FDR_STEP_Msk) >> CAN_FDR_STEP_Pos;
 1114              	 .loc 1 524 0
 1115 000a A405     	 lsl r4,r4,#22
 1116              	.LVL130:
 1117 000c A40D     	 lsr r4,r4,#22
 1118              	 .loc 1 525 0
 1119 000e D200     	 lsl r2,r2,#3
 1120 0010 131B     	 sub r3,r2,r4
 1121 0012 5843     	 mul r0,r3
 526:../Libraries/XMCLib/src/xmc_can.c **** }
 1122              	 .loc 1 526 0
 1123              	 
 1124 0014 10BD     	 pop {r4,pc}
 1125              	 .cfi_endproc
 1126              	.LFE137:
 1128              	 .section .text.XMC_CAN_MO_SetIdentifier,"ax",%progbits
 1129              	 .align 1
 1130              	 .global XMC_CAN_MO_SetIdentifier
 1131              	 .code 16
 1132              	 .thumb_func
 1134              	XMC_CAN_MO_SetIdentifier:
 1135              	.LFB138:
 527:../Libraries/XMCLib/src/xmc_can.c **** 
 528:../Libraries/XMCLib/src/xmc_can.c **** /* Sets the Identifier of the MO */
 529:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetIdentifier(XMC_CAN_MO_t *const can_mo, const uint32_t can_identifier)
 530:../Libraries/XMCLib/src/xmc_can.c **** {
 1136              	 .loc 1 530 0
 1137              	 .cfi_startproc
 1138              	.LVL131:
 1139 0000 30B5     	 push {r4,r5,lr}
 1140              	.LCFI12:
 1141              	 .cfi_def_cfa_offset 12
 1142              	 .cfi_offset 4,-12
 1143              	 .cfi_offset 5,-8
 1144              	 .cfi_offset 14,-4
 531:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 1145              	 .loc 1 531 0
 1146 0002 0568     	 ldr r5,[r0]
 1147 0004 CC00     	 lsl r4,r1,#3
 1148 0006 AB69     	 ldr r3,[r5,#24]
 1149 0008 9B00     	 lsl r3,r3,#2
 1150 000a 07D4     	 bmi .L60
 532:../Libraries/XMCLib/src/xmc_can.c ****   {
 533:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 1151              	 .loc 1 533 0
 1152 000c AB69     	 ldr r3,[r5,#24]
 534:../Libraries/XMCLib/src/xmc_can.c ****                              ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MOAR
 1153              	 .loc 1 534 0
 1154 000e 4905     	 lsl r1,r1,#21
 1155              	.LVL132:
 533:../Libraries/XMCLib/src/xmc_can.c ****                              ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MOAR
 1156              	 .loc 1 533 0
 1157 0010 5B0F     	 lsr r3,r3,#29
 1158              	 .loc 1 534 0
 1159 0012 C908     	 lsr r1,r1,#3
 533:../Libraries/XMCLib/src/xmc_can.c ****                              ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MOAR
 1160              	 .loc 1 533 0
 1161 0014 5B07     	 lsl r3,r3,#29
 1162 0016 1943     	 orr r1,r3
 1163 0018 A961     	 str r1,[r5,#24]
 1164 001a 06E0     	 b .L61
 1165              	.LVL133:
 1166              	.L60:
 535:../Libraries/XMCLib/src/xmc_can.c ****   }
 536:../Libraries/XMCLib/src/xmc_can.c ****   else
 537:../Libraries/XMCLib/src/xmc_can.c ****   {
 538:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 1167              	 .loc 1 538 0
 1168 001c AB69     	 ldr r3,[r5,#24]
 539:../Libraries/XMCLib/src/xmc_can.c ****                            (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 1169              	 .loc 1 539 0
 1170 001e E108     	 lsr r1,r4,#3
 1171              	.LVL134:
 538:../Libraries/XMCLib/src/xmc_can.c ****                            (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 1172              	 .loc 1 538 0
 1173 0020 5B0F     	 lsr r3,r3,#29
 1174 0022 5A07     	 lsl r2,r3,#29
 1175 0024 0B1C     	 mov r3,r1
 1176 0026 1343     	 orr r3,r2
 1177 0028 AB61     	 str r3,[r5,#24]
 1178              	.L61:
 540:../Libraries/XMCLib/src/xmc_can.c ****   }
 541:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_identifier = can_identifier;
 1179              	 .loc 1 541 0
 1180 002a 4368     	 ldr r3,[r0,#4]
 1181 002c E408     	 lsr r4,r4,#3
 1182 002e 5B0F     	 lsr r3,r3,#29
 1183 0030 5B07     	 lsl r3,r3,#29
 1184 0032 1C43     	 orr r4,r3
 1185 0034 4460     	 str r4,[r0,#4]
 542:../Libraries/XMCLib/src/xmc_can.c **** }
 1186              	 .loc 1 542 0
 1187              	 
 1188 0036 30BD     	 pop {r4,r5,pc}
 1189              	 .cfi_endproc
 1190              	.LFE138:
 1192              	 .section .text.XMC_CAN_MO_GetIdentifier,"ax",%progbits
 1193              	 .align 1
 1194              	 .global XMC_CAN_MO_GetIdentifier
 1195              	 .code 16
 1196              	 .thumb_func
 1198              	XMC_CAN_MO_GetIdentifier:
 1199              	.LFB139:
 543:../Libraries/XMCLib/src/xmc_can.c **** 
 544:../Libraries/XMCLib/src/xmc_can.c **** 
 545:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the Identifier of the MO */
 546:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetIdentifier(const XMC_CAN_MO_t *const can_mo)
 547:../Libraries/XMCLib/src/xmc_can.c **** {
 1200              	 .loc 1 547 0
 1201              	 .cfi_startproc
 1202              	.LVL135:
 548:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier;
 549:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 1203              	 .loc 1 549 0
 1204 0000 0368     	 ldr r3,[r0]
 1205 0002 9A69     	 ldr r2,[r3,#24]
 550:../Libraries/XMCLib/src/xmc_can.c ****   {
 551:../Libraries/XMCLib/src/xmc_can.c ****   identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk)) >> XMC_CAN_MO_MOAR_STD
 1206              	 .loc 1 551 0
 1207 0004 9869     	 ldr r0,[r3,#24]
 1208              	.LVL136:
 1209 0006 C000     	 lsl r0,r0,#3
 549:../Libraries/XMCLib/src/xmc_can.c ****   {
 1210              	 .loc 1 549 0
 1211 0008 9200     	 lsl r2,r2,#2
 1212 000a 01D4     	 bmi .L63
 1213              	 .loc 1 551 0
 1214 000c 400D     	 lsr r0,r0,#21
 1215              	.LVL137:
 1216 000e 00E0     	 b .L64
 1217              	.LVL138:
 1218              	.L63:
 552:../Libraries/XMCLib/src/xmc_can.c ****   }
 553:../Libraries/XMCLib/src/xmc_can.c ****   else
 554:../Libraries/XMCLib/src/xmc_can.c ****   {
 555:../Libraries/XMCLib/src/xmc_can.c ****   identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk));
 1219              	 .loc 1 555 0
 1220 0010 C008     	 lsr r0,r0,#3
 1221              	.LVL139:
 1222              	.L64:
 556:../Libraries/XMCLib/src/xmc_can.c ****   }
 557:../Libraries/XMCLib/src/xmc_can.c ****   return identifier;
 558:../Libraries/XMCLib/src/xmc_can.c **** }
 1223              	 .loc 1 558 0
 1224              	 
 1225 0012 7047     	 bx lr
 1226              	 .cfi_endproc
 1227              	.LFE139:
 1229              	 .section .text.XMC_CAN_MO_GetAcceptanceMask,"ax",%progbits
 1230              	 .align 1
 1231              	 .global XMC_CAN_MO_GetAcceptanceMask
 1232              	 .code 16
 1233              	 .thumb_func
 1235              	XMC_CAN_MO_GetAcceptanceMask:
 1236              	.LFB140:
 559:../Libraries/XMCLib/src/xmc_can.c **** 
 560:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the acceptance mask for the CAN MO. */
 561:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetAcceptanceMask(const XMC_CAN_MO_t *const can_mo)
 562:../Libraries/XMCLib/src/xmc_can.c **** {
 1237              	 .loc 1 562 0
 1238              	 .cfi_startproc
 1239              	.LVL140:
 563:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier_mask;
 564:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != (uint32_t)CAN_MO_MOAMR_MIDE_Msk)
 1240              	 .loc 1 564 0
 1241 0000 8022     	 mov r2,#128
 1242 0002 0368     	 ldr r3,[r0]
 1243 0004 9205     	 lsl r2,r2,#22
 1244 0006 D968     	 ldr r1,[r3,#12]
 1245 0008 1142     	 tst r1,r2
 1246 000a 06D1     	 bne .L66
 565:../Libraries/XMCLib/src/xmc_can.c ****             && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk))
 1247              	 .loc 1 565 0
 1248 000c 9969     	 ldr r1,[r3,#24]
 1249 000e 1142     	 tst r1,r2
 1250 0010 03D1     	 bne .L66
 566:../Libraries/XMCLib/src/xmc_can.c ****   {
 567:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk)) >> XMC_CAN_MO
 1251              	 .loc 1 567 0
 1252 0012 D868     	 ldr r0,[r3,#12]
 1253              	.LVL141:
 1254 0014 C000     	 lsl r0,r0,#3
 1255 0016 400D     	 lsr r0,r0,#21
 1256              	.LVL142:
 1257 0018 02E0     	 b .L67
 1258              	.LVL143:
 1259              	.L66:
 568:../Libraries/XMCLib/src/xmc_can.c ****   }
 569:../Libraries/XMCLib/src/xmc_can.c ****   else
 570:../Libraries/XMCLib/src/xmc_can.c ****   {
 571:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk));
 1260              	 .loc 1 571 0
 1261 001a D868     	 ldr r0,[r3,#12]
 1262              	.LVL144:
 1263 001c C000     	 lsl r0,r0,#3
 1264 001e C008     	 lsr r0,r0,#3
 1265              	.LVL145:
 1266              	.L67:
 572:../Libraries/XMCLib/src/xmc_can.c ****   }
 573:../Libraries/XMCLib/src/xmc_can.c ****   return identifier_mask;
 574:../Libraries/XMCLib/src/xmc_can.c **** }
 1267              	 .loc 1 574 0
 1268              	 
 1269 0020 7047     	 bx lr
 1270              	 .cfi_endproc
 1271              	.LFE140:
 1273              	 .section .text.XMC_CAN_MO_SetAcceptanceMask,"ax",%progbits
 1274              	 .align 1
 1275              	 .global XMC_CAN_MO_SetAcceptanceMask
 1276              	 .code 16
 1277              	 .thumb_func
 1279              	XMC_CAN_MO_SetAcceptanceMask:
 1280              	.LFB141:
 575:../Libraries/XMCLib/src/xmc_can.c **** 
 576:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the acceptance mask of the MO */
 577:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetAcceptanceMask(XMC_CAN_MO_t *const can_mo,const uint32_t can_id_mask)
 578:../Libraries/XMCLib/src/xmc_can.c **** {
 1281              	 .loc 1 578 0
 1282              	 .cfi_startproc
 1283              	.LVL146:
 579:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != (uint32_t)CAN_MO_MOAMR_MIDE_Msk)
 1284              	 .loc 1 579 0
 1285 0000 8023     	 mov r3,#128
 578:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != (uint32_t)CAN_MO_MOAMR_MIDE_Msk)
 1286              	 .loc 1 578 0
 1287 0002 30B5     	 push {r4,r5,lr}
 1288              	.LCFI13:
 1289              	 .cfi_def_cfa_offset 12
 1290              	 .cfi_offset 4,-12
 1291              	 .cfi_offset 5,-8
 1292              	 .cfi_offset 14,-4
 1293              	 .loc 1 579 0
 1294 0004 0568     	 ldr r5,[r0]
 1295 0006 9B05     	 lsl r3,r3,#22
 1296 0008 EA68     	 ldr r2,[r5,#12]
 1297 000a CC00     	 lsl r4,r1,#3
 1298 000c 1A42     	 tst r2,r3
 1299 000e 09D1     	 bne .L69
 580:../Libraries/XMCLib/src/xmc_can.c ****           && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk))
 1300              	 .loc 1 580 0
 1301 0010 AA69     	 ldr r2,[r5,#24]
 1302 0012 1A42     	 tst r2,r3
 1303 0014 06D1     	 bne .L69
 581:../Libraries/XMCLib/src/xmc_can.c ****   {
 582:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 1304              	 .loc 1 582 0
 1305 0016 EB68     	 ldr r3,[r5,#12]
 583:../Libraries/XMCLib/src/xmc_can.c ****                   (can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1306              	 .loc 1 583 0
 1307 0018 8904     	 lsl r1,r1,#18
 1308              	.LVL147:
 582:../Libraries/XMCLib/src/xmc_can.c ****                   (can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1309              	 .loc 1 582 0
 1310 001a 5B0F     	 lsr r3,r3,#29
 1311 001c 5B07     	 lsl r3,r3,#29
 1312 001e 1943     	 orr r1,r3
 1313 0020 E960     	 str r1,[r5,#12]
 1314 0022 06E0     	 b .L70
 1315              	.LVL148:
 1316              	.L69:
 584:../Libraries/XMCLib/src/xmc_can.c ****   }
 585:../Libraries/XMCLib/src/xmc_can.c ****   else
 586:../Libraries/XMCLib/src/xmc_can.c ****   {
 587:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 1317              	 .loc 1 587 0
 1318 0024 EB68     	 ldr r3,[r5,#12]
 588:../Libraries/XMCLib/src/xmc_can.c ****                   (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1319              	 .loc 1 588 0
 1320 0026 E108     	 lsr r1,r4,#3
 1321              	.LVL149:
 587:../Libraries/XMCLib/src/xmc_can.c ****                   (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1322              	 .loc 1 587 0
 1323 0028 5B0F     	 lsr r3,r3,#29
 1324 002a 5A07     	 lsl r2,r3,#29
 1325 002c 0B1C     	 mov r3,r1
 1326 002e 1343     	 orr r3,r2
 1327 0030 EB60     	 str r3,[r5,#12]
 1328              	.L70:
 589:../Libraries/XMCLib/src/xmc_can.c ****   }
 590:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_id_mask = can_id_mask;
 1329              	 .loc 1 590 0
 1330 0032 8368     	 ldr r3,[r0,#8]
 1331 0034 E408     	 lsr r4,r4,#3
 1332 0036 5B0F     	 lsr r3,r3,#29
 1333 0038 5B07     	 lsl r3,r3,#29
 1334 003a 1C43     	 orr r4,r3
 1335 003c 8460     	 str r4,[r0,#8]
 591:../Libraries/XMCLib/src/xmc_can.c **** }
 1336              	 .loc 1 591 0
 1337              	 
 1338 003e 30BD     	 pop {r4,r5,pc}
 1339              	 .cfi_endproc
 1340              	.LFE141:
 1342              	 .section .text.XMC_CAN_MO_UpdateData,"ax",%progbits
 1343              	 .align 1
 1344              	 .global XMC_CAN_MO_UpdateData
 1345              	 .code 16
 1346              	 .thumb_func
 1348              	XMC_CAN_MO_UpdateData:
 1349              	.LFB143:
 592:../Libraries/XMCLib/src/xmc_can.c **** 
 593:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN MO Object */
 594:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo)
 595:../Libraries/XMCLib/src/xmc_can.c **** {
 596:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t reg;
 597:../Libraries/XMCLib/src/xmc_can.c ****   
 598:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure MPN */
 599:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t num = ((uint32_t)(can_mo->can_mo_ptr) - CAN_BASE - 0x1000U)/0x0020U;
 600:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t set = (((uint32_t)(num/32) << (CAN_MO_MOIPR_MPN_Pos + 5U)) | ((uint32_t)(num%32) << CAN_
 601:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR &= ~(CAN_MO_MOIPR_MPN_Msk);
 602:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR |= set;
 603:../Libraries/XMCLib/src/xmc_can.c ****   
 604:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_STANDARD_11BITS) &&
 605:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 606:../Libraries/XMCLib/src/xmc_can.c ****       ((can_mo->can_mo_type != XMC_CAN_MO_TYPE_RECMSGOBJ) &&
 607:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_mo_type != XMC_CAN_MO_TYPE_TRANSMSGOBJ)))
 608:../Libraries/XMCLib/src/xmc_can.c ****   {
 609:../Libraries/XMCLib/src/xmc_can.c ****     ; /*Do nothing*/
 610:../Libraries/XMCLib/src/xmc_can.c ****   }
 611:../Libraries/XMCLib/src/xmc_can.c ****   else
 612:../Libraries/XMCLib/src/xmc_can.c ****   {
 613:../Libraries/XMCLib/src/xmc_can.c **** 
 614:../Libraries/XMCLib/src/xmc_can.c ****     /* Disable Message object */
 615:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 616:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_id_mode == (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS)
 617:../Libraries/XMCLib/src/xmc_can.c ****     {
 618:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_ar;
 619:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAR_ID_Msk);
 620:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_identifier << XMC_CAN_MO_MOAR_STDID_Pos);
 621:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = reg;
 622:../Libraries/XMCLib/src/xmc_can.c **** 
 623:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_amr;
 624:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAMR_AM_Msk);
 625:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 626:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = reg;
 627:../Libraries/XMCLib/src/xmc_can.c ****     }
 628:../Libraries/XMCLib/src/xmc_can.c ****     else
 629:../Libraries/XMCLib/src/xmc_can.c ****     {
 630:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = can_mo->mo_ar;
 631:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = can_mo->mo_amr;
 632:../Libraries/XMCLib/src/xmc_can.c ****     }
 633:../Libraries/XMCLib/src/xmc_can.c ****     /* Check whether message object is transmit message object */
 634:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 635:../Libraries/XMCLib/src/xmc_can.c ****     {
 636:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Transmit message object  */
 637:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_MO_UpdateData(can_mo);
 638:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_SETDIR_Msk;
 639:../Libraries/XMCLib/src/xmc_can.c **** 
 640:../Libraries/XMCLib/src/xmc_can.c ****       /* Reset RTSEL and Set MSGVAL, TXEN0 and TXEN1 bits */
 641:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk | CAN_MO_M
 642:../Libraries/XMCLib/src/xmc_can.c ****                                    CAN_MO_MOCTR_RESRXEN_Msk  | CAN_MO_MOCTR_RESRTSEL_Msk);
 643:../Libraries/XMCLib/src/xmc_can.c ****     }
 644:../Libraries/XMCLib/src/xmc_can.c ****     else
 645:../Libraries/XMCLib/src/xmc_can.c ****     {
 646:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Receive message object and set RXEN bit */
 647:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESDIR_Msk;
 648:../Libraries/XMCLib/src/xmc_can.c **** 
 649:../Libraries/XMCLib/src/xmc_can.c ****       /* Reset RTSEL, TXEN1 and TXEN2 and Set MSGVAL and RXEN bits */
 650:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_RESTXEN0_Msk | CAN_MO_MOCTR_RESTXEN1_Msk | CAN_MO_M
 651:../Libraries/XMCLib/src/xmc_can.c ****                                    CAN_MO_MOCTR_SETRXEN_Msk | CAN_MO_MOCTR_RESRTSEL_Msk);
 652:../Libraries/XMCLib/src/xmc_can.c ****     }
 653:../Libraries/XMCLib/src/xmc_can.c **** 
 654:../Libraries/XMCLib/src/xmc_can.c ****   }
 655:../Libraries/XMCLib/src/xmc_can.c **** }
 656:../Libraries/XMCLib/src/xmc_can.c **** 
 657:../Libraries/XMCLib/src/xmc_can.c **** /* Update of XMC_CAN Object */
 658:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_UpdateData(const XMC_CAN_MO_t *const can_mo)
 659:../Libraries/XMCLib/src/xmc_can.c **** {
 1350              	 .loc 1 659 0
 1351              	 .cfi_startproc
 1352              	.LVL150:
 1353 0000 30B5     	 push {r4,r5,lr}
 1354              	.LCFI14:
 1355              	 .cfi_def_cfa_offset 12
 1356              	 .cfi_offset 4,-12
 1357              	 .cfi_offset 5,-8
 1358              	 .cfi_offset 14,-4
 660:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 661:../Libraries/XMCLib/src/xmc_can.c ****   /* Check whether message object is transmit message object */
 662:../Libraries/XMCLib/src/xmc_can.c ****   if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 1359              	 .loc 1 662 0
 1360 0002 027E     	 ldrb r2,[r0,#24]
 659:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1361              	 .loc 1 659 0
 1362 0004 031C     	 mov r3,r0
 663:../Libraries/XMCLib/src/xmc_can.c ****   {
 664:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 665:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure data length */
 666:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR) & ~(uint32_t)(CAN_MO_MOFCR_DLC_Msk)) |
 667:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 668:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 669:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAL = can_mo->can_data[0];
 670:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAH = can_mo->can_data[1];
 671:../Libraries/XMCLib/src/xmc_can.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 672:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETNEWDAT_Msk| CAN_MO_MOCTR_SETMSGVAL_Msk |CAN_MO_MOC
 673:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 674:../Libraries/XMCLib/src/xmc_can.c ****   }
 675:../Libraries/XMCLib/src/xmc_can.c ****   else
 676:../Libraries/XMCLib/src/xmc_can.c ****   {
 677:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1363              	 .loc 1 677 0
 1364 0006 0320     	 mov r0,#3
 1365              	.LVL151:
 662:../Libraries/XMCLib/src/xmc_can.c ****   {
 1366              	 .loc 1 662 0
 1367 0008 012A     	 cmp r2,#1
 1368 000a 15D1     	 bne .L72
 1369              	.LVL152:
 1370              	.LBB87:
 1371              	.LBB88:
 664:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure data length */
 1372              	 .loc 1 664 0
 1373 000c 2021     	 mov r1,#32
 667:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 1374              	 .loc 1 667 0
 1375 000e F025     	 mov r5,#240
 664:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure data length */
 1376              	 .loc 1 664 0
 1377 0010 1A68     	 ldr r2,[r3]
 667:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 1378              	 .loc 1 667 0
 1379 0012 2D05     	 lsl r5,r5,#20
 664:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure data length */
 1380              	 .loc 1 664 0
 1381 0014 D161     	 str r1,[r2,#28]
 666:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1382              	 .loc 1 666 0
 1383 0016 1A68     	 ldr r2,[r3]
 667:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 1384              	 .loc 1 667 0
 1385 0018 1C7B     	 ldrb r4,[r3,#12]
 666:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1386              	 .loc 1 666 0
 1387 001a 1168     	 ldr r1,[r2]
 667:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 1388              	 .loc 1 667 0
 1389 001c 2406     	 lsl r4,r4,#24
 666:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1390              	 .loc 1 666 0
 1391 001e 0748     	 ldr r0,.L74
 667:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 1392              	 .loc 1 667 0
 1393 0020 2C40     	 and r4,r5
 666:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1394              	 .loc 1 666 0
 1395 0022 0840     	 and r0,r1
 1396 0024 211C     	 mov r1,r4
 1397 0026 0143     	 orr r1,r0
 672:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1398              	 .loc 1 672 0
 1399 0028 0020     	 mov r0,#0
 666:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1400              	 .loc 1 666 0
 1401 002a 1160     	 str r1,[r2]
 669:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAH = can_mo->can_data[1];
 1402              	 .loc 1 669 0
 1403 002c 1969     	 ldr r1,[r3,#16]
 1404 002e 1161     	 str r1,[r2,#16]
 670:../Libraries/XMCLib/src/xmc_can.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 1405              	 .loc 1 670 0
 1406 0030 5B69     	 ldr r3,[r3,#20]
 1407              	.LVL153:
 1408 0032 5361     	 str r3,[r2,#20]
 672:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1409              	 .loc 1 672 0
 1410 0034 024B     	 ldr r3,.L74+4
 1411 0036 D361     	 str r3,[r2,#28]
 1412              	.LVL154:
 1413              	.L72:
 1414              	.LBE88:
 1415              	.LBE87:
 678:../Libraries/XMCLib/src/xmc_can.c ****   }
 679:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 680:../Libraries/XMCLib/src/xmc_can.c **** }
 1416              	 .loc 1 680 0
 1417              	 
 1418 0038 30BD     	 pop {r4,r5,pc}
 1419              	.L75:
 1420 003a C046     	 .align 2
 1421              	.L74:
 1422 003c FFFFFFF0 	 .word -251658241
 1423 0040 40002800 	 .word 2621504
 1424              	 .cfi_endproc
 1425              	.LFE143:
 1427              	 .section .text.XMC_CAN_MO_Config,"ax",%progbits
 1428              	 .align 1
 1429              	 .global XMC_CAN_MO_Config
 1430              	 .code 16
 1431              	 .thumb_func
 1433              	XMC_CAN_MO_Config:
 1434              	.LFB142:
 595:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t reg;
 1435              	 .loc 1 595 0
 1436              	 .cfi_startproc
 1437              	.LVL155:
 1438 0000 38B5     	 push {r3,r4,r5,lr}
 1439              	.LCFI15:
 1440              	 .cfi_def_cfa_offset 16
 1441              	 .cfi_offset 3,-16
 1442              	 .cfi_offset 4,-12
 1443              	 .cfi_offset 5,-8
 1444              	 .cfi_offset 14,-4
 599:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t set = (((uint32_t)(num/32) << (CAN_MO_MOIPR_MPN_Pos + 5U)) | ((uint32_t)(num%32) << CAN_
 1445              	 .loc 1 599 0
 1446 0002 0168     	 ldr r1,[r0]
 1447 0004 1D4B     	 ldr r3,.L83
 601:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR |= set;
 1448              	 .loc 1 601 0
 1449 0006 8C68     	 ldr r4,[r1,#8]
 599:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t set = (((uint32_t)(num/32) << (CAN_MO_MOIPR_MPN_Pos + 5U)) | ((uint32_t)(num%32) << CAN_
 1450              	 .loc 1 599 0
 1451 0008 CB18     	 add r3,r1,r3
 1452              	.LVL156:
 601:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR |= set;
 1453              	 .loc 1 601 0
 1454 000a 1D4A     	 ldr r2,.L83+4
 600:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR &= ~(CAN_MO_MOIPR_MPN_Msk);
 1455              	 .loc 1 600 0
 1456 000c 9D0A     	 lsr r5,r3,#10
 601:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR |= set;
 1457              	 .loc 1 601 0
 1458 000e 2240     	 and r2,r4
 600:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR &= ~(CAN_MO_MOIPR_MPN_Msk);
 1459              	 .loc 1 600 0
 1460 0010 6D03     	 lsl r5,r5,#13
 601:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR |= set;
 1461              	 .loc 1 601 0
 1462 0012 8A60     	 str r2,[r1,#8]
 600:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR &= ~(CAN_MO_MOIPR_MPN_Msk);
 1463              	 .loc 1 600 0
 1464 0014 9A05     	 lsl r2,r3,#22
 1465 0016 2B1C     	 mov r3,r5
 1466              	.LVL157:
 1467 0018 D20E     	 lsr r2,r2,#27
 602:../Libraries/XMCLib/src/xmc_can.c ****   
 1468              	 .loc 1 602 0
 1469 001a 8C68     	 ldr r4,[r1,#8]
 600:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR &= ~(CAN_MO_MOIPR_MPN_Msk);
 1470              	 .loc 1 600 0
 1471 001c 1202     	 lsl r2,r2,#8
 1472 001e 1343     	 orr r3,r2
 602:../Libraries/XMCLib/src/xmc_can.c ****   
 1473              	 .loc 1 602 0
 1474 0020 2343     	 orr r3,r4
 1475 0022 8B60     	 str r3,[r1,#8]
 604:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1476              	 .loc 1 604 0
 1477 0024 037E     	 ldrb r3,[r0,#24]
 1478 0026 012B     	 cmp r3,#1
 1479 0028 27D8     	 bhi .L76
 615:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_id_mode == (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS)
 1480              	 .loc 1 615 0
 1481 002a 2024     	 mov r4,#32
 1482 002c CC61     	 str r4,[r1,#28]
 616:../Libraries/XMCLib/src/xmc_can.c ****     {
 1483              	 .loc 1 616 0
 1484 002e C179     	 ldrb r1,[r0,#7]
 1485              	.LVL158:
 1486 0030 0368     	 ldr r3,[r0]
 1487 0032 4268     	 ldr r2,[r0,#4]
 1488 0034 2142     	 tst r1,r4
 1489 0036 0AD1     	 bne .L78
 1490              	.LVL159:
 619:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_identifier << XMC_CAN_MO_MOAR_STDID_Pos);
 1491              	 .loc 1 619 0
 1492 0038 510F     	 lsr r1,r2,#29
 1493 003a 4907     	 lsl r1,r1,#29
 1494              	.LVL160:
 620:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = reg;
 1495              	 .loc 1 620 0
 1496 003c 9204     	 lsl r2,r2,#18
 1497 003e 0A43     	 orr r2,r1
 1498              	.LVL161:
 621:../Libraries/XMCLib/src/xmc_can.c **** 
 1499              	 .loc 1 621 0
 1500 0040 9A61     	 str r2,[r3,#24]
 623:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAMR_AM_Msk);
 1501              	 .loc 1 623 0
 1502 0042 8468     	 ldr r4,[r0,#8]
 1503              	.LVL162:
 624:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1504              	 .loc 1 624 0
 1505 0044 620F     	 lsr r2,r4,#29
 1506 0046 5107     	 lsl r1,r2,#29
 1507              	.LVL163:
 625:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = reg;
 1508              	 .loc 1 625 0
 1509 0048 A204     	 lsl r2,r4,#18
 1510 004a 0A43     	 orr r2,r1
 1511              	.LVL164:
 1512 004c 01E0     	 b .L81
 1513              	.LVL165:
 1514              	.L78:
 630:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = can_mo->mo_amr;
 1515              	 .loc 1 630 0
 1516 004e 9A61     	 str r2,[r3,#24]
 631:../Libraries/XMCLib/src/xmc_can.c ****     }
 1517              	 .loc 1 631 0
 1518 0050 8268     	 ldr r2,[r0,#8]
 1519              	.L81:
 1520 0052 DA60     	 str r2,[r3,#12]
 634:../Libraries/XMCLib/src/xmc_can.c ****     {
 1521              	 .loc 1 634 0
 1522 0054 027E     	 ldrb r2,[r0,#24]
 1523 0056 012A     	 cmp r2,#1
 1524 0058 09D1     	 bne .L80
 1525 005a 041C     	 mov r4,r0
 637:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_SETDIR_Msk;
 1526              	 .loc 1 637 0
 1527 005c FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 1528              	.LVL166:
 638:../Libraries/XMCLib/src/xmc_can.c **** 
 1529              	 .loc 1 638 0
 1530 0060 8022     	 mov r2,#128
 1531 0062 2368     	 ldr r3,[r4]
 1532 0064 1205     	 lsl r2,r2,#20
 1533 0066 DA61     	 str r2,[r3,#28]
 641:../Libraries/XMCLib/src/xmc_can.c ****                                    CAN_MO_MOCTR_RESRXEN_Msk  | CAN_MO_MOCTR_RESRTSEL_Msk);
 1534              	 .loc 1 641 0
 1535 0068 2368     	 ldr r3,[r4]
 1536 006a 064A     	 ldr r2,.L83+8
 1537 006c 04E0     	 b .L82
 1538              	.LVL167:
 1539              	.L80:
 647:../Libraries/XMCLib/src/xmc_can.c **** 
 1540              	 .loc 1 647 0
 1541 006e 8022     	 mov r2,#128
 1542 0070 1201     	 lsl r2,r2,#4
 1543 0072 DA61     	 str r2,[r3,#28]
 650:../Libraries/XMCLib/src/xmc_can.c ****                                    CAN_MO_MOCTR_SETRXEN_Msk | CAN_MO_MOCTR_RESRTSEL_Msk);
 1544              	 .loc 1 650 0
 1545 0074 0368     	 ldr r3,[r0]
 1546 0076 044A     	 ldr r2,.L83+12
 1547              	.LVL168:
 1548              	.L82:
 1549 0078 DA61     	 str r2,[r3,#28]
 1550              	.L76:
 655:../Libraries/XMCLib/src/xmc_can.c **** 
 1551              	 .loc 1 655 0
 1552              	 
 1553 007a 38BD     	 pop {r3,r4,r5,pc}
 1554              	.L84:
 1555              	 .align 2
 1556              	.L83:
 1557 007c 00F0FBAF 	 .word -1342443520
 1558 0080 FF00FFFF 	 .word -65281
 1559 0084 C0002006 	 .word 102760640
 1560 0088 4006A000 	 .word 10487360
 1561              	 .cfi_endproc
 1562              	.LFE142:
 1564              	 .section .text.XMC_CAN_MO_Transmit,"ax",%progbits
 1565              	 .align 1
 1566              	 .global XMC_CAN_MO_Transmit
 1567              	 .code 16
 1568              	 .thumb_func
 1570              	XMC_CAN_MO_Transmit:
 1571              	.LFB144:
 681:../Libraries/XMCLib/src/xmc_can.c **** 
 682:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will put a transmit request to transmit message object */
 683:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Transmit(const XMC_CAN_MO_t *const can_mo)
 684:../Libraries/XMCLib/src/xmc_can.c **** {
 1572              	 .loc 1 684 0
 1573              	 .cfi_startproc
 1574              	.LVL169:
 685:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 686:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)(((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 1575              	 .loc 1 686 0
 1576 0000 0368     	 ldr r3,[r0]
 687:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t) ((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_
 688:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 689:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 690:../Libraries/XMCLib/src/xmc_can.c ****   {
 691:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 1577              	 .loc 1 691 0
 1578 0002 0420     	 mov r0,#4
 1579              	.LVL170:
 686:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t) ((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_
 1580              	 .loc 1 686 0
 1581 0004 D969     	 ldr r1,[r3,#28]
 1582              	.LVL171:
 687:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t) ((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_
 1583              	 .loc 1 687 0
 1584 0006 DA69     	 ldr r2,[r3,#28]
 1585              	.LVL172:
 689:../Libraries/XMCLib/src/xmc_can.c ****   {
 1586              	 .loc 1 689 0
 1587 0008 8906     	 lsl r1,r1,#26
 1588 000a 06D5     	 bpl .L86
 1589              	.LVL173:
 692:../Libraries/XMCLib/src/xmc_can.c ****   }
 693:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 694:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 695:../Libraries/XMCLib/src/xmc_can.c ****   {
 696:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 1590              	 .loc 1 696 0
 1591 000c 0238     	 sub r0,r0,#2
 694:../Libraries/XMCLib/src/xmc_can.c ****   {
 1592              	 .loc 1 694 0
 1593 000e D205     	 lsl r2,r2,#23
 1594 0010 03D4     	 bmi .L86
 1595              	.LVL174:
 697:../Libraries/XMCLib/src/xmc_can.c ****   }
 698:../Libraries/XMCLib/src/xmc_can.c ****   else
 699:../Libraries/XMCLib/src/xmc_can.c ****   {
 700:../Libraries/XMCLib/src/xmc_can.c ****     /* set TXRQ bit */
 701:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr-> MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCT
 1596              	 .loc 1 701 0
 1597 0012 E022     	 mov r2,#224
 702:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1598              	 .loc 1 702 0
 1599 0014 0020     	 mov r0,#0
 701:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1600              	 .loc 1 701 0
 1601 0016 D204     	 lsl r2,r2,#19
 1602 0018 DA61     	 str r2,[r3,#28]
 1603              	.LVL175:
 1604              	.L86:
 703:../Libraries/XMCLib/src/xmc_can.c ****   }
 704:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 705:../Libraries/XMCLib/src/xmc_can.c **** }
 1605              	 .loc 1 705 0
 1606              	 
 1607 001a 7047     	 bx lr
 1608              	 .cfi_endproc
 1609              	.LFE144:
 1611              	 .section .text.XMC_CAN_MO_ReceiveData,"ax",%progbits
 1612              	 .align 1
 1613              	 .global XMC_CAN_MO_ReceiveData
 1614              	 .code 16
 1615              	 .thumb_func
 1617              	XMC_CAN_MO_ReceiveData:
 1618              	.LFB145:
 706:../Libraries/XMCLib/src/xmc_can.c **** 
 707:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 708:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_ReceiveData (XMC_CAN_MO_t *can_mo)
 709:../Libraries/XMCLib/src/xmc_can.c **** {
 1619              	 .loc 1 709 0
 1620              	 .cfi_startproc
 1621              	.LVL176:
 1622 0000 10B5     	 push {r4,lr}
 1623              	.LCFI16:
 1624              	 .cfi_def_cfa_offset 8
 1625              	 .cfi_offset 4,-8
 1626              	 .cfi_offset 14,-4
 710:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 711:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 712:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 713:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 1627              	 .loc 1 713 0
 1628 0002 0168     	 ldr r1,[r0]
 709:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 1629              	 .loc 1 709 0
 1630 0004 041C     	 mov r4,r0
 1631              	 .loc 1 713 0
 1632 0006 CA69     	 ldr r2,[r1,#28]
 1633              	.LVL177:
 714:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 715:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 716:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 717:../Libraries/XMCLib/src/xmc_can.c ****   {
 718:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1634              	 .loc 1 718 0
 1635 0008 0320     	 mov r0,#3
 1636              	.LVL178:
 714:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 1637              	 .loc 1 714 0
 1638 000a CB69     	 ldr r3,[r1,#28]
 1639              	.LVL179:
 716:../Libraries/XMCLib/src/xmc_can.c ****   {
 1640              	 .loc 1 716 0
 1641 000c 1205     	 lsl r2,r2,#20
 1642 000e 12D4     	 bmi .L92
 1643              	.LVL180:
 719:../Libraries/XMCLib/src/xmc_can.c ****   }
 720:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 721:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 722:../Libraries/XMCLib/src/xmc_can.c ****   {
 723:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 1644              	 .loc 1 723 0
 1645 0010 0138     	 sub r0,r0,#1
 721:../Libraries/XMCLib/src/xmc_can.c ****   {
 1646              	 .loc 1 721 0
 1647 0012 5B07     	 lsl r3,r3,#29
 1648 0014 0FD4     	 bmi .L92
 1649              	.LVL181:
 1650              	.L93:
 724:../Libraries/XMCLib/src/xmc_can.c ****   }
 725:../Libraries/XMCLib/src/xmc_can.c ****   else
 726:../Libraries/XMCLib/src/xmc_can.c ****   {
 727:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 728:../Libraries/XMCLib/src/xmc_can.c ****     do
 729:../Libraries/XMCLib/src/xmc_can.c ****     {
 730:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 1651              	 .loc 1 730 0 discriminator 2
 1652 0016 0B69     	 ldr r3,[r1,#16]
 1653 0018 2361     	 str r3,[r4,#16]
 731:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 1654              	 .loc 1 731 0 discriminator 2
 1655 001a 4B69     	 ldr r3,[r1,#20]
 1656 001c 6361     	 str r3,[r4,#20]
 732:../Libraries/XMCLib/src/xmc_can.c **** 
 733:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 1657              	 .loc 1 733 0 discriminator 2
 1658 001e CB69     	 ldr r3,[r1,#28]
 1659              	.LVL182:
 734:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 1660              	 .loc 1 734 0 discriminator 2
 1661 0020 CA69     	 ldr r2,[r1,#28]
 733:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 1662              	 .loc 1 733 0 discriminator 2
 1663 0022 5B07     	 lsl r3,r3,#29
 1664              	.LVL183:
 1665              	 .loc 1 734 0 discriminator 2
 1666 0024 1207     	 lsl r2,r2,#28
 1667 0026 D20F     	 lsr r2,r2,#31
 1668              	.LVL184:
 733:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 1669              	 .loc 1 733 0 discriminator 2
 1670 0028 DB0F     	 lsr r3,r3,#31
 735:../Libraries/XMCLib/src/xmc_can.c ****     } while ((rx_pnd != 0U) && (new_data != 0U));
 1671              	 .loc 1 735 0 discriminator 2
 1672 002a 03D0     	 beq .L96
 1673              	 .loc 1 735 0 is_stmt 0 discriminator 1
 1674 002c 002A     	 cmp r2,#0
 1675 002e F2D1     	 bne .L93
 736:../Libraries/XMCLib/src/xmc_can.c **** 
 737:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1676              	 .loc 1 737 0 is_stmt 1
 1677 0030 101C     	 mov r0,r2
 1678 0032 00E0     	 b .L92
 1679              	.L96:
 1680 0034 181C     	 mov r0,r3
 1681              	.LVL185:
 1682              	.L92:
 738:../Libraries/XMCLib/src/xmc_can.c ****   }
 739:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 740:../Libraries/XMCLib/src/xmc_can.c **** }
 1683              	 .loc 1 740 0
 1684              	 
 1685              	.LVL186:
 1686 0036 10BD     	 pop {r4,pc}
 1687              	 .cfi_endproc
 1688              	.LFE145:
 1690              	 .section .text.XMC_CAN_MO_Receive,"ax",%progbits
 1691              	 .align 1
 1692              	 .global XMC_CAN_MO_Receive
 1693              	 .code 16
 1694              	 .thumb_func
 1696              	XMC_CAN_MO_Receive:
 1697              	.LFB146:
 741:../Libraries/XMCLib/src/xmc_can.c **** 
 742:../Libraries/XMCLib/src/xmc_can.c **** 
 743:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 744:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Receive (XMC_CAN_MO_t *can_mo)
 745:../Libraries/XMCLib/src/xmc_can.c **** {
 1698              	 .loc 1 745 0
 1699              	 .cfi_startproc
 1700              	.LVL187:
 1701 0000 70B5     	 push {r4,r5,r6,lr}
 1702              	.LCFI17:
 1703              	 .cfi_def_cfa_offset 16
 1704              	 .cfi_offset 4,-16
 1705              	 .cfi_offset 5,-12
 1706              	 .cfi_offset 6,-8
 1707              	 .cfi_offset 14,-4
 746:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 747:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 748:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 749:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 1708              	 .loc 1 749 0
 1709 0002 0268     	 ldr r2,[r0]
 745:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 1710              	 .loc 1 745 0
 1711 0004 031C     	 mov r3,r0
 1712              	 .loc 1 749 0
 1713 0006 D169     	 ldr r1,[r2,#28]
 1714              	.LVL188:
 750:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 751:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 752:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 753:../Libraries/XMCLib/src/xmc_can.c ****   {
 754:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1715              	 .loc 1 754 0
 1716 0008 0320     	 mov r0,#3
 1717              	.LVL189:
 750:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 1718              	 .loc 1 750 0
 1719 000a D269     	 ldr r2,[r2,#28]
 1720              	.LVL190:
 752:../Libraries/XMCLib/src/xmc_can.c ****   {
 1721              	 .loc 1 752 0
 1722 000c 0905     	 lsl r1,r1,#20
 1723 000e 5FD4     	 bmi .L99
 1724              	.LVL191:
 755:../Libraries/XMCLib/src/xmc_can.c ****   }
 756:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 757:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 758:../Libraries/XMCLib/src/xmc_can.c ****   {
 759:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 1725              	 .loc 1 759 0
 1726 0010 0138     	 sub r0,r0,#1
 757:../Libraries/XMCLib/src/xmc_can.c ****   {
 1727              	 .loc 1 757 0
 1728 0012 5207     	 lsl r2,r2,#29
 1729 0014 5CD4     	 bmi .L99
 1730              	.LVL192:
 1731              	.L104:
 760:../Libraries/XMCLib/src/xmc_can.c ****   }
 761:../Libraries/XMCLib/src/xmc_can.c ****   else
 762:../Libraries/XMCLib/src/xmc_can.c ****   {
 763:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 764:../Libraries/XMCLib/src/xmc_can.c ****     do
 765:../Libraries/XMCLib/src/xmc_can.c ****     {
 766:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESNEWDAT_Msk;
 1732              	 .loc 1 766 0
 1733 0016 0821     	 mov r1,#8
 1734 0018 1A68     	 ldr r2,[r3]
 1735 001a 2024     	 mov r4,#32
 1736 001c D161     	 str r1,[r2,#28]
 767:../Libraries/XMCLib/src/xmc_can.c ****       if ((((can_mo->can_mo_ptr->MOAR) & CAN_MO_MOAR_IDE_Msk) >> CAN_MO_MOAR_IDE_Pos) == 0U)
 1737              	 .loc 1 767 0
 1738 001e 8021     	 mov r1,#128
 1739 0020 1A68     	 ldr r2,[r3]
 1740 0022 8905     	 lsl r1,r1,#22
 1741 0024 9569     	 ldr r5,[r2,#24]
 1742 0026 D879     	 ldrb r0,[r3,#7]
 1743 0028 0D42     	 tst r5,r1
 1744 002a 25D1     	 bne .L100
 768:../Libraries/XMCLib/src/xmc_can.c ****       {
 769:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS;
 1745              	 .loc 1 769 0
 1746 002c A043     	 bic r0,r4
 1747 002e D871     	 strb r0,[r3,#7]
 770:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & XMC_CAN_MO_MOAR_STDID_Msk) >> XMC_CAN_
 1748              	 .loc 1 770 0
 1749 0030 9069     	 ldr r0,[r2,#24]
 1750 0032 284E     	 ldr r6,.L111
 1751 0034 3040     	 and r0,r6
 1752 0036 850C     	 lsr r5,r0,#18
 1753 0038 5868     	 ldr r0,[r3,#4]
 1754 003a 400F     	 lsr r0,r0,#29
 1755 003c 4007     	 lsl r0,r0,#29
 1756 003e 2843     	 orr r0,r5
 1757 0040 5860     	 str r0,[r3,#4]
 771:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 1758              	 .loc 1 771 0
 1759 0042 D568     	 ldr r5,[r2,#12]
 1760 0044 2940     	 and r1,r5
 1761 0046 490F     	 lsr r1,r1,#29
 1762 0048 4D01     	 lsl r5,r1,#5
 1763 004a D97A     	 ldrb r1,[r3,#11]
 1764 004c A143     	 bic r1,r4
 1765 004e 2943     	 orr r1,r5
 1766 0050 D972     	 strb r1,[r3,#11]
 1767 0052 9868     	 ldr r0,[r3,#8]
 772:../Libraries/XMCLib/src/xmc_can.c ****         if(can_mo->can_ide_mask == 1U)
 1768              	 .loc 1 772 0
 1769 0054 2142     	 tst r1,r4
 1770 0056 07D0     	 beq .L101
 773:../Libraries/XMCLib/src/xmc_can.c ****         {
 774:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & XMC_CAN_MO_MOAR_STDID_Msk) >
 1771              	 .loc 1 774 0
 1772 0058 D168     	 ldr r1,[r2,#12]
 1773 005a 0E40     	 and r6,r1
 1774 005c B10C     	 lsr r1,r6,#18
 1775 005e 460F     	 lsr r6,r0,#29
 1776 0060 7607     	 lsl r6,r6,#29
 1777 0062 0E43     	 orr r6,r1
 1778 0064 9E60     	 str r6,[r3,#8]
 1779 0066 21E0     	 b .L102
 1780              	.L101:
 775:../Libraries/XMCLib/src/xmc_can.c ****         }
 776:../Libraries/XMCLib/src/xmc_can.c ****         else
 777:../Libraries/XMCLib/src/xmc_can.c ****         {
 778:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 1781              	 .loc 1 778 0
 1782 0068 D168     	 ldr r1,[r2,#12]
 1783 006a 400F     	 lsr r0,r0,#29
 1784 006c C900     	 lsl r1,r1,#3
 1785 006e C908     	 lsr r1,r1,#3
 1786 0070 4007     	 lsl r0,r0,#29
 1787 0072 0843     	 orr r0,r1
 1788 0074 9860     	 str r0,[r3,#8]
 1789 0076 19E0     	 b .L102
 1790              	.L100:
 779:../Libraries/XMCLib/src/xmc_can.c ****         }
 780:../Libraries/XMCLib/src/xmc_can.c ****       }
 781:../Libraries/XMCLib/src/xmc_can.c ****       else
 782:../Libraries/XMCLib/src/xmc_can.c ****       {
 783:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_EXTENDED_29BITS;
 1791              	 .loc 1 783 0
 1792 0078 2043     	 orr r0,r4
 1793 007a D871     	 strb r0,[r3,#7]
 784:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_ID_Msk);
 1794              	 .loc 1 784 0
 1795 007c 9069     	 ldr r0,[r2,#24]
 1796 007e C000     	 lsl r0,r0,#3
 1797 0080 C508     	 lsr r5,r0,#3
 1798 0082 5868     	 ldr r0,[r3,#4]
 1799 0084 400F     	 lsr r0,r0,#29
 1800 0086 4007     	 lsl r0,r0,#29
 1801 0088 2843     	 orr r0,r5
 1802 008a 5860     	 str r0,[r3,#4]
 785:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 1803              	 .loc 1 785 0
 1804 008c D068     	 ldr r0,[r2,#12]
 1805 008e C000     	 lsl r0,r0,#3
 1806 0090 C508     	 lsr r5,r0,#3
 1807 0092 9868     	 ldr r0,[r3,#8]
 1808 0094 400F     	 lsr r0,r0,#29
 1809 0096 4007     	 lsl r0,r0,#29
 1810 0098 2843     	 orr r0,r5
 1811 009a 9860     	 str r0,[r3,#8]
 786:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 1812              	 .loc 1 786 0
 1813 009c D068     	 ldr r0,[r2,#12]
 1814 009e 0140     	 and r1,r0
 1815 00a0 490F     	 lsr r1,r1,#29
 1816 00a2 4801     	 lsl r0,r1,#5
 1817 00a4 D97A     	 ldrb r1,[r3,#11]
 1818 00a6 A143     	 bic r1,r4
 1819 00a8 0143     	 orr r1,r0
 1820 00aa D972     	 strb r1,[r3,#11]
 1821              	.L102:
 787:../Libraries/XMCLib/src/xmc_can.c ****       }
 788:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data_length = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOFCR) & CAN_MO_MOFCR_DLC
 1822              	 .loc 1 788 0
 1823 00ac 1168     	 ldr r1,[r2]
 1824 00ae 0901     	 lsl r1,r1,#4
 1825 00b0 090F     	 lsr r1,r1,#28
 1826 00b2 1973     	 strb r1,[r3,#12]
 789:../Libraries/XMCLib/src/xmc_can.c **** 
 790:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 1827              	 .loc 1 790 0
 1828 00b4 1169     	 ldr r1,[r2,#16]
 1829 00b6 1961     	 str r1,[r3,#16]
 791:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 1830              	 .loc 1 791 0
 1831 00b8 5169     	 ldr r1,[r2,#20]
 1832 00ba 5961     	 str r1,[r3,#20]
 792:../Libraries/XMCLib/src/xmc_can.c **** 
 793:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 1833              	 .loc 1 793 0
 1834 00bc D169     	 ldr r1,[r2,#28]
 1835              	.LVL193:
 794:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 1836              	 .loc 1 794 0
 1837 00be D269     	 ldr r2,[r2,#28]
 1838 00c0 1207     	 lsl r2,r2,#28
 1839 00c2 D20F     	 lsr r2,r2,#31
 1840              	.LVL194:
 795:../Libraries/XMCLib/src/xmc_can.c ****     } while ((rx_pnd != 0U) && (new_data != 0U));
 1841              	 .loc 1 795 0
 1842 00c4 4907     	 lsl r1,r1,#29
 1843 00c6 01D5     	 bpl .L103
 1844              	.LVL195:
 1845              	 .loc 1 795 0 is_stmt 0 discriminator 1
 1846 00c8 002A     	 cmp r2,#0
 1847 00ca A4D1     	 bne .L104
 1848              	.L103:
 796:../Libraries/XMCLib/src/xmc_can.c **** 
 797:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_type = XMC_CAN_MO_TYPE_RECMSGOBJ;
 1849              	 .loc 1 797 0 is_stmt 1
 1850 00cc 0020     	 mov r0,#0
 1851 00ce 1876     	 strb r0,[r3,#24]
 1852              	.LVL196:
 1853              	.L99:
 798:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 799:../Libraries/XMCLib/src/xmc_can.c ****   }
 800:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 801:../Libraries/XMCLib/src/xmc_can.c **** }
 1854              	 .loc 1 801 0
 1855              	 
 1856 00d0 70BD     	 pop {r4,r5,r6,pc}
 1857              	.L112:
 1858 00d2 C046     	 .align 2
 1859              	.L111:
 1860 00d4 0000FC1F 	 .word 536608768
 1861              	 .cfi_endproc
 1862              	.LFE146:
 1864              	 .section .text.XMC_CAN_NODE_EnableEvent,"ax",%progbits
 1865              	 .align 1
 1866              	 .global XMC_CAN_NODE_EnableEvent
 1867              	 .code 16
 1868              	 .thumb_func
 1870              	XMC_CAN_NODE_EnableEvent:
 1871              	.LFB147:
 802:../Libraries/XMCLib/src/xmc_can.c **** 
 803:../Libraries/XMCLib/src/xmc_can.c **** /* Function to enable node event */
 804:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 805:../Libraries/XMCLib/src/xmc_can.c **** {
 1872              	 .loc 1 805 0
 1873              	 .cfi_startproc
 1874              	.LVL197:
 806:../Libraries/XMCLib/src/xmc_can.c ****   if(event != XMC_CAN_NODE_EVENT_CFCIE)
 1875              	 .loc 1 806 0
 1876 0000 8023     	 mov r3,#128
 1877 0002 DB03     	 lsl r3,r3,#15
 1878 0004 9942     	 cmp r1,r3
 1879 0006 03D0     	 beq .L114
 807:../Libraries/XMCLib/src/xmc_can.c ****   {
 808:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR |= (uint32_t)event;
 1880              	 .loc 1 808 0
 1881 0008 0368     	 ldr r3,[r0]
 1882 000a 1943     	 orr r1,r3
 1883              	.LVL198:
 1884 000c 0160     	 str r1,[r0]
 1885 000e 02E0     	 b .L113
 1886              	.LVL199:
 1887              	.L114:
 809:../Libraries/XMCLib/src/xmc_can.c ****   }
 810:../Libraries/XMCLib/src/xmc_can.c ****   else
 811:../Libraries/XMCLib/src/xmc_can.c ****   {
 812:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR |= (uint32_t)event;
 1888              	 .loc 1 812 0
 1889 0010 8369     	 ldr r3,[r0,#24]
 1890 0012 1943     	 orr r1,r3
 1891              	.LVL200:
 1892 0014 8161     	 str r1,[r0,#24]
 1893              	.L113:
 813:../Libraries/XMCLib/src/xmc_can.c ****   }
 814:../Libraries/XMCLib/src/xmc_can.c **** }
 1894              	 .loc 1 814 0
 1895              	 
 1896 0016 7047     	 bx lr
 1897              	 .cfi_endproc
 1898              	.LFE147:
 1900              	 .section .text.XMC_CAN_NODE_DisableEvent,"ax",%progbits
 1901              	 .align 1
 1902              	 .global XMC_CAN_NODE_DisableEvent
 1903              	 .code 16
 1904              	 .thumb_func
 1906              	XMC_CAN_NODE_DisableEvent:
 1907              	.LFB148:
 815:../Libraries/XMCLib/src/xmc_can.c **** 
 816:../Libraries/XMCLib/src/xmc_can.c **** /* Function to disable node event */
 817:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 818:../Libraries/XMCLib/src/xmc_can.c **** {
 1908              	 .loc 1 818 0
 1909              	 .cfi_startproc
 1910              	.LVL201:
 819:../Libraries/XMCLib/src/xmc_can.c ****   if(event != XMC_CAN_NODE_EVENT_CFCIE)
 1911              	 .loc 1 819 0
 1912 0000 8023     	 mov r3,#128
 1913 0002 DB03     	 lsl r3,r3,#15
 1914 0004 9942     	 cmp r1,r3
 1915 0006 03D0     	 beq .L117
 820:../Libraries/XMCLib/src/xmc_can.c ****   {
 821:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR &= ~(uint32_t)event;
 1916              	 .loc 1 821 0
 1917 0008 0368     	 ldr r3,[r0]
 1918 000a 8B43     	 bic r3,r1
 1919 000c 0360     	 str r3,[r0]
 1920 000e 03E0     	 b .L116
 1921              	.L117:
 822:../Libraries/XMCLib/src/xmc_can.c ****   }
 823:../Libraries/XMCLib/src/xmc_can.c ****   else
 824:../Libraries/XMCLib/src/xmc_can.c ****   {
 825:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR &= ~(uint32_t)event;
 1922              	 .loc 1 825 0
 1923 0010 8269     	 ldr r2,[r0,#24]
 1924 0012 024B     	 ldr r3,.L119
 1925 0014 1340     	 and r3,r2
 1926 0016 8361     	 str r3,[r0,#24]
 1927              	.L116:
 826:../Libraries/XMCLib/src/xmc_can.c ****   }
 827:../Libraries/XMCLib/src/xmc_can.c **** }
 1928              	 .loc 1 827 0
 1929              	 
 1930 0018 7047     	 bx lr
 1931              	.L120:
 1932 001a C046     	 .align 2
 1933              	.L119:
 1934 001c FFFFBFFF 	 .word -4194305
 1935              	 .cfi_endproc
 1936              	.LFE148:
 1938              	 .section .text.XMC_CAN_TXFIFO_Transmit,"ax",%progbits
 1939              	 .align 1
 1940              	 .global XMC_CAN_TXFIFO_Transmit
 1941              	 .code 16
 1942              	 .thumb_func
 1944              	XMC_CAN_TXFIFO_Transmit:
 1945              	.LFB149:
 828:../Libraries/XMCLib/src/xmc_can.c **** /* Function to transmit MO from the FIFO */
 829:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_TXFIFO_Transmit(const XMC_CAN_MO_t *const can_mo)
 830:../Libraries/XMCLib/src/xmc_can.c **** {
 1946              	 .loc 1 830 0
 1947              	 .cfi_startproc
 1948              	.LVL202:
 831:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 832:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = ((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 1949              	 .loc 1 832 0
 1950 0000 0368     	 ldr r3,[r0]
 833:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_M
 834:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_cur =  (uint32_t)(can_mo->can_mo_ptr-> MOFGPR & CAN_MO_MOFGPR_CUR_Msk) >> CAN_MO_MOFG
 835:../Libraries/XMCLib/src/xmc_can.c ****   CAN_MO_TypeDef*  mo = (CAN_MO_TypeDef *)(CAN_BASE + 0x1000UL + (mo_cur * 0x0020UL));
 836:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 837:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 838:../Libraries/XMCLib/src/xmc_can.c ****   {
 839:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 1951              	 .loc 1 839 0
 1952 0002 0420     	 mov r0,#4
 1953              	.LVL203:
 832:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_M
 1954              	 .loc 1 832 0
 1955 0004 D969     	 ldr r1,[r3,#28]
 1956              	.LVL204:
 833:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_M
 1957              	 .loc 1 833 0
 1958 0006 DA69     	 ldr r2,[r3,#28]
 1959              	.LVL205:
 834:../Libraries/XMCLib/src/xmc_can.c ****   CAN_MO_TypeDef*  mo = (CAN_MO_TypeDef *)(CAN_BASE + 0x1000UL + (mo_cur * 0x0020UL));
 1960              	 .loc 1 834 0
 1961 0008 5B68     	 ldr r3,[r3,#4]
 1962              	.LVL206:
 837:../Libraries/XMCLib/src/xmc_can.c ****   {
 1963              	 .loc 1 837 0
 1964 000a 8906     	 lsl r1,r1,#26
 1965 000c 0BD5     	 bpl .L122
 1966              	.LVL207:
 840:../Libraries/XMCLib/src/xmc_can.c ****   }
 841:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 842:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 843:../Libraries/XMCLib/src/xmc_can.c ****   {
 844:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 1967              	 .loc 1 844 0
 1968 000e 0238     	 sub r0,r0,#2
 842:../Libraries/XMCLib/src/xmc_can.c ****   {
 1969              	 .loc 1 842 0
 1970 0010 D205     	 lsl r2,r2,#23
 1971 0012 08D4     	 bmi .L122
 1972              	.LVL208:
 835:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 1973              	 .loc 1 835 0
 1974 0014 044A     	 ldr r2,.L127
 834:../Libraries/XMCLib/src/xmc_can.c ****   CAN_MO_TypeDef*  mo = (CAN_MO_TypeDef *)(CAN_BASE + 0x1000UL + (mo_cur * 0x0020UL));
 1975              	 .loc 1 834 0
 1976 0016 1B02     	 lsl r3,r3,#8
 1977              	.LVL209:
 1978 0018 1B0E     	 lsr r3,r3,#24
 835:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 1979              	 .loc 1 835 0
 1980 001a 9B18     	 add r3,r3,r2
 845:../Libraries/XMCLib/src/xmc_can.c ****   }
 846:../Libraries/XMCLib/src/xmc_can.c ****   else
 847:../Libraries/XMCLib/src/xmc_can.c ****   {
 848:../Libraries/XMCLib/src/xmc_can.c ****     mo->MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk;
 1981              	 .loc 1 848 0
 1982 001c E022     	 mov r2,#224
 849:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1983              	 .loc 1 849 0
 1984 001e 0020     	 mov r0,#0
 835:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 1985              	 .loc 1 835 0
 1986 0020 5B01     	 lsl r3,r3,#5
 848:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1987              	 .loc 1 848 0
 1988 0022 D204     	 lsl r2,r2,#19
 1989 0024 DA61     	 str r2,[r3,#28]
 1990              	.LVL210:
 1991              	.L122:
 850:../Libraries/XMCLib/src/xmc_can.c ****   }
 851:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 852:../Libraries/XMCLib/src/xmc_can.c **** }
 1992              	 .loc 1 852 0
 1993              	 
 1994 0026 7047     	 bx lr
 1995              	.L128:
 1996              	 .align 2
 1997              	.L127:
 1998 0028 80208002 	 .word 41951360
 1999              	 .cfi_endproc
 2000              	.LFE149:
 2002              	 .section .text.XMC_CAN_TXFIFO_ConfigMOBaseObject,"ax",%progbits
 2003              	 .align 1
 2004              	 .global XMC_CAN_TXFIFO_ConfigMOBaseObject
 2005              	 .code 16
 2006              	 .thumb_func
 2008              	XMC_CAN_TXFIFO_ConfigMOBaseObject:
 2009              	.LFB150:
 853:../Libraries/XMCLib/src/xmc_can.c **** 
 854:../Libraries/XMCLib/src/xmc_can.c **** /* Function to initialize the transmit FIFO MO base object */
 855:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_t
 856:../Libraries/XMCLib/src/xmc_can.c **** {
 2010              	 .loc 1 856 0
 2011              	 .cfi_startproc
 2012              	.LVL211:
 2013 0000 82B0     	 sub sp,sp,#8
 2014              	.LCFI18:
 2015              	 .cfi_def_cfa_offset 8
 2016              	 .loc 1 856 0
 2017 0002 0191     	 str r1,[sp,#4]
 857:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2018              	 .loc 1 857 0
 2019 0004 0168     	 ldr r1,[r0]
 2020 0006 0F20     	 mov r0,#15
 2021              	.LVL212:
 2022 0008 0B68     	 ldr r3,[r1]
 856:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2023              	 .loc 1 856 0
 2024 000a 01AA     	 add r2,sp,#4
 2025              	 .loc 1 857 0
 2026 000c 8343     	 bic r3,r0
 2027 000e 0D38     	 sub r0,r0,#13
 2028 0010 0343     	 orr r3,r0
 2029 0012 0B60     	 str r3,[r1]
 858:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x2U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 859:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_BOT_Msk |
 2030              	 .loc 1 859 0
 2031 0014 4B68     	 ldr r3,[r1,#4]
 860:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 861:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_CUR_Msk)) |
 862:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2032              	 .loc 1 862 0
 2033 0016 1078     	 ldrb r0,[r2]
 859:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 2034              	 .loc 1 859 0
 2035 0018 1B0E     	 lsr r3,r3,#24
 2036 001a 1B06     	 lsl r3,r3,#24
 2037 001c 0343     	 orr r3,r0
 863:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 864:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 2038              	 .loc 1 864 0
 2039 001e 5078     	 ldrb r0,[r2,#1]
 863:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2040              	 .loc 1 863 0
 2041 0020 9278     	 ldrb r2,[r2,#2]
 2042              	 .loc 1 864 0
 2043 0022 0002     	 lsl r0,r0,#8
 2044 0024 0343     	 orr r3,r0
 863:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2045              	 .loc 1 863 0
 2046 0026 1204     	 lsl r2,r2,#16
 2047 0028 1343     	 orr r3,r2
 859:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 2048              	 .loc 1 859 0
 2049 002a 4B60     	 str r3,[r1,#4]
 865:../Libraries/XMCLib/src/xmc_can.c **** }
 2050              	 .loc 1 865 0
 2051 002c 02B0     	 add sp,sp,#8
 2052              	 
 2053 002e 7047     	 bx lr
 2054              	 .cfi_endproc
 2055              	.LFE150:
 2057              	 .section .text.XMC_CAN_RXFIFO_ConfigMOBaseObject,"ax",%progbits
 2058              	 .align 1
 2059              	 .global XMC_CAN_RXFIFO_ConfigMOBaseObject
 2060              	 .code 16
 2061              	 .thumb_func
 2063              	XMC_CAN_RXFIFO_ConfigMOBaseObject:
 2064              	.LFB151:
 866:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the receive FIFO MO base object */
 867:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_RXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_t
 868:../Libraries/XMCLib/src/xmc_can.c **** {
 2065              	 .loc 1 868 0
 2066              	 .cfi_startproc
 2067              	.LVL213:
 2068 0000 82B0     	 sub sp,sp,#8
 2069              	.LCFI19:
 2070              	 .cfi_def_cfa_offset 8
 2071              	 .loc 1 868 0
 2072 0002 0191     	 str r1,[sp,#4]
 869:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2073              	 .loc 1 869 0
 2074 0004 0168     	 ldr r1,[r0]
 2075 0006 0F20     	 mov r0,#15
 2076              	.LVL214:
 2077 0008 0B68     	 ldr r3,[r1]
 868:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2078              	 .loc 1 868 0
 2079 000a 01AA     	 add r2,sp,#4
 2080              	 .loc 1 869 0
 2081 000c 8343     	 bic r3,r0
 2082 000e 0E38     	 sub r0,r0,#14
 2083 0010 0343     	 orr r3,r0
 2084 0012 0B60     	 str r3,[r1]
 870:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x1U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 871:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~( uint32_t)(CAN_MO_MOFGPR_BOT_Msk 
 2085              	 .loc 1 871 0
 2086 0014 4B68     	 ldr r3,[r1,#4]
 872:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 873:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_CUR_Msk)) |
 874:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2087              	 .loc 1 874 0
 2088 0016 1078     	 ldrb r0,[r2]
 871:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 2089              	 .loc 1 871 0
 2090 0018 1B0E     	 lsr r3,r3,#24
 2091 001a 1B06     	 lsl r3,r3,#24
 2092 001c 0343     	 orr r3,r0
 875:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 876:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 2093              	 .loc 1 876 0
 2094 001e 5078     	 ldrb r0,[r2,#1]
 875:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2095              	 .loc 1 875 0
 2096 0020 9278     	 ldrb r2,[r2,#2]
 2097              	 .loc 1 876 0
 2098 0022 0002     	 lsl r0,r0,#8
 2099 0024 0343     	 orr r3,r0
 875:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2100              	 .loc 1 875 0
 2101 0026 1204     	 lsl r2,r2,#16
 2102 0028 1343     	 orr r3,r2
 871:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 2103              	 .loc 1 871 0
 2104 002a 4B60     	 str r3,[r1,#4]
 877:../Libraries/XMCLib/src/xmc_can.c **** }
 2105              	 .loc 1 877 0
 2106 002c 02B0     	 add sp,sp,#8
 2107              	 
 2108 002e 7047     	 bx lr
 2109              	 .cfi_endproc
 2110              	.LFE151:
 2112              	 .section .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject,"ax",%progbits
 2113              	 .align 1
 2114              	 .global XMC_CAN_TXFIFO_ConfigMOSlaveObject
 2115              	 .code 16
 2116              	 .thumb_func
 2118              	XMC_CAN_TXFIFO_ConfigMOSlaveObject:
 2119              	.LFB152:
 878:../Libraries/XMCLib/src/xmc_can.c **** 
 879:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the FIFO MO slave object */
 880:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOSlaveObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_
 881:../Libraries/XMCLib/src/xmc_can.c **** {
 2120              	 .loc 1 881 0
 2121              	 .cfi_startproc
 2122              	.LVL215:
 2123 0000 82B0     	 sub sp,sp,#8
 2124              	.LCFI20:
 2125              	 .cfi_def_cfa_offset 8
 2126              	 .loc 1 881 0
 2127 0002 0191     	 str r1,[sp,#4]
 882:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2128              	 .loc 1 882 0
 2129 0004 0F21     	 mov r1,#15
 2130 0006 0368     	 ldr r3,[r0]
 2131 0008 1A68     	 ldr r2,[r3]
 2132 000a 8A43     	 bic r2,r1
 2133 000c 0C39     	 sub r1,r1,#12
 2134 000e 0A43     	 orr r2,r1
 2135 0010 1A60     	 str r2,[r3]
 883:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x3U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 884:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_CUR_Msk))
 885:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2136              	 .loc 1 885 0
 2137 0012 01A9     	 add r1,sp,#4
 2138 0014 8878     	 ldrb r0,[r1,#2]
 2139              	.LVL216:
 884:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2140              	 .loc 1 884 0
 2141 0016 5A68     	 ldr r2,[r3,#4]
 2142 0018 0449     	 ldr r1,.L132
 2143              	 .loc 1 885 0
 2144 001a 0004     	 lsl r0,r0,#16
 884:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2145              	 .loc 1 884 0
 2146 001c 0A40     	 and r2,r1
 2147 001e 0243     	 orr r2,r0
 2148 0020 5A60     	 str r2,[r3,#4]
 886:../Libraries/XMCLib/src/xmc_can.c **** 
 887:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOCTR  = CAN_MO_MOCTR_SETTXEN0_Msk|
 2149              	 .loc 1 887 0
 2150 0022 034A     	 ldr r2,.L132+4
 2151 0024 DA61     	 str r2,[r3,#28]
 888:../Libraries/XMCLib/src/xmc_can.c ****                                CAN_MO_MOCTR_RESTXEN1_Msk;
 889:../Libraries/XMCLib/src/xmc_can.c **** }
 2152              	 .loc 1 889 0
 2153 0026 02B0     	 add sp,sp,#8
 2154              	 
 2155 0028 7047     	 bx lr
 2156              	.L133:
 2157 002a C046     	 .align 2
 2158              	.L132:
 2159 002c FFFF00FF 	 .word -16711681
 2160 0030 00040002 	 .word 33555456
 2161              	 .cfi_endproc
 2162              	.LFE152:
 2164              	 .section .text.XMC_CAN_GATEWAY_InitSourceObject,"ax",%progbits
 2165              	 .align 1
 2166              	 .global XMC_CAN_GATEWAY_InitSourceObject
 2167              	 .code 16
 2168              	 .thumb_func
 2170              	XMC_CAN_GATEWAY_InitSourceObject:
 2171              	.LFB153:
 890:../Libraries/XMCLib/src/xmc_can.c **** 
 891:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the Gateway Source Object */
 892:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_GATEWAY_InitSourceObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_GATEWAY_CONFIG
 893:../Libraries/XMCLib/src/xmc_can.c **** {
 2172              	 .loc 1 893 0
 2173              	 .cfi_startproc
 2174              	.LVL217:
 2175 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 2176              	.LCFI21:
 2177              	 .cfi_def_cfa_offset 20
 2178              	 .cfi_offset 4,-20
 2179              	 .cfi_offset 5,-16
 2180              	 .cfi_offset 6,-12
 2181              	 .cfi_offset 7,-8
 2182              	 .cfi_offset 14,-4
 2183 0002 0B0A     	 lsr r3,r1,#8
 2184 0004 85B0     	 sub sp,sp,#20
 2185              	.LCFI22:
 2186              	 .cfi_def_cfa_offset 40
 2187              	 .loc 1 893 0
 2188 0006 0093     	 str r3,[sp]
 2189 0008 0C1C     	 add r4,r1,#0
 894:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = (((uint32_t)0x4U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 895:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2190              	 .loc 1 895 0
 2191 000a 8023     	 mov r3,#128
 893:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = (((uint32_t)0x4U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 2192              	 .loc 1 893 0
 2193 000c 090C     	 lsr r1,r1,#16
 2194              	 .loc 1 895 0
 2195 000e 0F1C     	 mov r7,r1
 896:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 2196              	 .loc 1 896 0
 2197 0010 8026     	 mov r6,#128
 895:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 2198              	 .loc 1 895 0
 2199 0012 5B00     	 lsl r3,r3,#1
 2200 0014 1F40     	 and r7,r3
 2201              	 .loc 1 896 0
 2202 0016 F600     	 lsl r6,r6,#3
 2203 0018 9300     	 lsl r3,r2,#2
 2204 001a 1E40     	 and r6,r3
 895:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 2205              	 .loc 1 895 0
 2206 001c 3E43     	 orr r6,r7
 2207 001e 0427     	 mov r7,#4
 893:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = (((uint32_t)0x4U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 2208              	 .loc 1 893 0
 2209 0020 151C     	 add r5,r2,#0
 2210 0022 3E43     	 orr r6,r7
 897:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 898:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_copy) << CAN_MO_MOFCR_DATC_Pos)
 899:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 900:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_base << CAN_MO_MOFGPR_CUR_Pos) & (ui
 901:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_top << CAN_MO_MOFGPR_TOP_Pos) & (uin
 2211              	 .loc 1 901 0
 2212 0024 6B46     	 mov r3,sp
 897:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 2213              	 .loc 1 897 0
 2214 0026 FD37     	 add r7,r7,#253
 2215 0028 FF37     	 add r7,r7,#255
 2216 002a 6D02     	 lsl r5,r5,#9
 2217 002c 3D40     	 and r5,r7
 898:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2218              	 .loc 1 898 0
 2219 002e 8027     	 mov r7,#128
 2220              	 .loc 1 901 0
 2221 0030 1B78     	 ldrb r3,[r3]
 898:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2222              	 .loc 1 898 0
 2223 0032 3F01     	 lsl r7,r7,#4
 2224              	 .loc 1 901 0
 2225 0034 1B02     	 lsl r3,r3,#8
 898:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2226              	 .loc 1 898 0
 2227 0036 5209     	 lsr r2,r2,#5
 899:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_base << CAN_MO_MOFGPR_CUR_Pos) & (ui
 2228              	 .loc 1 899 0
 2229 0038 E4B2     	 uxtb r4,r4
 900:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_top << CAN_MO_MOFGPR_TOP_Pos) & (uin
 2230              	 .loc 1 900 0
 2231 003a C9B2     	 uxtb r1,r1
 894:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2232              	 .loc 1 894 0
 2233 003c 0068     	 ldr r0,[r0]
 2234              	.LVL218:
 2235 003e 2E43     	 orr r6,r5
 898:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2236              	 .loc 1 898 0
 2237 0040 3A40     	 and r2,r7
 2238 0042 1C43     	 orr r4,r3
 900:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_top << CAN_MO_MOFGPR_TOP_Pos) & (uin
 2239              	 .loc 1 900 0
 2240 0044 0904     	 lsl r1,r1,#16
 897:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_copy) << CAN_MO_MOFCR_DATC_Pos)
 2241              	 .loc 1 897 0
 2242 0046 1643     	 orr r6,r2
 899:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_base << CAN_MO_MOFGPR_CUR_Pos) & (ui
 2243              	 .loc 1 899 0
 2244 0048 2143     	 orr r1,r4
 894:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2245              	 .loc 1 894 0
 2246 004a 0660     	 str r6,[r0]
 899:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_base << CAN_MO_MOFGPR_CUR_Pos) & (ui
 2247              	 .loc 1 899 0
 2248 004c 4160     	 str r1,[r0,#4]
 902:../Libraries/XMCLib/src/xmc_can.c **** }
 2249              	 .loc 1 902 0
 2250 004e 05B0     	 add sp,sp,#20
 2251              	 
 2252 0050 F0BD     	 pop {r4,r5,r6,r7,pc}
 2253              	 .cfi_endproc
 2254              	.LFE153:
 2256              	 .text
 2257              	.Letext0:
 2258              	 .file 3 "c:\\dave_4-4-2_64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2259              	 .file 4 "c:\\dave_4-4-2_64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2260              	 .file 5 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 2261              	 .file 6 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc/xmc1_scu.h"
 2262              	 .file 7 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include/cmsis_gcc.h"
 2263              	 .file 8 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 2264              	 .file 9 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc/xmc_scu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_can.c
    {standard input}:20     .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:00000000 $t
    {standard input}:25     .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:00000000 XMC_CAN_NODE_NominalBitTimeConfigureEx
    {standard input}:228    .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:000000d4 $d
    {standard input}:234    .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 $t
    {standard input}:239    .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 XMC_CAN_NODE_NominalBitTimeConfigure
    {standard input}:538    .text.XMC_CAN_NODE_NominalBitTimeConfigure:0000011c $d
    {standard input}:544    .text.XMC_CAN_AllocateMOtoNodeList:00000000 $t
    {standard input}:549    .text.XMC_CAN_AllocateMOtoNodeList:00000000 XMC_CAN_AllocateMOtoNodeList
    {standard input}:613    .text.XMC_CAN_Disable:00000000 $t
    {standard input}:618    .text.XMC_CAN_Disable:00000000 XMC_CAN_Disable
    {standard input}:644    .text.XMC_CAN_Enable:00000000 $t
    {standard input}:649    .text.XMC_CAN_Enable:00000000 XMC_CAN_Enable
    {standard input}:685    .text.XMC_CAN_SetBaudrateClockSource:00000000 $t
    {standard input}:690    .text.XMC_CAN_SetBaudrateClockSource:00000000 XMC_CAN_SetBaudrateClockSource
    {standard input}:720    .text.XMC_CAN_GetBaudrateClockSource:00000000 $t
    {standard input}:725    .text.XMC_CAN_GetBaudrateClockSource:00000000 XMC_CAN_GetBaudrateClockSource
    {standard input}:745    .text.XMC_CAN_GetBaudrateClockFrequency:00000000 $t
    {standard input}:750    .text.XMC_CAN_GetBaudrateClockFrequency:00000000 XMC_CAN_GetBaudrateClockFrequency
    {standard input}:801    .text.XMC_CAN_Init:00000000 $t
    {standard input}:806    .text.XMC_CAN_Init:00000000 XMC_CAN_Init
    {standard input}:973    .text.XMC_CAN_Init:0000008c $d
    {standard input}:979    .text.XMC_CAN_InitEx:00000000 $t
    {standard input}:984    .text.XMC_CAN_InitEx:00000000 XMC_CAN_InitEx
    {standard input}:1086   .text.XMC_CAN_InitEx:00000058 $d
    {standard input}:1092   .text.XMC_CAN_GetClockFrequency:00000000 $t
    {standard input}:1097   .text.XMC_CAN_GetClockFrequency:00000000 XMC_CAN_GetClockFrequency
    {standard input}:1129   .text.XMC_CAN_MO_SetIdentifier:00000000 $t
    {standard input}:1134   .text.XMC_CAN_MO_SetIdentifier:00000000 XMC_CAN_MO_SetIdentifier
    {standard input}:1193   .text.XMC_CAN_MO_GetIdentifier:00000000 $t
    {standard input}:1198   .text.XMC_CAN_MO_GetIdentifier:00000000 XMC_CAN_MO_GetIdentifier
    {standard input}:1230   .text.XMC_CAN_MO_GetAcceptanceMask:00000000 $t
    {standard input}:1235   .text.XMC_CAN_MO_GetAcceptanceMask:00000000 XMC_CAN_MO_GetAcceptanceMask
    {standard input}:1274   .text.XMC_CAN_MO_SetAcceptanceMask:00000000 $t
    {standard input}:1279   .text.XMC_CAN_MO_SetAcceptanceMask:00000000 XMC_CAN_MO_SetAcceptanceMask
    {standard input}:1343   .text.XMC_CAN_MO_UpdateData:00000000 $t
    {standard input}:1348   .text.XMC_CAN_MO_UpdateData:00000000 XMC_CAN_MO_UpdateData
    {standard input}:1422   .text.XMC_CAN_MO_UpdateData:0000003c $d
    {standard input}:1428   .text.XMC_CAN_MO_Config:00000000 $t
    {standard input}:1433   .text.XMC_CAN_MO_Config:00000000 XMC_CAN_MO_Config
    {standard input}:1557   .text.XMC_CAN_MO_Config:0000007c $d
    {standard input}:1565   .text.XMC_CAN_MO_Transmit:00000000 $t
    {standard input}:1570   .text.XMC_CAN_MO_Transmit:00000000 XMC_CAN_MO_Transmit
    {standard input}:1612   .text.XMC_CAN_MO_ReceiveData:00000000 $t
    {standard input}:1617   .text.XMC_CAN_MO_ReceiveData:00000000 XMC_CAN_MO_ReceiveData
    {standard input}:1691   .text.XMC_CAN_MO_Receive:00000000 $t
    {standard input}:1696   .text.XMC_CAN_MO_Receive:00000000 XMC_CAN_MO_Receive
    {standard input}:1860   .text.XMC_CAN_MO_Receive:000000d4 $d
    {standard input}:1865   .text.XMC_CAN_NODE_EnableEvent:00000000 $t
    {standard input}:1870   .text.XMC_CAN_NODE_EnableEvent:00000000 XMC_CAN_NODE_EnableEvent
    {standard input}:1901   .text.XMC_CAN_NODE_DisableEvent:00000000 $t
    {standard input}:1906   .text.XMC_CAN_NODE_DisableEvent:00000000 XMC_CAN_NODE_DisableEvent
    {standard input}:1934   .text.XMC_CAN_NODE_DisableEvent:0000001c $d
    {standard input}:1939   .text.XMC_CAN_TXFIFO_Transmit:00000000 $t
    {standard input}:1944   .text.XMC_CAN_TXFIFO_Transmit:00000000 XMC_CAN_TXFIFO_Transmit
    {standard input}:1998   .text.XMC_CAN_TXFIFO_Transmit:00000028 $d
    {standard input}:2003   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:2008   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_TXFIFO_ConfigMOBaseObject
    {standard input}:2058   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:2063   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_RXFIFO_ConfigMOBaseObject
    {standard input}:2113   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 $t
    {standard input}:2118   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 XMC_CAN_TXFIFO_ConfigMOSlaveObject
    {standard input}:2159   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:0000002c $d
    {standard input}:2165   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 $t
    {standard input}:2170   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 XMC_CAN_GATEWAY_InitSourceObject
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidivmod
__aeabi_uidiv
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_CLOCK_UngatePeripheralClock
OSCHP_GetFrequency
XMC_SCU_CLOCK_GetPeripheralClockFrequency
