   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,4
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_ledts.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_LEDTS_InitGlobal,"ax",%progbits
  18              	 .align 1
  19              	 .global XMC_LEDTS_InitGlobal
  20              	 .code 16
  21              	 .thumb_func
  23              	XMC_LEDTS_InitGlobal:
  24              	.LFB69:
  25              	 .file 1 "../Libraries/XMCLib/src/xmc_ledts.c"
   1:../Libraries/XMCLib/src/xmc_ledts.c **** /**
   2:../Libraries/XMCLib/src/xmc_ledts.c ****  * @file xmc_ledts.c
   3:../Libraries/XMCLib/src/xmc_ledts.c ****  * @date 2017-02-25
   4:../Libraries/XMCLib/src/xmc_ledts.c ****  *
   5:../Libraries/XMCLib/src/xmc_ledts.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_ledts.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_ledts.c ****  *
   9:../Libraries/XMCLib/src/xmc_ledts.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_ledts.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_ledts.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_ledts.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_ledts.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_ledts.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_ledts.c ****  * 
  18:../Libraries/XMCLib/src/xmc_ledts.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_ledts.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_ledts.c ****  * 
  21:../Libraries/XMCLib/src/xmc_ledts.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_ledts.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_ledts.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_ledts.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_ledts.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_ledts.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_ledts.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_ledts.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_ledts.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_ledts.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_ledts.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  36:../Libraries/XMCLib/src/xmc_ledts.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_ledts.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  39:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - New API added: XMC_LEDTS_SetActivePADNo() <br>
  42:../Libraries/XMCLib/src/xmc_ledts.c ****  *      
  43:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2015-06-20:
  44:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  46:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2017-02-25:
  47:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - XMC_LEDTS_InitGlobal() fixed compilation warnings
  48:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  49:../Libraries/XMCLib/src/xmc_ledts.c ****  * <b>Detailed description of file:</b><br>
  50:../Libraries/XMCLib/src/xmc_ledts.c ****  * APIs for the functional blocks of LEDTS have been defined:<br>
  51:../Libraries/XMCLib/src/xmc_ledts.c ****  * -- GLOBAL (APIs prefixed with LEDTS_GLOBAL_) <br>
  52:../Libraries/XMCLib/src/xmc_ledts.c ****  * -- Clock configuration, Function/Event configuration, Interrupt configuration
  53:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  54:../Libraries/XMCLib/src/xmc_ledts.c ****  * @endcond
  55:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  56:../Libraries/XMCLib/src/xmc_ledts.c ****  */
  57:../Libraries/XMCLib/src/xmc_ledts.c **** 
  58:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  59:../Libraries/XMCLib/src/xmc_ledts.c ****  * HEADER FILES
  60:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  61:../Libraries/XMCLib/src/xmc_ledts.c **** #include <xmc_ledts.h>
  62:../Libraries/XMCLib/src/xmc_ledts.c **** 
  63:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS0)
  64:../Libraries/XMCLib/src/xmc_ledts.c **** #include "xmc_scu.h"
  65:../Libraries/XMCLib/src/xmc_ledts.c **** 
  66:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  67:../Libraries/XMCLib/src/xmc_ledts.c ****  * MACROS
  68:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  69:../Libraries/XMCLib/src/xmc_ledts.c **** #define XMC_LEDTS_CLOCK_NOT_RUNNING 0U
  70:../Libraries/XMCLib/src/xmc_ledts.c **** 
  71:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  72:../Libraries/XMCLib/src/xmc_ledts.c ****  * ENUMS
  73:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  74:../Libraries/XMCLib/src/xmc_ledts.c **** 
  75:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  76:../Libraries/XMCLib/src/xmc_ledts.c ****  * DATA STRUCTURES
  77:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  78:../Libraries/XMCLib/src/xmc_ledts.c **** 
  79:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  80:../Libraries/XMCLib/src/xmc_ledts.c ****  * GLOBAL DATA
  81:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  82:../Libraries/XMCLib/src/xmc_ledts.c **** 
  83:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  84:../Libraries/XMCLib/src/xmc_ledts.c ****  * LOCAL/UTILITY ROUTINES
  85:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  86:../Libraries/XMCLib/src/xmc_ledts.c **** 
  87:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  88:../Libraries/XMCLib/src/xmc_ledts.c ****  * API IMPLEMENTATION
  89:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  90:../Libraries/XMCLib/src/xmc_ledts.c **** 
  91:../Libraries/XMCLib/src/xmc_ledts.c **** /**
  92:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of global register
  93:../Libraries/XMCLib/src/xmc_ledts.c ****   */
  94:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitGlobal(XMC_LEDTS_t *const ledts, const XMC_LEDTS_GLOBAL_CONFIG_t *
  95:../Libraries/XMCLib/src/xmc_ledts.c **** {
  26              	 .loc 1 95 0
  27              	 .cfi_startproc
  28              	.LVL0:
  29 0000 38B5     	 push {r3,r4,r5,lr}
  30              	.LCFI0:
  31              	 .cfi_def_cfa_offset 16
  32              	 .cfi_offset 3,-16
  33              	 .cfi_offset 4,-12
  34              	 .cfi_offset 5,-8
  35              	 .cfi_offset 14,-4
  96:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
  97:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Null Pointer", (config != (XMC_LEDTS_GLOBAL_CONFIG_t *)NULL));
  98:../Libraries/XMCLib/src/xmc_ledts.c **** 
  99:../Libraries/XMCLib/src/xmc_ledts.c ****   if (ledts == XMC_LEDTS0)
  36              	 .loc 1 99 0
  37 0002 0D4B     	 ldr r3,.L9
  95:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
  38              	 .loc 1 95 0
  39 0004 041C     	 mov r4,r0
  40 0006 0D1C     	 mov r5,r1
 100:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 101:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 102:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS0);
  41              	 .loc 1 102 0
  42 0008 2020     	 mov r0,#32
  43              	.LVL1:
  99:../Libraries/XMCLib/src/xmc_ledts.c ****   {
  44              	 .loc 1 99 0
  45 000a 9C42     	 cmp r4,r3
  46 000c 08D0     	 beq .L7
 103:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 104:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 105:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS0);
 106:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 107:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 108:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS1)
 109:../Libraries/XMCLib/src/xmc_ledts.c ****   else if (ledts == XMC_LEDTS1)
  47              	 .loc 1 109 0
  48 000e 0B4B     	 ldr r3,.L9+4
 110:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 111:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 112:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS1);
  49              	 .loc 1 112 0
  50 0010 4020     	 mov r0,#64
 109:../Libraries/XMCLib/src/xmc_ledts.c ****   {
  51              	 .loc 1 109 0
  52 0012 9C42     	 cmp r4,r3
  53 0014 04D0     	 beq .L7
 113:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 114:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 115:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS1);
 116:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 117:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 118:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 119:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS2)
 120:../Libraries/XMCLib/src/xmc_ledts.c ****   else if (ledts == XMC_LEDTS2)
  54              	 .loc 1 120 0
  55 0016 0A4B     	 ldr r3,.L9+8
  56 0018 9C42     	 cmp r4,r3
  57 001a 03D1     	 bne .L3
 121:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 122:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 123:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS2);
  58              	 .loc 1 123 0
  59 001c 8020     	 mov r0,#128
  60 001e 0003     	 lsl r0,r0,#12
  61              	.L7:
  62 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
  63              	.LVL2:
  64              	.L3:
 124:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 125:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 126:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS2);
 127:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 128:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 129:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 130:../Libraries/XMCLib/src/xmc_ledts.c ****   else
 131:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 132:../Libraries/XMCLib/src/xmc_ledts.c ****     XMC_ASSERT("XMC_LEDTS_InitGlobal:Invalid Module Pointer", 0);
 133:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 134:../Libraries/XMCLib/src/xmc_ledts.c **** 
 135:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
  65              	 .loc 1 135 0
  66 0024 6368     	 ldr r3,[r4,#4]
 136:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 137:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
  67              	 .loc 1 137 0
  68 0026 0120     	 mov r0,#1
 135:../Libraries/XMCLib/src/xmc_ledts.c ****   {
  69              	 .loc 1 135 0
  70 0028 1B0C     	 lsr r3,r3,#16
  71 002a 1B04     	 lsl r3,r3,#16
  72 002c 02D1     	 bne .L5
 138:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 139:../Libraries/XMCLib/src/xmc_ledts.c **** 
 140:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL = config->globctl;
 141:../Libraries/XMCLib/src/xmc_ledts.c **** 
 142:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
  73              	 .loc 1 142 0
  74 002e 181C     	 mov r0,r3
 140:../Libraries/XMCLib/src/xmc_ledts.c **** 
  75              	 .loc 1 140 0
  76 0030 2A68     	 ldr r2,[r5]
  77 0032 6260     	 str r2,[r4,#4]
  78              	.L5:
 143:../Libraries/XMCLib/src/xmc_ledts.c **** }
  79              	 .loc 1 143 0
  80              	 
  81              	.LVL3:
  82              	.LVL4:
  83 0034 38BD     	 pop {r3,r4,r5,pc}
  84              	.L10:
  85 0036 C046     	 .align 2
  86              	.L9:
  87 0038 00000250 	 .word 1342308352
  88 003c 00040250 	 .word 1342309376
  89 0040 00080250 	 .word 1342310400
  90              	 .cfi_endproc
  91              	.LFE69:
  93              	 .section .text.XMC_LEDTS_InitLED,"ax",%progbits
  94              	 .align 1
  95              	 .global XMC_LEDTS_InitLED
  96              	 .code 16
  97              	 .thumb_func
  99              	XMC_LEDTS_InitLED:
 100              	.LFB70:
 144:../Libraries/XMCLib/src/xmc_ledts.c **** 
 145:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 146:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for LED-driving function
 147:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 148:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitLED(XMC_LEDTS_t *const ledts, const XMC_LEDTS_LED_CONFIG_t *config
 149:../Libraries/XMCLib/src/xmc_ledts.c **** {
 101              	 .loc 1 149 0
 102              	 .cfi_startproc
 103              	.LVL5:
 150:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 151:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Null Pointer", (config != (XMC_LEDTS_LED_CONFIG_t *)NULL));
 152:../Libraries/XMCLib/src/xmc_ledts.c **** 
 153:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 104              	 .loc 1 153 0
 105 0000 4268     	 ldr r2,[r0,#4]
 149:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 106              	 .loc 1 149 0
 107 0002 031C     	 mov r3,r0
 108              	 .loc 1 153 0
 109 0004 120C     	 lsr r2,r2,#16
 110 0006 1204     	 lsl r2,r2,#16
 154:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 155:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 111              	 .loc 1 155 0
 112 0008 0120     	 mov r0,#1
 113              	.LVL6:
 153:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 114              	 .loc 1 153 0
 115 000a 002A     	 cmp r2,#0
 116 000c 0CD1     	 bne .L12
 156:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 157:../Libraries/XMCLib/src/xmc_ledts.c **** 
 158:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_COLLEV_Msk | LEDTS_FNCTL_NR_LEDCOL_Msk);
 117              	 .loc 1 158 0
 118 000e 9868     	 ldr r0,[r3,#8]
 119 0010 0001     	 lsl r0,r0,#4
 120 0012 0009     	 lsr r0,r0,#4
 121 0014 9860     	 str r0,[r3,#8]
 159:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 122              	 .loc 1 159 0
 123 0016 9868     	 ldr r0,[r3,#8]
 124 0018 0968     	 ldr r1,[r1]
 125              	.LVL7:
 126 001a 0143     	 orr r1,r0
 160:../Libraries/XMCLib/src/xmc_ledts.c **** 
 161:../Libraries/XMCLib/src/xmc_ledts.c ****   /* Enable LED function */
 162:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_LD_EN_Msk;
 127              	 .loc 1 162 0
 128 001c 0220     	 mov r0,#2
 159:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 129              	 .loc 1 159 0
 130 001e 9960     	 str r1,[r3,#8]
 131              	 .loc 1 162 0
 132 0020 5968     	 ldr r1,[r3,#4]
 133 0022 0143     	 orr r1,r0
 163:../Libraries/XMCLib/src/xmc_ledts.c **** 
 164:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 134              	 .loc 1 164 0
 135 0024 101C     	 mov r0,r2
 162:../Libraries/XMCLib/src/xmc_ledts.c **** 
 136              	 .loc 1 162 0
 137 0026 5960     	 str r1,[r3,#4]
 138              	.L12:
 165:../Libraries/XMCLib/src/xmc_ledts.c **** }
 139              	 .loc 1 165 0
 140              	 
 141 0028 7047     	 bx lr
 142              	 .cfi_endproc
 143              	.LFE70:
 145              	 .section .text.XMC_LEDTS_InitTSBasic,"ax",%progbits
 146              	 .align 1
 147              	 .global XMC_LEDTS_InitTSBasic
 148              	 .code 16
 149              	 .thumb_func
 151              	XMC_LEDTS_InitTSBasic:
 152              	.LFB71:
 166:../Libraries/XMCLib/src/xmc_ledts.c **** 
 167:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 168:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for basic Touch-Sense control function
 169:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 170:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSBasic(XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_BASIC_
 171:../Libraries/XMCLib/src/xmc_ledts.c **** {
 153              	 .loc 1 171 0
 154              	 .cfi_startproc
 155              	.LVL8:
 172:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 173:../Libraries/XMCLib/src/xmc_ledts.c **** 
 174:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 175:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_BASIC_t *)NULL
 176:../Libraries/XMCLib/src/xmc_ledts.c **** 
 177:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 156              	 .loc 1 177 0
 157 0000 4268     	 ldr r2,[r0,#4]
 171:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 158              	 .loc 1 171 0
 159 0002 031C     	 mov r3,r0
 160              	 .loc 1 177 0
 161 0004 120C     	 lsr r2,r2,#16
 171:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 162              	 .loc 1 171 0
 163 0006 30B5     	 push {r4,r5,lr}
 164              	.LCFI1:
 165              	 .cfi_def_cfa_offset 12
 166              	 .cfi_offset 4,-12
 167              	 .cfi_offset 5,-8
 168              	 .cfi_offset 14,-4
 169              	 .loc 1 177 0
 170 0008 1204     	 lsl r2,r2,#16
 178:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 179:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 171              	 .loc 1 179 0
 172 000a 0120     	 mov r0,#1
 173              	.LVL9:
 177:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 174              	 .loc 1 177 0
 175 000c 002A     	 cmp r2,#0
 176 000e 0BD1     	 bne .L15
 177              	.LVL10:
 180:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 181:../Libraries/XMCLib/src/xmc_ledts.c **** 
 182:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_ACCCNT_Msk | LEDTS_FNCTL_TSCCMP_Msk | LEDTS_FNCTL_TSCTRR_Msk | LEDTS_FNCTL_TS
 183:../Libraries/XMCLib/src/xmc_ledts.c **** 		 LEDTS_FNCTL_NR_TSIN_Msk);
 184:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 178              	 .loc 1 184 0
 179 0010 9D68     	 ldr r5,[r3,#8]
 180 0012 064C     	 ldr r4,.L17
 181 0014 2C40     	 and r4,r5
 182 0016 9C60     	 str r4,[r3,#8]
 185:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 183              	 .loc 1 185 0
 184 0018 9C68     	 ldr r4,[r3,#8]
 185 001a 0968     	 ldr r1,[r1]
 186              	.LVL11:
 187 001c 2143     	 orr r1,r4
 188 001e 9960     	 str r1,[r3,#8]
 186:../Libraries/XMCLib/src/xmc_ledts.c **** 
 187:../Libraries/XMCLib/src/xmc_ledts.c ****   /* Enable TS function */
 188:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_TS_EN_Msk;
 189              	 .loc 1 188 0
 190 0020 5968     	 ldr r1,[r3,#4]
 191 0022 0843     	 orr r0,r1
 192 0024 5860     	 str r0,[r3,#4]
 189:../Libraries/XMCLib/src/xmc_ledts.c **** 
 190:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 193              	 .loc 1 190 0
 194 0026 101C     	 mov r0,r2
 195              	.LVL12:
 196              	.L15:
 191:../Libraries/XMCLib/src/xmc_ledts.c **** }
 197              	 .loc 1 191 0
 198              	 
 199 0028 30BD     	 pop {r4,r5,pc}
 200              	.L18:
 201 002a C046     	 .align 2
 202              	.L17:
 203 002c FFFF60F0 	 .word -262078465
 204              	 .cfi_endproc
 205              	.LFE71:
 207              	 .section .text.XMC_LEDTS_InitTSAdvanced,"ax",%progbits
 208              	 .align 1
 209              	 .global XMC_LEDTS_InitTSAdvanced
 210              	 .code 16
 211              	 .thumb_func
 213              	XMC_LEDTS_InitTSAdvanced:
 214              	.LFB72:
 192:../Libraries/XMCLib/src/xmc_ledts.c **** 
 193:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 194:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for advanced Touch-Sense control function
 195:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 196:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSAdvanced (XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_AD
 197:../Libraries/XMCLib/src/xmc_ledts.c **** {
 215              	 .loc 1 197 0
 216              	 .cfi_startproc
 217              	.LVL13:
 198:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 199:../Libraries/XMCLib/src/xmc_ledts.c **** 
 200:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 201:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_ADVANCED_t 
 202:../Libraries/XMCLib/src/xmc_ledts.c **** 
 203:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 218              	 .loc 1 203 0
 219 0000 4268     	 ldr r2,[r0,#4]
 197:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 220              	 .loc 1 197 0
 221 0002 031C     	 mov r3,r0
 222              	 .loc 1 203 0
 223 0004 120C     	 lsr r2,r2,#16
 197:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 224              	 .loc 1 197 0
 225 0006 10B5     	 push {r4,lr}
 226              	.LCFI2:
 227              	 .cfi_def_cfa_offset 8
 228              	 .cfi_offset 4,-8
 229              	 .cfi_offset 14,-4
 230              	 .loc 1 203 0
 231 0008 1204     	 lsl r2,r2,#16
 204:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 205:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 232              	 .loc 1 205 0
 233 000a 0120     	 mov r0,#1
 234              	.LVL14:
 203:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 235              	 .loc 1 203 0
 236 000c 002A     	 cmp r2,#0
 237 000e 10D1     	 bne .L20
 238              	.LVL15:
 206:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 207:../Libraries/XMCLib/src/xmc_ledts.c **** 
 208:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_GLOBCTL_MASKVAL_Msk | LEDTS_GLOBCTL_FENVAL_Msk);
 209:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= (reg);
 239              	 .loc 1 209 0
 240 0010 5C68     	 ldr r4,[r3,#4]
 241 0012 0848     	 ldr r0,.L22
 242 0014 2040     	 and r0,r4
 243 0016 5860     	 str r0,[r3,#4]
 210:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= (config->globctl);
 244              	 .loc 1 210 0
 245 0018 5868     	 ldr r0,[r3,#4]
 246 001a 0C68     	 ldr r4,[r1]
 247 001c 2043     	 orr r0,r4
 248 001e 5860     	 str r0,[r3,#4]
 249              	.LVL16:
 211:../Libraries/XMCLib/src/xmc_ledts.c **** 
 212:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_PADT_Msk | LEDTS_FNCTL_PADTSW_Msk | LEDTS_FNCTL_EPULL_Msk | LEDTS_FNCTL_TSOEX
 213:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 250              	 .loc 1 213 0
 251 0020 9C68     	 ldr r4,[r3,#8]
 252 0022 0548     	 ldr r0,.L22+4
 253 0024 2040     	 and r0,r4
 254 0026 9860     	 str r0,[r3,#8]
 214:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 255              	 .loc 1 214 0
 256 0028 9868     	 ldr r0,[r3,#8]
 257 002a 4968     	 ldr r1,[r1,#4]
 258              	.LVL17:
 259 002c 0143     	 orr r1,r0
 215:../Libraries/XMCLib/src/xmc_ledts.c **** 
 216:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 260              	 .loc 1 216 0
 261 002e 101C     	 mov r0,r2
 214:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 262              	 .loc 1 214 0
 263 0030 9960     	 str r1,[r3,#8]
 264              	.LVL18:
 265              	.L20:
 217:../Libraries/XMCLib/src/xmc_ledts.c **** }
 266              	 .loc 1 217 0
 267              	 
 268 0032 10BD     	 pop {r4,pc}
 269              	.L23:
 270              	 .align 2
 271              	.L22:
 272 0034 FFE1FFFF 	 .word -7681
 273 0038 E0FF9FFF 	 .word -6291488
 274              	 .cfi_endproc
 275              	.LFE72:
 277              	 .section .text.XMC_LEDTS_StartCounter,"ax",%progbits
 278              	 .align 1
 279              	 .global XMC_LEDTS_StartCounter
 280              	 .code 16
 281              	 .thumb_func
 283              	XMC_LEDTS_StartCounter:
 284              	.LFB73:
 218:../Libraries/XMCLib/src/xmc_ledts.c **** 
 219:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 220:../Libraries/XMCLib/src/xmc_ledts.c ****   * Starts LEDTS-counter
 221:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 222:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StartCounter(XMC_LEDTS_t *const ledts, const uint16_t prescaler)
 223:../Libraries/XMCLib/src/xmc_ledts.c **** {
 285              	 .loc 1 223 0
 286              	 .cfi_startproc
 287              	.LVL19:
 224:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Start_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 225:../Libraries/XMCLib/src/xmc_ledts.c **** 
 226:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= prescaler<<16U;
 288              	 .loc 1 226 0
 289 0000 4368     	 ldr r3,[r0,#4]
 290 0002 0904     	 lsl r1,r1,#16
 291              	.LVL20:
 292 0004 1943     	 orr r1,r3
 293 0006 4160     	 str r1,[r0,#4]
 227:../Libraries/XMCLib/src/xmc_ledts.c **** }
 294              	 .loc 1 227 0
 295              	 
 296 0008 7047     	 bx lr
 297              	 .cfi_endproc
 298              	.LFE73:
 300              	 .section .text.XMC_LEDTS_StopCounter,"ax",%progbits
 301              	 .align 1
 302              	 .global XMC_LEDTS_StopCounter
 303              	 .code 16
 304              	 .thumb_func
 306              	XMC_LEDTS_StopCounter:
 307              	.LFB74:
 228:../Libraries/XMCLib/src/xmc_ledts.c **** 
 229:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 230:../Libraries/XMCLib/src/xmc_ledts.c ****   * Stops LEDTS-counter
 231:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 232:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StopCounter(XMC_LEDTS_t *const ledts)
 233:../Libraries/XMCLib/src/xmc_ledts.c **** {
 308              	 .loc 1 233 0
 309              	 .cfi_startproc
 310              	.LVL21:
 234:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Stop_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 235:../Libraries/XMCLib/src/xmc_ledts.c **** 
 236:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= 0x0000FFFF;
 311              	 .loc 1 236 0
 312 0000 4368     	 ldr r3,[r0,#4]
 237:../Libraries/XMCLib/src/xmc_ledts.c **** }
 313              	 .loc 1 237 0
 314              	 
 236:../Libraries/XMCLib/src/xmc_ledts.c **** }
 315              	 .loc 1 236 0
 316 0002 9BB2     	 uxth r3,r3
 317 0004 4360     	 str r3,[r0,#4]
 318              	 .loc 1 237 0
 319 0006 7047     	 bx lr
 320              	 .cfi_endproc
 321              	.LFE74:
 323              	 .section .text.XMC_LEDTS_ReadInterruptFlag,"ax",%progbits
 324              	 .align 1
 325              	 .global XMC_LEDTS_ReadInterruptFlag
 326              	 .code 16
 327              	 .thumb_func
 329              	XMC_LEDTS_ReadInterruptFlag:
 330              	.LFB75:
 238:../Libraries/XMCLib/src/xmc_ledts.c **** 
 239:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 240:../Libraries/XMCLib/src/xmc_ledts.c ****   * Reads time interrupt flags
 241:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 242:../Libraries/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadInterruptFlag(XMC_LEDTS_t *const ledts)
 243:../Libraries/XMCLib/src/xmc_ledts.c **** {
 331              	 .loc 1 243 0
 332              	 .cfi_startproc
 333              	.LVL22:
 244:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ReadInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts))
 245:../Libraries/XMCLib/src/xmc_ledts.c **** 
 246:../Libraries/XMCLib/src/xmc_ledts.c ****   return (ledts->EVFR & 0xF);
 334              	 .loc 1 246 0
 335 0000 0F23     	 mov r3,#15
 336 0002 C068     	 ldr r0,[r0,#12]
 337              	.LVL23:
 247:../Libraries/XMCLib/src/xmc_ledts.c **** }
 338              	 .loc 1 247 0
 339              	 
 246:../Libraries/XMCLib/src/xmc_ledts.c **** }
 340              	 .loc 1 246 0
 341 0004 1840     	 and r0,r3
 342              	 .loc 1 247 0
 343 0006 7047     	 bx lr
 344              	 .cfi_endproc
 345              	.LFE75:
 347              	 .section .text.XMC_LEDTS_SetActivePADNo,"ax",%progbits
 348              	 .align 1
 349              	 .global XMC_LEDTS_SetActivePADNo
 350              	 .code 16
 351              	 .thumb_func
 353              	XMC_LEDTS_SetActivePADNo:
 354              	.LFB76:
 248:../Libraries/XMCLib/src/xmc_ledts.c **** 
 249:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 250:../Libraries/XMCLib/src/xmc_ledts.c ****   * Set the active pad number
 251:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 252:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetActivePADNo(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t pad_num)
 253:../Libraries/XMCLib/src/xmc_ledts.c **** {
 355              	 .loc 1 253 0
 356              	 .cfi_startproc
 357              	.LVL24:
 254:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 255:../Libraries/XMCLib/src/xmc_ledts.c **** 
 256:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetActivePADNo:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 257:../Libraries/XMCLib/src/xmc_ledts.c **** 
 258:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->FNCTL;
 259:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~(LEDTS_FNCTL_PADT_Msk);
 358              	 .loc 1 259 0
 359 0000 0722     	 mov r2,#7
 258:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~(LEDTS_FNCTL_PADT_Msk);
 360              	 .loc 1 258 0
 361 0002 8368     	 ldr r3,[r0,#8]
 362              	.LVL25:
 260:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (uint32_t)pad_num;
 261:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL = reg;
 262:../Libraries/XMCLib/src/xmc_ledts.c **** }
 363              	 .loc 1 262 0
 364              	 
 259:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (uint32_t)pad_num;
 365              	 .loc 1 259 0
 366 0004 9343     	 bic r3,r2
 367              	.LVL26:
 260:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (uint32_t)pad_num;
 368              	 .loc 1 260 0
 369 0006 1943     	 orr r1,r3
 370              	.LVL27:
 261:../Libraries/XMCLib/src/xmc_ledts.c **** }
 371              	 .loc 1 261 0
 372 0008 8160     	 str r1,[r0,#8]
 373              	 .loc 1 262 0
 374 000a 7047     	 bx lr
 375              	 .cfi_endproc
 376              	.LFE76:
 378              	 .section .text.XMC_LEDTS_ClearInterruptFlag,"ax",%progbits
 379              	 .align 1
 380              	 .global XMC_LEDTS_ClearInterruptFlag
 381              	 .code 16
 382              	 .thumb_func
 384              	XMC_LEDTS_ClearInterruptFlag:
 385              	.LFB77:
 263:../Libraries/XMCLib/src/xmc_ledts.c **** 
 264:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 265:../Libraries/XMCLib/src/xmc_ledts.c ****   * Clears interrupt indication flags
 266:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 267:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_ClearInterruptFlag(XMC_LEDTS_t *const ledts, uint32_t interrupt_mask)
 268:../Libraries/XMCLib/src/xmc_ledts.c **** {
 386              	 .loc 1 268 0
 387              	 .cfi_startproc
 388              	.LVL28:
 269:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ClearInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 270:../Libraries/XMCLib/src/xmc_ledts.c **** 
 271:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->EVFR = (interrupt_mask << LEDTS_EVFR_CTSF_Pos);
 389              	 .loc 1 271 0
 390 0000 0904     	 lsl r1,r1,#16
 391              	.LVL29:
 392 0002 C160     	 str r1,[r0,#12]
 272:../Libraries/XMCLib/src/xmc_ledts.c **** }
 393              	 .loc 1 272 0
 394              	 
 395 0004 7047     	 bx lr
 396              	 .cfi_endproc
 397              	.LFE77:
 399              	 .section .text.XMC_LEDTS_SetLEDLinePattern,"ax",%progbits
 400              	 .align 1
 401              	 .global XMC_LEDTS_SetLEDLinePattern
 402              	 .code 16
 403              	 .thumb_func
 405              	XMC_LEDTS_SetLEDLinePattern:
 406              	.LFB78:
 273:../Libraries/XMCLib/src/xmc_ledts.c **** 
 274:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 275:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to output pattern on an LED column in LED matrix
 276:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 277:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetLEDLinePattern(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const uin
 278:../Libraries/XMCLib/src/xmc_ledts.c **** {
 407              	 .loc 1 278 0
 408              	 .cfi_startproc
 409              	.LVL30:
 410 0000 8B08     	 lsr r3,r1,#2
 411 0002 9B00     	 lsl r3,r3,#2
 412 0004 C018     	 add r0,r0,r3
 413              	.LVL31:
 279:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 280:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 281:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 414              	 .loc 1 281 0
 415 0006 0323     	 mov r3,#3
 416 0008 1940     	 and r1,r3
 417              	.LVL32:
 282:../Libraries/XMCLib/src/xmc_ledts.c **** 
 283:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_LED_Line_Pattern:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledt
 284:../Libraries/XMCLib/src/xmc_ledts.c **** 
 285:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LINE[reg_index];
 286:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= (~(0xff << bit_shift_count));
 418              	 .loc 1 286 0
 419 000a 9940     	 lsl r1,r1,r3
 420 000c FC33     	 add r3,r3,#252
 421 000e 8B40     	 lsl r3,r3,r1
 278:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 422              	 .loc 1 278 0
 423 0010 10B5     	 push {r4,lr}
 424              	.LCFI3:
 425              	 .cfi_def_cfa_offset 8
 426              	 .cfi_offset 4,-8
 427              	 .cfi_offset 14,-4
 285:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= (~(0xff << bit_shift_count));
 428              	 .loc 1 285 0
 429 0012 4469     	 ldr r4,[r0,#20]
 430              	.LVL33:
 287:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= pattern << bit_shift_count;
 431              	 .loc 1 287 0
 432 0014 8A40     	 lsl r2,r2,r1
 433              	.LVL34:
 286:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= pattern << bit_shift_count;
 434              	 .loc 1 286 0
 435 0016 9C43     	 bic r4,r3
 436              	.LVL35:
 437 0018 231C     	 mov r3,r4
 438              	.LVL36:
 439              	 .loc 1 287 0
 440 001a 1343     	 orr r3,r2
 441              	.LVL37:
 288:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LINE[reg_index] = reg;
 442              	 .loc 1 288 0
 443 001c 4361     	 str r3,[r0,#20]
 289:../Libraries/XMCLib/src/xmc_ledts.c **** 
 290:../Libraries/XMCLib/src/xmc_ledts.c **** }
 444              	 .loc 1 290 0
 445              	 
 446 001e 10BD     	 pop {r4,pc}
 447              	 .cfi_endproc
 448              	.LFE78:
 450              	 .section .text.XMC_LEDTS_SetColumnBrightness,"ax",%progbits
 451              	 .align 1
 452              	 .global XMC_LEDTS_SetColumnBrightness
 453              	 .code 16
 454              	 .thumb_func
 456              	XMC_LEDTS_SetColumnBrightness:
 457              	.LFB79:
 291:../Libraries/XMCLib/src/xmc_ledts.c **** 
 292:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 293:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust brightness of an LED column in LED matrix
 294:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 295:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetColumnBrightness(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const u
 296:../Libraries/XMCLib/src/xmc_ledts.c **** {
 458              	 .loc 1 296 0
 459              	 .cfi_startproc
 460              	.LVL38:
 461 0000 8B08     	 lsr r3,r1,#2
 462 0002 9B00     	 lsl r3,r3,#2
 463 0004 C018     	 add r0,r0,r3
 464              	.LVL39:
 297:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 298:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 299:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 465              	 .loc 1 299 0
 466 0006 0323     	 mov r3,#3
 467 0008 1940     	 and r1,r3
 468              	.LVL40:
 300:../Libraries/XMCLib/src/xmc_ledts.c **** 
 301:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Column_Brightness:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(led
 302:../Libraries/XMCLib/src/xmc_ledts.c **** 
 303:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg = ledts->LDCMP[reg_index];
 304:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg &= (~(0xff << bit_shift_count));
 469              	 .loc 1 304 0
 470 000a 9940     	 lsl r1,r1,r3
 471 000c FC33     	 add r3,r3,#252
 472 000e 8B40     	 lsl r3,r3,r1
 296:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 473              	 .loc 1 296 0
 474 0010 10B5     	 push {r4,lr}
 475              	.LCFI4:
 476              	 .cfi_def_cfa_offset 8
 477              	 .cfi_offset 4,-8
 478              	 .cfi_offset 14,-4
 303:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg &= (~(0xff << bit_shift_count));
 479              	 .loc 1 303 0
 480 0012 C469     	 ldr r4,[r0,#28]
 481              	.LVL41:
 305:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg |= brightness << bit_shift_count;
 482              	 .loc 1 305 0
 483 0014 8A40     	 lsl r2,r2,r1
 484              	.LVL42:
 304:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg |= brightness << bit_shift_count;
 485              	 .loc 1 304 0
 486 0016 9C43     	 bic r4,r3
 487              	.LVL43:
 488 0018 231C     	 mov r3,r4
 489              	.LVL44:
 490              	 .loc 1 305 0
 491 001a 1343     	 orr r3,r2
 492              	.LVL45:
 306:../Libraries/XMCLib/src/xmc_ledts.c **** 	ledts->LDCMP[reg_index] = reg;
 493              	 .loc 1 306 0
 494 001c C361     	 str r3,[r0,#28]
 307:../Libraries/XMCLib/src/xmc_ledts.c **** }
 495              	 .loc 1 307 0
 496              	 
 497 001e 10BD     	 pop {r4,pc}
 498              	 .cfi_endproc
 499              	.LFE79:
 501              	 .section .text.XMC_LEDTS_SetCommonOscillationWindow,"ax",%progbits
 502              	 .align 1
 503              	 .global XMC_LEDTS_SetCommonOscillationWindow
 504              	 .code 16
 505              	 .thumb_func
 507              	XMC_LEDTS_SetCommonOscillationWindow:
 508              	.LFB80:
 308:../Libraries/XMCLib/src/xmc_ledts.c **** 
 309:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 310:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to set common oscillation window size for touch-sense inputs
 311:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 312:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetCommonOscillationWindow(XMC_LEDTS_t *const ledts, const uint8_t common_size)
 313:../Libraries/XMCLib/src/xmc_ledts.c **** {
 509              	 .loc 1 313 0
 510              	 .cfi_startproc
 511              	.LVL46:
 314:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 315:../Libraries/XMCLib/src/xmc_ledts.c **** 
 316:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Common_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL
 317:../Libraries/XMCLib/src/xmc_ledts.c **** 
 318:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LDCMP[1];
 512              	 .loc 1 318 0
 513 0000 036A     	 ldr r3,[r0,#32]
 514              	.LVL47:
 319:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~LEDTS_LDCMP1_CMP_LDA_TSCOM_Msk;
 320:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (common_size << LEDTS_LDCMP1_CMP_LDA_TSCOM_Pos);
 515              	 .loc 1 320 0
 516 0002 0906     	 lsl r1,r1,#24
 517              	.LVL48:
 319:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~LEDTS_LDCMP1_CMP_LDA_TSCOM_Msk;
 518              	 .loc 1 319 0
 519 0004 1B02     	 lsl r3,r3,#8
 520              	.LVL49:
 521 0006 1B0A     	 lsr r3,r3,#8
 522              	.LVL50:
 523              	 .loc 1 320 0
 524 0008 1943     	 orr r1,r3
 525              	.LVL51:
 321:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LDCMP[1] = reg;
 526              	 .loc 1 321 0
 527 000a 0162     	 str r1,[r0,#32]
 322:../Libraries/XMCLib/src/xmc_ledts.c **** }
 528              	 .loc 1 322 0
 529              	 
 530 000c 7047     	 bx lr
 531              	 .cfi_endproc
 532              	.LFE80:
 534              	 .section .text.XMC_LEDTS_ReadFNCOL,"ax",%progbits
 535              	 .align 1
 536              	 .global XMC_LEDTS_ReadFNCOL
 537              	 .code 16
 538              	 .thumb_func
 540              	XMC_LEDTS_ReadFNCOL:
 541              	.LFB81:
 323:../Libraries/XMCLib/src/xmc_ledts.c **** 
 324:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 325:../Libraries/XMCLib/src/xmc_ledts.c ****   * Checking the previous active function or LED column status
 326:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 327:../Libraries/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadFNCOL(XMC_LEDTS_t *const ledts)
 328:../Libraries/XMCLib/src/xmc_ledts.c **** {
 542              	 .loc 1 328 0
 543              	 .cfi_startproc
 544              	.LVL52:
 329:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t fncol_read;
 330:../Libraries/XMCLib/src/xmc_ledts.c **** 
 331:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_FNCOL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 332:../Libraries/XMCLib/src/xmc_ledts.c **** 
 333:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read = ledts->FNCTL & LEDTS_FNCTL_FNCOL_Msk;
 545              	 .loc 1 333 0
 546 0000 8068     	 ldr r0,[r0,#8]
 547              	.LVL53:
 334:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read >>= LEDTS_FNCTL_FNCOL_Pos;
 335:../Libraries/XMCLib/src/xmc_ledts.c **** 
 336:../Libraries/XMCLib/src/xmc_ledts.c ****   return fncol_read;
 337:../Libraries/XMCLib/src/xmc_ledts.c **** }
 548              	 .loc 1 337 0
 549              	 
 333:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read >>= LEDTS_FNCTL_FNCOL_Pos;
 550              	 .loc 1 333 0
 551 0002 0006     	 lsl r0,r0,#24
 552              	.LVL54:
 334:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read >>= LEDTS_FNCTL_FNCOL_Pos;
 553              	 .loc 1 334 0
 554 0004 400F     	 lsr r0,r0,#29
 555              	 .loc 1 337 0
 556 0006 7047     	 bx lr
 557              	 .cfi_endproc
 558              	.LFE81:
 560              	 .section .text.XMC_LEDTS_SetNumOfLEDColumns,"ax",%progbits
 561              	 .align 1
 562              	 .global XMC_LEDTS_SetNumOfLEDColumns
 563              	 .code 16
 564              	 .thumb_func
 566              	XMC_LEDTS_SetNumOfLEDColumns:
 567              	.LFB82:
 338:../Libraries/XMCLib/src/xmc_ledts.c **** 
 339:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 340:../Libraries/XMCLib/src/xmc_ledts.c ****   * Set the number of LED column Enabled
 341:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 342:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetNumOfLEDColumns(XMC_LEDTS_t *const ledts, uint8_t count)
 343:../Libraries/XMCLib/src/xmc_ledts.c **** {
 568              	 .loc 1 343 0
 569              	 .cfi_startproc
 570              	.LVL55:
 344:../Libraries/XMCLib/src/xmc_ledts.c **** 
 345:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetNumOfLEDColumns:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 346:../Libraries/XMCLib/src/xmc_ledts.c **** 
 347:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_NR_LEDCOL_Msk);
 571              	 .loc 1 347 0
 572 0000 8368     	 ldr r3,[r0,#8]
 348:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (count << LEDTS_FNCTL_NR_LEDCOL_Pos);
 573              	 .loc 1 348 0
 574 0002 4907     	 lsl r1,r1,#29
 575              	.LVL56:
 347:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (count << LEDTS_FNCTL_NR_LEDCOL_Pos);
 576              	 .loc 1 347 0
 577 0004 DB00     	 lsl r3,r3,#3
 578 0006 DB08     	 lsr r3,r3,#3
 579 0008 8360     	 str r3,[r0,#8]
 580              	 .loc 1 348 0
 581 000a 8368     	 ldr r3,[r0,#8]
 349:../Libraries/XMCLib/src/xmc_ledts.c **** }
 582              	 .loc 1 349 0
 583              	 
 348:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (count << LEDTS_FNCTL_NR_LEDCOL_Pos);
 584              	 .loc 1 348 0
 585 000c 1943     	 orr r1,r3
 586 000e 8160     	 str r1,[r0,#8]
 587              	 .loc 1 349 0
 588 0010 7047     	 bx lr
 589              	 .cfi_endproc
 590              	.LFE82:
 592              	 .section .text.XMC_LEDTS_ReadTSVAL,"ax",%progbits
 593              	 .align 1
 594              	 .global XMC_LEDTS_ReadTSVAL
 595              	 .code 16
 596              	 .thumb_func
 598              	XMC_LEDTS_ReadTSVAL:
 599              	.LFB83:
 350:../Libraries/XMCLib/src/xmc_ledts.c **** 
 351:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 352:../Libraries/XMCLib/src/xmc_ledts.c ****   * Reading recorded number of oscillation counts
 353:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 354:../Libraries/XMCLib/src/xmc_ledts.c **** uint16_t XMC_LEDTS_ReadTSVAL(XMC_LEDTS_t *const ledts)
 355:../Libraries/XMCLib/src/xmc_ledts.c **** {
 600              	 .loc 1 355 0
 601              	 .cfi_startproc
 602              	.LVL57:
 356:../Libraries/XMCLib/src/xmc_ledts.c ****   uint16_t no_of_oscillations;
 357:../Libraries/XMCLib/src/xmc_ledts.c **** 
 358:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_TSVAL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 359:../Libraries/XMCLib/src/xmc_ledts.c **** 
 360:../Libraries/XMCLib/src/xmc_ledts.c ****   no_of_oscillations = (ledts->TSVAL & 0xFFFF);
 603              	 .loc 1 360 0
 604 0000 0069     	 ldr r0,[r0,#16]
 605              	.LVL58:
 361:../Libraries/XMCLib/src/xmc_ledts.c **** 
 362:../Libraries/XMCLib/src/xmc_ledts.c ****   return no_of_oscillations;
 363:../Libraries/XMCLib/src/xmc_ledts.c **** }
 606              	 .loc 1 363 0
 607              	 
 362:../Libraries/XMCLib/src/xmc_ledts.c **** }
 608              	 .loc 1 362 0
 609 0002 80B2     	 uxth r0,r0
 610              	 .loc 1 363 0
 611 0004 7047     	 bx lr
 612              	 .cfi_endproc
 613              	.LFE83:
 615              	 .section .text.XMC_LEDTS_SetOscillationWindow,"ax",%progbits
 616              	 .align 1
 617              	 .global XMC_LEDTS_SetOscillationWindow
 618              	 .code 16
 619              	 .thumb_func
 621              	XMC_LEDTS_SetOscillationWindow:
 622              	.LFB84:
 364:../Libraries/XMCLib/src/xmc_ledts.c **** 
 365:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 366:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust the size of oscillation window
 367:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 368:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetOscillationWindow(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t touchpad,
 369:../Libraries/XMCLib/src/xmc_ledts.c **** {
 623              	 .loc 1 369 0
 624              	 .cfi_startproc
 625              	.LVL59:
 626 0000 8B08     	 lsr r3,r1,#2
 627 0002 9B00     	 lsl r3,r3,#2
 628 0004 C018     	 add r0,r0,r3
 629              	.LVL60:
 370:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 371:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)touchpad) >> 2;
 372:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)touchpad & 0x03) * 8;
 630              	 .loc 1 372 0
 631 0006 0323     	 mov r3,#3
 632 0008 1940     	 and r1,r3
 633              	.LVL61:
 373:../Libraries/XMCLib/src/xmc_ledts.c **** 
 374:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(le
 375:../Libraries/XMCLib/src/xmc_ledts.c **** 
 376:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg = ledts->TSCMP[reg_index];
 377:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg &= (~(0xff << bit_shift_count));
 634              	 .loc 1 377 0
 635 000a 9940     	 lsl r1,r1,r3
 636 000c FC33     	 add r3,r3,#252
 637 000e 8B40     	 lsl r3,r3,r1
 369:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 638              	 .loc 1 369 0
 639 0010 10B5     	 push {r4,lr}
 640              	.LCFI5:
 641              	 .cfi_def_cfa_offset 8
 642              	 .cfi_offset 4,-8
 643              	 .cfi_offset 14,-4
 376:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg &= (~(0xff << bit_shift_count));
 644              	 .loc 1 376 0
 645 0012 446A     	 ldr r4,[r0,#36]
 646              	.LVL62:
 378:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg |= size << bit_shift_count;
 647              	 .loc 1 378 0
 648 0014 8A40     	 lsl r2,r2,r1
 649              	.LVL63:
 377:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg |= size << bit_shift_count;
 650              	 .loc 1 377 0
 651 0016 9C43     	 bic r4,r3
 652              	.LVL64:
 653 0018 231C     	 mov r3,r4
 654              	.LVL65:
 655              	 .loc 1 378 0
 656 001a 1343     	 orr r3,r2
 657              	.LVL66:
 379:../Libraries/XMCLib/src/xmc_ledts.c **** 	ledts->TSCMP[reg_index] = reg;
 658              	 .loc 1 379 0
 659 001c 4362     	 str r3,[r0,#36]
 380:../Libraries/XMCLib/src/xmc_ledts.c **** }
 660              	 .loc 1 380 0
 661              	 
 662 001e 10BD     	 pop {r4,pc}
 663              	 .cfi_endproc
 664              	.LFE84:
 666              	 .text
 667              	.Letext0:
 668              	 .file 2 "c:\\dave_4-4-2_64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 669              	 .file 3 "c:\\dave_4-4-2_64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 670              	 .file 4 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 671              	 .file 5 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc/xmc1_scu.h"
 672              	 .file 6 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc/xmc_ledts.h"
 673              	 .file 7 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include/cmsis_gcc.h"
 674              	 .file 8 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 675              	 .file 9 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc/xmc_scu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ledts.c
    {standard input}:18     .text.XMC_LEDTS_InitGlobal:00000000 $t
    {standard input}:23     .text.XMC_LEDTS_InitGlobal:00000000 XMC_LEDTS_InitGlobal
    {standard input}:87     .text.XMC_LEDTS_InitGlobal:00000038 $d
    {standard input}:94     .text.XMC_LEDTS_InitLED:00000000 $t
    {standard input}:99     .text.XMC_LEDTS_InitLED:00000000 XMC_LEDTS_InitLED
    {standard input}:146    .text.XMC_LEDTS_InitTSBasic:00000000 $t
    {standard input}:151    .text.XMC_LEDTS_InitTSBasic:00000000 XMC_LEDTS_InitTSBasic
    {standard input}:203    .text.XMC_LEDTS_InitTSBasic:0000002c $d
    {standard input}:208    .text.XMC_LEDTS_InitTSAdvanced:00000000 $t
    {standard input}:213    .text.XMC_LEDTS_InitTSAdvanced:00000000 XMC_LEDTS_InitTSAdvanced
    {standard input}:272    .text.XMC_LEDTS_InitTSAdvanced:00000034 $d
    {standard input}:278    .text.XMC_LEDTS_StartCounter:00000000 $t
    {standard input}:283    .text.XMC_LEDTS_StartCounter:00000000 XMC_LEDTS_StartCounter
    {standard input}:301    .text.XMC_LEDTS_StopCounter:00000000 $t
    {standard input}:306    .text.XMC_LEDTS_StopCounter:00000000 XMC_LEDTS_StopCounter
    {standard input}:324    .text.XMC_LEDTS_ReadInterruptFlag:00000000 $t
    {standard input}:329    .text.XMC_LEDTS_ReadInterruptFlag:00000000 XMC_LEDTS_ReadInterruptFlag
    {standard input}:348    .text.XMC_LEDTS_SetActivePADNo:00000000 $t
    {standard input}:353    .text.XMC_LEDTS_SetActivePADNo:00000000 XMC_LEDTS_SetActivePADNo
    {standard input}:379    .text.XMC_LEDTS_ClearInterruptFlag:00000000 $t
    {standard input}:384    .text.XMC_LEDTS_ClearInterruptFlag:00000000 XMC_LEDTS_ClearInterruptFlag
    {standard input}:400    .text.XMC_LEDTS_SetLEDLinePattern:00000000 $t
    {standard input}:405    .text.XMC_LEDTS_SetLEDLinePattern:00000000 XMC_LEDTS_SetLEDLinePattern
    {standard input}:451    .text.XMC_LEDTS_SetColumnBrightness:00000000 $t
    {standard input}:456    .text.XMC_LEDTS_SetColumnBrightness:00000000 XMC_LEDTS_SetColumnBrightness
    {standard input}:502    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 $t
    {standard input}:507    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 XMC_LEDTS_SetCommonOscillationWindow
    {standard input}:535    .text.XMC_LEDTS_ReadFNCOL:00000000 $t
    {standard input}:540    .text.XMC_LEDTS_ReadFNCOL:00000000 XMC_LEDTS_ReadFNCOL
    {standard input}:561    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 $t
    {standard input}:566    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 XMC_LEDTS_SetNumOfLEDColumns
    {standard input}:593    .text.XMC_LEDTS_ReadTSVAL:00000000 $t
    {standard input}:598    .text.XMC_LEDTS_ReadTSVAL:00000000 XMC_LEDTS_ReadTSVAL
    {standard input}:616    .text.XMC_LEDTS_SetOscillationWindow:00000000 $t
    {standard input}:621    .text.XMC_LEDTS_SetOscillationWindow:00000000 XMC_LEDTS_SetOscillationWindow
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
