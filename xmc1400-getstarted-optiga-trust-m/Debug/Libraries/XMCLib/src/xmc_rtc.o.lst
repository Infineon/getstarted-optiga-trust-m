   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,4
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_rtc.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_RTC_Start,"ax",%progbits
  18              	 .align 1
  19              	 .global XMC_RTC_Start
  20              	 .code 16
  21              	 .thumb_func
  23              	XMC_RTC_Start:
  24              	.LFB69:
  25              	 .file 1 "../Libraries/XMCLib/src/xmc_rtc.c"
   1:../Libraries/XMCLib/src/xmc_rtc.c **** /**
   2:../Libraries/XMCLib/src/xmc_rtc.c ****  * @file xmc_rtc.c
   3:../Libraries/XMCLib/src/xmc_rtc.c ****  * @date 2019-05-07
   4:../Libraries/XMCLib/src/xmc_rtc.c ****  *
   5:../Libraries/XMCLib/src/xmc_rtc.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_rtc.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_rtc.c ****  *
   9:../Libraries/XMCLib/src/xmc_rtc.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_rtc.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_rtc.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_rtc.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_rtc.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_rtc.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_rtc.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_rtc.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_rtc.c ****  * 
  18:../Libraries/XMCLib/src/xmc_rtc.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_rtc.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_rtc.c ****  * 
  21:../Libraries/XMCLib/src/xmc_rtc.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_rtc.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_rtc.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_rtc.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_rtc.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_rtc.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_rtc.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_rtc.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_rtc.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_rtc.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_rtc.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_rtc.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_rtc.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  36:../Libraries/XMCLib/src/xmc_rtc.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_rtc.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  39:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_rtc.c ****  *      
  42:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2015-06-20:
  43:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Removed GetDriverVersion API
  44:../Libraries/XMCLib/src/xmc_rtc.c ****  * 
  45:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2016-05-19:
  46:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Added XMC_RTC_SetTimeStdFormat() and XMC_RTC_SetAlarmStdFormat()
  47:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  48:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2018-06-21:
  49:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Fixed value of XMC_RTC_MAXSECONDS, XMC_RTC_MAXMINUTES, XMC_RTC_MAXHOURS macros
  50:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Fixed assertion on XMC_RTC_MAXDAYS
  51:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  52:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2019-05-07:
  53:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Fixed compilation warnings
  54:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  55:../Libraries/XMCLib/src/xmc_rtc.c ****  * @endcond 
  56:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  57:../Libraries/XMCLib/src/xmc_rtc.c ****  */
  58:../Libraries/XMCLib/src/xmc_rtc.c **** 
  59:../Libraries/XMCLib/src/xmc_rtc.c **** /**
  60:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  61:../Libraries/XMCLib/src/xmc_rtc.c ****  * @brief RTC driver for XMC microcontroller family.
  62:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  63:../Libraries/XMCLib/src/xmc_rtc.c ****  */
  64:../Libraries/XMCLib/src/xmc_rtc.c **** 
  65:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  66:../Libraries/XMCLib/src/xmc_rtc.c ****  * HEADER FILES
  67:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  68:../Libraries/XMCLib/src/xmc_rtc.c ****  
  69:../Libraries/XMCLib/src/xmc_rtc.c **** #include "xmc_scu.h"
  70:../Libraries/XMCLib/src/xmc_rtc.c **** #include "xmc_rtc.h"
  71:../Libraries/XMCLib/src/xmc_rtc.c **** 
  72:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  73:../Libraries/XMCLib/src/xmc_rtc.c ****  * MACROS
  74:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  75:../Libraries/XMCLib/src/xmc_rtc.c **** 
  76:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXSECONDS  (60U)   /**< RTC time : Maximum seconds */
  77:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXMINUTES  (60U)   /**< RTC time : Maximum minutes */
  78:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXHOURS    (24U)   /**< RTC time : Maximum hours */
  79:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXDAYS     (31U)   /**< RTC time : Maximum days */
  80:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXDAYSOFWEEK  (7U) /**< RTC time : Maximum days of week */
  81:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXMONTH  (12U)     /**< RTC time : Maximum month */
  82:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXYEAR  (0xFFFFU)  /**< RTC time : Maximum year */
  83:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXPRESCALER  (0xFFFFU)  /**< RTC time : Maximum prescaler */
  84:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_YEAR_OFFSET (1900U)      /**< RTC year offset : Year offset */
  85:../Libraries/XMCLib/src/xmc_rtc.c **** 
  86:../Libraries/XMCLib/src/xmc_rtc.c **** #if (UC_FAMILY == XMC4)
  87:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_INIT_SEQUENCE  (1U)
  88:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
  89:../Libraries/XMCLib/src/xmc_rtc.c **** #if (UC_FAMILY == XMC1)
  90:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_INIT_SEQUENCE  (0U)
  91:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
  92:../Libraries/XMCLib/src/xmc_rtc.c **** 
  93:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  94:../Libraries/XMCLib/src/xmc_rtc.c ****  * API IMPLEMENTATION
  95:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  96:../Libraries/XMCLib/src/xmc_rtc.c **** 
  97:../Libraries/XMCLib/src/xmc_rtc.c **** /*
  98:../Libraries/XMCLib/src/xmc_rtc.c ****  * Enables RTC peripheral to start counting time
  99:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 100:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_Start(void)
 101:../Libraries/XMCLib/src/xmc_rtc.c **** {
  26              	 .loc 1 101 0
  27              	 .cfi_startproc
  28              	.L2:
 102:../Libraries/XMCLib/src/xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
  29              	 .loc 1 102 0 discriminator 1
  30 0000 0121     	 mov r1,#1
  31              	.LBB12:
  32              	.LBB13:
  33              	 .file 2 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc/xmc_scu.h"
   1:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
   2:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @file xmc_scu.h
   3:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @date 2016-03-09
   4:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
   5:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @cond
   6:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
   7:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
   9:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * All rights reserved.                        
  11:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                                             
  12:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * following conditions are met:   
  14:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  15:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * disclaimer.                        
  17:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * 
  18:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * 
  21:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  24:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  32:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  35:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
  36:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Change History
  37:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * --------------
  38:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
  39:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-02-20:
  40:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Initial <br>
  41:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
  42:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-05-20:
  43:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  44:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  45:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
  46:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-06-20:
  47:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  49:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  50:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  51:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  52:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
  53:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-11-30:
  54:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  55:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *      
  56:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * 2016-03-09:
  57:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Optimization of write only registers
  58:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *      
  59:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @endcond 
  60:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
  61:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
  62:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** #ifndef XMC_SCU_H
  63:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** #define XMC_SCU_H
  64:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  
  65:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
  66:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * HEADER FILES
  67:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  68:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc_common.h>
  69:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
  70:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
  71:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  72:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
  73:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
  74:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  
  75:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
  76:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup SCU
  77:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  78:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
  79:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  80:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  81:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU provides the following features,
  82:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Power control
  83:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4 
  84:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Hibernate control 
  85:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  86:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Reset control
  87:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Clock control
  88:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  89:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
  90:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  91:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  92:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic 
  93:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  94:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
  95:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
  96:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock driver features:
  97:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
  98:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  99:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 100:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 101:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 102:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 103:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 104:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 105:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 106:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 107:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 108:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 109:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 110:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 111:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 112:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Reset driver features:
 113:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 114:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 115:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 116:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 117:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 118:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 119:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 120:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \endif <br>
 121:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 122:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Interrupt driver features:
 123:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 124:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 125:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 126:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 127:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 128:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Hibernate driver features:
 129:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 130:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 131:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 132:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 133:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 134:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Trap driver features:
 135:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 136:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 137:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Parity driver features:
 138:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 139:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 140:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 141:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Power driver features:
 142:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 143:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 144:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 145:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Miscellaneous features:
 146:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 147:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 148:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 149:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 150:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 151:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 152:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 153:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 154:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 155:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 156:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 157:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
 158:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 159:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  
 160:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 161:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * MACROS
 162:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 163:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 164:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 165:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * ENUMS
 166:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 167:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 168:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 169:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 170:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS 
 171:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** {
 172:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 173:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 174:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 175:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 176:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****                                   processing another request. */
 177:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 178:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 179:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 180:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 181:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * DATA TYPES
 182:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 183:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 184:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 185:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 186:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 187:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 188:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 189:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 190:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 191:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 192:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 193:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 194:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc1_scu.h>
 195:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 196:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc4_scu.h>
 197:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** #else
 198:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** #error "Unspecified chipset"
 199:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 200:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 201:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 202:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * API Prototypes
 203:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 204:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 205:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** #ifdef __cplusplus
 206:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** extern "C" {
 207:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 208:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 209:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 210:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 211:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 212:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 213:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 214:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 215:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 216:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 217:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 218:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 219:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 220:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 221:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 222:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 223:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 224:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 225:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 226:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 227:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 228:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 229:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 230:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 231:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** {
 232:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 233:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** }
 234:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 235:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 236:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 237:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 238:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 239:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 240:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 241:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 242:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 243:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 244:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 245:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 246:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 247:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 248:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 249:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 250:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 251:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 252:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 253:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 254:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 255:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 256:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** {
 257:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 258:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** }
 259:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 260:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 261:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 262:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @param config Pointer to structure holding the clock prescaler values and divider values for 
 263:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                configuring clock generators and clock tree.\n
 264:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                \b Range: Configure the members of structure @ref XMC_SCU_CLOCK_CONFIG_t for vari
 265:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                parameters of clock setup.
 266:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 267:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 268:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 269:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 270:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Initializes clock generators and clock tree.\n\n
 271:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 272:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Peripheral clock and system clock are configured based on the input configuration \a config.
 273:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The system clock frequency is tuned by configuring the FDIV and IDIV values of CLKCR register.
 274:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The values of FDIV and IDIV can be provided as part of input configuration.
 275:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The PCLK divider determines the ratio of peripheral clock to the system clock. 
 276:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The source of RTC clock is set based on the input configuration. 
 277:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \a SystemCoreClock variable will be updated with the value of
 278:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * system clock frequency. Access to protected bit fields are handled internally.
 279:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 280:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 281:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the high precision oscillator(fOHP) input and configures the system and peripheral clock
 282:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on the system clock source selected in \a config, either fPLL or fOFI will be chosen as sy
 283:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on PLL mode(normal or prescaler mode) used, PLL ramps up in steps to achieve target freque
 284:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The clock dividers for CPU, CCU and peripheral clocks will be set based on the input configurati
 285:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The \a SystemCoreClock variable is set with the value of system clock frequency.
 286:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 287:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 288:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GetCpuClockFrequency() \n\n\n
 289:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 290:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config);
 291:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 292:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 293:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 294:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to enable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 295:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 296:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 297:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 298:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 299:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 300:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the generation of interrupt for the input events.\n\n
 301:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are enabled by setting the respective bit fields in the SRMSK register. \n
 302:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should separately enable the NVIC node responsible for handling the SCU interrupt.
 303:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The interrupt will be generated when the respective event occurs.
 304:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERRUPT_DisableEvent()\n\n\n
 306:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 307:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 308:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 309:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 310:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 311:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 312:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to disable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_
 313:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 314:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 315:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 316:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 317:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 318:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Disables generation of interrupt on occurrence of the input event.\n\n
 319:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are disabled by resetting the respective bit fields in the SRMSK register. \n
 320:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 321:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_DisableIRQ(), XMC_SCU_INTERRUPT_EnableEvent()\n\n\n
 322:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 323:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 324:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 325:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 326:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 327:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event Bit mask of the event to be triggered. \b Range: Use type @ref XMC_SCU_INTERRUPT_EV
 328:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 329:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 330:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 331:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 332:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 333:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Triggers the event as if the hardware raised it.\n\n
 334:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Event will be triggered by setting the respective bitfield in the SRSET register.\n
 335:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should enable the NVIC node that handles the respective event for interrupt generatio
 336:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 337:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_ClearEventStatus() \n\n\n
 338:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 339:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t  event);
 340:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 341:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 342:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status of the SCU events.
 343:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 344:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 345:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the status of all SCU events.\n\n
 346:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The status is read from the SRRAW register. To check the status of a particular 
 347:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * event, the returned value should be masked with the bit mask of the event. The bitmask
 348:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * of events can be obtained using the type @ref XMC_SCU_INTERRUPT_EVENT_t. Multiple events'
 349:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * status can be checked by combining the bit masks using \a OR operation. 
 350:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * After detecting the event, the event status should be cleared using software to detect the event
 351:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 352:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERRUPT_ClearEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent(), XMC_SCU_INTERRUPT_SetEve
 353:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 354:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void);
 355:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 356:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 357:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 358:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the events to clear. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 359:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 360:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 361:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 362:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 363:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 364:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the event status bit in SRRAW register.\n\n
 365:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are cleared by writing value 1 to their bit positions in the SRCLR register.
 366:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The API can be used when polling method is used. After detecting the event, the event status
 367:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * should be cleared using software to detect the event again.
 368:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 369:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 370:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent() \n\n\n
 371:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 372:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event);
 373:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 374:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 375:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 376:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status representing the reason for device reset.
 377:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 378:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 379:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the value representing the reason for device reset.\n\n
 380:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The return value is an encoded word, which can indicate multiple reasons for the last reset. Eac
 381:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * returned word is representative of a last reset cause. The returned value should be appropriatel
 382:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * the cause of reset. 
 383:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The cause of the last reset gets automatically stored in 
 384:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * the \a SCU_RSTSTAT register. The reset status shall be reset after each
 385:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * startup in order to ensure consistent source indication after the next reset.
 386:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: The type @ref XMC_SCU_RESET_REASON_t can be used to get the bit masks of the reset cau
 387:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 388:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 389:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_ClearDeviceResetReason() \n\n\n
 390:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 391:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_RESET_GetDeviceResetReason(void)
 392:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** {
 393:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****   return ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_RSTSTAT_Msk);
 394:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** }
 395:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 396:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None 
 397:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 398:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 399:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the reset reason bits in the reset status register. \n\n
 400:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Clearing of the reset status information in the \a SCU_RSTSTAT register via register bit \a RSTC
 401:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * recommended to ensure a clear indication of the cause of next reset.
 402:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 403:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 404:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_GetDeviceResetReason() \n\n\n
 405:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 406:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_RESET_ClearDeviceResetReason(void)
 407:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** {
 408:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****   /* Clear RSTSTAT.RSTSTAT bitfield */
 409:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_RSCLR_Msk;
 410:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** }
 411:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  
 412:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 413:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of CPU clock frequency.
 414:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 415:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 416:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of CPU clock frequency.\n\n
 417:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The value is stored in a global variable \a \b SystemCoreClock.
 418:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * It is updated when the clock configuration is done using the SCU LLD APIs.
 419:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The value represents the frequency of clock used for CPU operation.
 420:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: Value is of type uint32_t, and gives the value of frequency in Hertz.
 421:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 422:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 423:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 424:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 425:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockFrequency(void)
 426:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** {
 427:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****   return SystemCoreClock;
 428:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** }
 429:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 430:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 431:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of peripheral clock frequency in Hertz.
 432:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 433:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 434:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of clock frequency at which the peripherals are working.\n\n
 435:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The value is derived from the CPU frequency. \b Range: Value is of type uint32_t. It is represen
 436:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 437:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockFrequency(),XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 438:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 439:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void); 
 440:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 441:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** #if(UC_SERIES != XMC45)
 442:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  
 443:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 444:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 445:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral The peripheral for which the clock has to be gated. \b Range: Use type @ref X
 446:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral clock to be gated.
 447:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 448:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 449:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 450:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 451:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Blocks the supply of clock to the selected peripheral.\n\n
 452:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock gating helps in reducing the power consumption. User can selectively gate the clocks of un
 453:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 454:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 455:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 456:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling the \a SCU_CGAT
 457:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * register bit field. Every bit in \a SCU_CGATSET0 register is protected by the bit protection sch
 458:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * bit fields are handled internally.
 459:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 460:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 461:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 462:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 463:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling one of the \a
 464:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU_CGATSET0, \a SCU_CGATSET1 or \a SCU_CGATSET2 register bitfields.
 465:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * 
 466:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 467:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: Clock gating shall not be activated unless the module is in reset state. So use \a
 468:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated() API before enabling the gating of any peripheral.
 469:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 470:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_UngatePeripheralClock() \n\n\n
 471:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 472:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 473:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  
 474:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 475:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 476:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the clock has to be ungated. \b Range: Use type @re
 477:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral.
 478:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 479:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 480:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 481:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 482:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the supply of clock to the selected peripheral.\n\n
 483:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * By default when the device powers on, the peripheral clock will be gated for the 
 484:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * peripherals that support clock gating.
 485:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The peripheral clock should be enabled before using it for any functionality.
 486:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 487:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate.
 488:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting respective bit
 489:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * in the \a SCU_CGATCLR0 register.
 490:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 491:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 492:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate.
 493:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting the respective
 494:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU_CGATCLR0, \a SCU_CGATCLR1 or \a SCU_CGATCLR2 registers.
 495:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 496:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 497:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 498:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 499:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 500:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 501:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 502:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 503:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 504:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the check for clock gating has to be done. 
 505:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_PERIPHERAL_CLOCK_t to identify the peripheral
 506:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 507:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @return bool Status of the peripheral clock gating. \b Range: true if the peripheral clock is ga
 508:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *              false if the peripheral clock ungated(gate de-asserted).
 509:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 510:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 511:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Gives the status of peripheral clock gating.\n\n
 512:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 513:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using the register CGATSTAT0.
 514:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 515:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 516:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using one of CGATSTAT0, CGATSTAT1 or CGATSTAT2 regi
 517:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 518:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * It is recommended to use this API before
 519:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * enabling the gating of any peripherals through \a XMC_SCU_CLOCK_GatePeripheralClock() API.
 520:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 521:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 522:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_UngatePeripheralClock(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 523:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 524:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 525:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 526:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 527:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** 
 528:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** /**
 529:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * @return  uint32_t  Status of the register mirror update.\n
 530:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use the bit mask of the SCU_GENERAL_MIRRSTS register for the mirror
 531:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                    interest. e.g.: SCU_GENERAL_MIRRSTS_RTC_CTR_Msk. Multiple update events can b
 532:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *                    using \a OR operation.
 533:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  *
 534:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 535:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the status of hibernate domain register update, when the respective mirror registers ar
 536:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * The hibernate domain is connected to the core domain via SPI serial communication. MIRRSTS is a 
 537:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * representing the communication of changed value of a mirror register to its corresponding regist
 538:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * hibernate domain. The bit fields of the register indicate
 539:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * that a corresponding register of the hibernate domain is ready to accept a write or that the com
 540:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * is busy with executing the previous operation.\n
 541:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: There is no hibernate domain in XMC1x devices. This register is retained for legacy purpos
 542:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****  */
 543:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_GetMirrorStatus(void)
 544:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h **** {
 545:C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc\xmc_scu.h ****   return(SCU_GENERAL->MIRRSTS);
  34              	 .loc 2 545 0 discriminator 1
  35 0002 044B     	 ldr r3,.L4
  36 0004 9B6C     	 ldr r3,[r3,#72]
  37              	.LBE13:
  38              	.LBE12:
  39              	 .loc 1 102 0 discriminator 1
  40 0006 0B42     	 tst r3,r1
  41 0008 FAD1     	 bne .L2
 103:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 104:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 105:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 106:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR |= (uint32_t)RTC_CTR_ENB_Msk;
  42              	 .loc 1 106 0
  43 000a 034A     	 ldr r2,.L4+4
 107:../Libraries/XMCLib/src/xmc_rtc.c **** }
  44              	 .loc 1 107 0
  45              	 
 106:../Libraries/XMCLib/src/xmc_rtc.c **** }
  46              	 .loc 1 106 0
  47 000c 5368     	 ldr r3,[r2,#4]
  48 000e 0B43     	 orr r3,r1
  49 0010 5360     	 str r3,[r2,#4]
  50              	 .loc 1 107 0
  51 0012 7047     	 bx lr
  52              	.L5:
  53              	 .align 2
  54              	.L4:
  55 0014 00000140 	 .word 1073807360
  56 0018 000A0140 	 .word 1073809920
  57              	 .cfi_endproc
  58              	.LFE69:
  60              	 .section .text.XMC_RTC_Stop,"ax",%progbits
  61              	 .align 1
  62              	 .global XMC_RTC_Stop
  63              	 .code 16
  64              	 .thumb_func
  66              	XMC_RTC_Stop:
  67              	.LFB70:
 108:../Libraries/XMCLib/src/xmc_rtc.c **** 
 109:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 110:../Libraries/XMCLib/src/xmc_rtc.c ****  * Disables RTC peripheral to start counting time
 111:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 112:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_Stop(void)
 113:../Libraries/XMCLib/src/xmc_rtc.c **** {
  68              	 .loc 1 113 0
  69              	 .cfi_startproc
  70              	.L7:
 114:../Libraries/XMCLib/src/xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
  71              	 .loc 1 114 0 discriminator 1
  72 0000 0121     	 mov r1,#1
  73              	.LBB14:
  74              	.LBB15:
  75              	 .loc 2 545 0 discriminator 1
  76 0002 044B     	 ldr r3,.L8
  77 0004 9B6C     	 ldr r3,[r3,#72]
  78              	.LBE15:
  79              	.LBE14:
  80              	 .loc 1 114 0 discriminator 1
  81 0006 0B42     	 tst r3,r1
  82 0008 FAD1     	 bne .L7
 115:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 116:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 117:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 118:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR &= ~(uint32_t)RTC_CTR_ENB_Msk;
  83              	 .loc 1 118 0
  84 000a 034A     	 ldr r2,.L8+4
 119:../Libraries/XMCLib/src/xmc_rtc.c **** }
  85              	 .loc 1 119 0
  86              	 
 118:../Libraries/XMCLib/src/xmc_rtc.c **** }
  87              	 .loc 1 118 0
  88 000c 5368     	 ldr r3,[r2,#4]
  89 000e 8B43     	 bic r3,r1
  90 0010 5360     	 str r3,[r2,#4]
  91              	 .loc 1 119 0
  92 0012 7047     	 bx lr
  93              	.L9:
  94              	 .align 2
  95              	.L8:
  96 0014 00000140 	 .word 1073807360
  97 0018 000A0140 	 .word 1073809920
  98              	 .cfi_endproc
  99              	.LFE70:
 101              	 .section .text.XMC_RTC_SetPrescaler,"ax",%progbits
 102              	 .align 1
 103              	 .global XMC_RTC_SetPrescaler
 104              	 .code 16
 105              	 .thumb_func
 107              	XMC_RTC_SetPrescaler:
 108              	.LFB71:
 120:../Libraries/XMCLib/src/xmc_rtc.c **** 
 121:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 122:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module prescaler value
 123:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 124:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetPrescaler(uint16_t prescaler)
 125:../Libraries/XMCLib/src/xmc_rtc.c **** {
 109              	 .loc 1 125 0
 110              	 .cfi_startproc
 111              	.LVL0:
 112              	.L11:
 113              	.LBB16:
 114              	.LBB17:
 115              	 .loc 2 545 0 discriminator 1
 116 0000 054B     	 ldr r3,.L12
 117 0002 9B6C     	 ldr r3,[r3,#72]
 118              	.LBE17:
 119              	.LBE16:
 126:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetPrescaler:Wrong prescaler value", (prescaler < XMC_RTC_MAXPRESCALER));
 127:../Libraries/XMCLib/src/xmc_rtc.c ****   
 128:../Libraries/XMCLib/src/xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
 120              	 .loc 1 128 0 discriminator 1
 121 0004 DB07     	 lsl r3,r3,#31
 122 0006 FBD4     	 bmi .L11
 129:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 130:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 131:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 132:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR = (RTC->CTR & ~(uint32_t)RTC_CTR_DIV_Msk) |
 123              	 .loc 1 132 0
 124 0008 044A     	 ldr r2,.L12+4
 133:../Libraries/XMCLib/src/xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 125              	 .loc 1 133 0
 126 000a 0004     	 lsl r0,r0,#16
 127              	.LVL1:
 132:../Libraries/XMCLib/src/xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 128              	 .loc 1 132 0
 129 000c 5368     	 ldr r3,[r2,#4]
 134:../Libraries/XMCLib/src/xmc_rtc.c **** }
 130              	 .loc 1 134 0
 131              	 
 132:../Libraries/XMCLib/src/xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 132              	 .loc 1 132 0
 133 000e 9BB2     	 uxth r3,r3
 134 0010 1843     	 orr r0,r3
 135 0012 5060     	 str r0,[r2,#4]
 136              	 .loc 1 134 0
 137 0014 7047     	 bx lr
 138              	.L13:
 139 0016 C046     	 .align 2
 140              	.L12:
 141 0018 00000140 	 .word 1073807360
 142 001c 000A0140 	 .word 1073809920
 143              	 .cfi_endproc
 144              	.LFE71:
 146              	 .section .text.XMC_RTC_SetTime,"ax",%progbits
 147              	 .align 1
 148              	 .global XMC_RTC_SetTime
 149              	 .code 16
 150              	 .thumb_func
 152              	XMC_RTC_SetTime:
 153              	.LFB72:
 135:../Libraries/XMCLib/src/xmc_rtc.c **** 
 136:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 137:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC_TIM0, RTC_TIM1 registers with time values
 138:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 139:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetTime(const XMC_RTC_TIME_t *const time)
 140:../Libraries/XMCLib/src/xmc_rtc.c **** {
 154              	 .loc 1 140 0
 155              	 .cfi_startproc
 156              	.LVL2:
 157              	.L15:
 158              	.LBB18:
 159              	.LBB19:
 160              	 .loc 2 545 0 discriminator 1
 161 0000 054B     	 ldr r3,.L16
 162 0002 9A6C     	 ldr r2,[r3,#72]
 163              	.LBE19:
 164              	.LBE18:
 141:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong seconds value", ((uint32_t)time->seconds < XMC_RTC_MAXSECONDS))
 142:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong minutes value", ((uint32_t)time->minutes < XMC_RTC_MAXMINUTES))
 143:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong hours value", ((uint32_t)time->hours < XMC_RTC_MAXHOURS));
 144:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong week day value", ((uint32_t)time->daysofweek < XMC_RTC_MAXDAYSO
 145:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong month value", ((uint32_t)time->month < XMC_RTC_MAXMONTH));
 146:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong year value", ((uint32_t)time->year < XMC_RTC_MAXYEAR));
 147:../Libraries/XMCLib/src/xmc_rtc.c **** 
 148:../Libraries/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 1U)
 149:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk) != 0U)
 150:../Libraries/XMCLib/src/xmc_rtc.c ****       { 
 151:../Libraries/XMCLib/src/xmc_rtc.c ****          /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 152:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 153:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM0 = time->raw0;
 154:../Libraries/XMCLib/src/xmc_rtc.c ****       
 155:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM1_Msk) != 0U)
 156:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 157:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 158:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 159:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM1 = time->raw1;	     
 160:../Libraries/XMCLib/src/xmc_rtc.c ****   #endif
 161:../Libraries/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 0U)
 162:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & (SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk | SCU_GENERAL_MIRRSTS_R
 165              	 .loc 1 162 0 discriminator 1
 166 0004 1823     	 mov r3,#24
 167 0006 1A42     	 tst r2,r3
 168 0008 FAD1     	 bne .L15
 163:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 164:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 165:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 166:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM0 = time->raw0;
 169              	 .loc 1 166 0
 170 000a 0268     	 ldr r2,[r0]
 171 000c 034B     	 ldr r3,.L16+4
 167:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM1 = time->raw1;	; 
 168:../Libraries/XMCLib/src/xmc_rtc.c ****   #endif  
 169:../Libraries/XMCLib/src/xmc_rtc.c **** }
 172              	 .loc 1 169 0
 173              	 
 166:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM1 = time->raw1;	; 
 174              	 .loc 1 166 0
 175 000e 1A62     	 str r2,[r3,#32]
 167:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM1 = time->raw1;	; 
 176              	 .loc 1 167 0
 177 0010 4268     	 ldr r2,[r0,#4]
 178 0012 5A62     	 str r2,[r3,#36]
 179              	 .loc 1 169 0
 180 0014 7047     	 bx lr
 181              	.L17:
 182 0016 C046     	 .align 2
 183              	.L16:
 184 0018 00000140 	 .word 1073807360
 185 001c 000A0140 	 .word 1073809920
 186              	 .cfi_endproc
 187              	.LFE72:
 189              	 .section .text.XMC_RTC_GetTime,"ax",%progbits
 190              	 .align 1
 191              	 .global XMC_RTC_GetTime
 192              	 .code 16
 193              	 .thumb_func
 195              	XMC_RTC_GetTime:
 196              	.LFB73:
 170:../Libraries/XMCLib/src/xmc_rtc.c **** 
 171:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 172:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module time value
 173:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 174:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetTime(XMC_RTC_TIME_t *const time)
 175:../Libraries/XMCLib/src/xmc_rtc.c **** {
 197              	 .loc 1 175 0
 198              	 .cfi_startproc
 199              	.LVL3:
 176:../Libraries/XMCLib/src/xmc_rtc.c ****   time->raw0 = RTC->TIM0;
 200              	 .loc 1 176 0
 201 0000 024B     	 ldr r3,.L19
 177:../Libraries/XMCLib/src/xmc_rtc.c ****   time->raw1 = RTC->TIM1;
 178:../Libraries/XMCLib/src/xmc_rtc.c **** }
 202              	 .loc 1 178 0
 203              	 
 176:../Libraries/XMCLib/src/xmc_rtc.c ****   time->raw0 = RTC->TIM0;
 204              	 .loc 1 176 0
 205 0002 1A6A     	 ldr r2,[r3,#32]
 206 0004 0260     	 str r2,[r0]
 177:../Libraries/XMCLib/src/xmc_rtc.c ****   time->raw1 = RTC->TIM1;
 207              	 .loc 1 177 0
 208 0006 5B6A     	 ldr r3,[r3,#36]
 209 0008 4360     	 str r3,[r0,#4]
 210              	 .loc 1 178 0
 211 000a 7047     	 bx lr
 212              	.L20:
 213              	 .align 2
 214              	.L19:
 215 000c 000A0140 	 .word 1073809920
 216              	 .cfi_endproc
 217              	.LFE73:
 219              	 .section .text.XMC_RTC_SetTimeStdFormat,"ax",%progbits
 220              	 .align 1
 221              	 .global XMC_RTC_SetTimeStdFormat
 222              	 .code 16
 223              	 .thumb_func
 225              	XMC_RTC_SetTimeStdFormat:
 226              	.LFB74:
 179:../Libraries/XMCLib/src/xmc_rtc.c **** 
 180:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 181:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module time values in standard format
 182:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 183:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetTimeStdFormat(const struct tm *const stdtime)
 184:../Libraries/XMCLib/src/xmc_rtc.c **** {
 227              	 .loc 1 184 0
 228              	 .cfi_startproc
 229              	.LVL4:
 230 0000 07B5     	 push {r0,r1,r2,lr}
 231              	.LCFI0:
 232              	 .cfi_def_cfa_offset 16
 233              	 .cfi_offset 0,-16
 234              	 .cfi_offset 1,-12
 235              	 .cfi_offset 2,-8
 236              	 .cfi_offset 14,-4
 185:../Libraries/XMCLib/src/xmc_rtc.c **** 
 186:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_TIME_t time;
 187:../Libraries/XMCLib/src/xmc_rtc.c **** 
 188:../Libraries/XMCLib/src/xmc_rtc.c ****   time.seconds = stdtime->tm_sec;
 237              	 .loc 1 188 0
 238 0002 6B46     	 mov r3,sp
 239 0004 3F21     	 mov r1,#63
 240 0006 0268     	 ldr r2,[r0]
 241 0008 1B78     	 ldrb r3,[r3]
 242 000a 0A40     	 and r2,r1
 243 000c 8B43     	 bic r3,r1
 244 000e 1343     	 orr r3,r2
 245 0010 6A46     	 mov r2,sp
 246 0012 1370     	 strb r3,[r2]
 189:../Libraries/XMCLib/src/xmc_rtc.c ****   time.minutes = stdtime->tm_min;
 247              	 .loc 1 189 0
 248 0014 6B46     	 mov r3,sp
 249 0016 4268     	 ldr r2,[r0,#4]
 250 0018 5B78     	 ldrb r3,[r3,#1]
 251 001a 0A40     	 and r2,r1
 252 001c 8B43     	 bic r3,r1
 253 001e 1343     	 orr r3,r2
 254 0020 6A46     	 mov r2,sp
 255 0022 5370     	 strb r3,[r2,#1]
 190:../Libraries/XMCLib/src/xmc_rtc.c ****   time.hours = stdtime->tm_hour;
 256              	 .loc 1 190 0
 257 0024 6B46     	 mov r3,sp
 258 0026 8268     	 ldr r2,[r0,#8]
 259 0028 9B78     	 ldrb r3,[r3,#2]
 260 002a 2039     	 sub r1,r1,#32
 261 002c 0A40     	 and r2,r1
 262 002e 8B43     	 bic r3,r1
 263 0030 1343     	 orr r3,r2
 264 0032 6A46     	 mov r2,sp
 265 0034 9370     	 strb r3,[r2,#2]
 191:../Libraries/XMCLib/src/xmc_rtc.c ****   time.days = stdtime->tm_mday - 1;
 266              	 .loc 1 191 0
 267 0036 C368     	 ldr r3,[r0,#12]
 192:../Libraries/XMCLib/src/xmc_rtc.c ****   time.month = stdtime->tm_mon;
 193:../Libraries/XMCLib/src/xmc_rtc.c ****   time.year = stdtime->tm_year + XMC_RTC_YEAR_OFFSET;
 194:../Libraries/XMCLib/src/xmc_rtc.c ****   time.daysofweek = stdtime->tm_wday;
 195:../Libraries/XMCLib/src/xmc_rtc.c **** 
 196:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_SetTime(&time);
 197:../Libraries/XMCLib/src/xmc_rtc.c **** }
 268              	 .loc 1 197 0
 269              	 
 191:../Libraries/XMCLib/src/xmc_rtc.c ****   time.days = stdtime->tm_mday - 1;
 270              	 .loc 1 191 0
 271 0038 013B     	 sub r3,r3,#1
 272 003a 0B40     	 and r3,r1
 273 003c 1A1C     	 mov r2,r3
 274 003e 6B46     	 mov r3,sp
 275 0040 DB78     	 ldrb r3,[r3,#3]
 276 0042 8B43     	 bic r3,r1
 277 0044 1343     	 orr r3,r2
 278 0046 6A46     	 mov r2,sp
 279 0048 D370     	 strb r3,[r2,#3]
 192:../Libraries/XMCLib/src/xmc_rtc.c ****   time.month = stdtime->tm_mon;
 280              	 .loc 1 192 0
 281 004a 6B46     	 mov r3,sp
 282 004c 0269     	 ldr r2,[r0,#16]
 283 004e 5B79     	 ldrb r3,[r3,#5]
 284 0050 1039     	 sub r1,r1,#16
 285 0052 0A40     	 and r2,r1
 286 0054 8B43     	 bic r3,r1
 287 0056 1343     	 orr r3,r2
 288 0058 6A46     	 mov r2,sp
 289 005a 5371     	 strb r3,[r2,#5]
 193:../Libraries/XMCLib/src/xmc_rtc.c ****   time.daysofweek = stdtime->tm_wday;
 290              	 .loc 1 193 0
 291 005c 4369     	 ldr r3,[r0,#20]
 292 005e 094A     	 ldr r2,.L22
 194:../Libraries/XMCLib/src/xmc_rtc.c **** 
 293              	 .loc 1 194 0
 294 0060 0839     	 sub r1,r1,#8
 193:../Libraries/XMCLib/src/xmc_rtc.c ****   time.daysofweek = stdtime->tm_wday;
 295              	 .loc 1 193 0
 296 0062 9B18     	 add r3,r3,r2
 297 0064 6A46     	 mov r2,sp
 298 0066 D380     	 strh r3,[r2,#6]
 194:../Libraries/XMCLib/src/xmc_rtc.c **** 
 299              	 .loc 1 194 0
 300 0068 8369     	 ldr r3,[r0,#24]
 196:../Libraries/XMCLib/src/xmc_rtc.c **** }
 301              	 .loc 1 196 0
 302 006a 6846     	 mov r0,sp
 303              	.LVL5:
 194:../Libraries/XMCLib/src/xmc_rtc.c **** 
 304              	 .loc 1 194 0
 305 006c 0B40     	 and r3,r1
 306 006e 1A1C     	 mov r2,r3
 307 0070 6B46     	 mov r3,sp
 308 0072 1B79     	 ldrb r3,[r3,#4]
 309 0074 8B43     	 bic r3,r1
 310 0076 1343     	 orr r3,r2
 311 0078 6A46     	 mov r2,sp
 312 007a 1371     	 strb r3,[r2,#4]
 196:../Libraries/XMCLib/src/xmc_rtc.c **** }
 313              	 .loc 1 196 0
 314 007c FFF7FEFF 	 bl XMC_RTC_SetTime
 315              	.LVL6:
 316              	 .loc 1 197 0
 317 0080 07BD     	 pop {r0,r1,r2,pc}
 318              	.L23:
 319 0082 C046     	 .align 2
 320              	.L22:
 321 0084 6C070000 	 .word 1900
 322              	 .cfi_endproc
 323              	.LFE74:
 325              	 .section .text.XMC_RTC_GetTimeStdFormat,"ax",%progbits
 326              	 .align 1
 327              	 .global XMC_RTC_GetTimeStdFormat
 328              	 .code 16
 329              	 .thumb_func
 331              	XMC_RTC_GetTimeStdFormat:
 332              	.LFB75:
 198:../Libraries/XMCLib/src/xmc_rtc.c **** 
 199:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 200:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module time values in standard format
 201:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 202:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetTimeStdFormat(struct tm *const stdtime)
 203:../Libraries/XMCLib/src/xmc_rtc.c **** {
 333              	 .loc 1 203 0
 334              	 .cfi_startproc
 335              	.LVL7:
 204:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_TIME_t time;
 205:../Libraries/XMCLib/src/xmc_rtc.c ****   time.raw0 = RTC->TIM0;
 336              	 .loc 1 205 0
 337 0000 124B     	 ldr r3,.L25
 203:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_TIME_t time;
 338              	 .loc 1 203 0
 339 0002 82B0     	 sub sp,sp,#8
 340              	.LCFI1:
 341              	 .cfi_def_cfa_offset 8
 342              	 .loc 1 205 0
 343 0004 1A6A     	 ldr r2,[r3,#32]
 206:../Libraries/XMCLib/src/xmc_rtc.c ****   time.raw1 = RTC->TIM1;
 207:../Libraries/XMCLib/src/xmc_rtc.c ****   
 208:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_sec = (int8_t)time.seconds;
 209:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_min = (int8_t)time.minutes;
 210:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_hour = (int8_t)time.hours;
 211:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mday = ((int8_t)time.days + (int8_t)1);
 212:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mon = (int8_t)time.month;
 213:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_year = (int32_t)time.year - (int32_t)XMC_RTC_YEAR_OFFSET;
 344              	 .loc 1 213 0
 345 0006 1249     	 ldr r1,.L25+4
 205:../Libraries/XMCLib/src/xmc_rtc.c ****   time.raw1 = RTC->TIM1;
 346              	 .loc 1 205 0
 347 0008 0092     	 str r2,[sp]
 208:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_min = (int8_t)time.minutes;
 348              	 .loc 1 208 0
 349 000a 6A46     	 mov r2,sp
 350 000c 1278     	 ldrb r2,[r2]
 206:../Libraries/XMCLib/src/xmc_rtc.c ****   time.raw1 = RTC->TIM1;
 351              	 .loc 1 206 0
 352 000e 5B6A     	 ldr r3,[r3,#36]
 208:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_min = (int8_t)time.minutes;
 353              	 .loc 1 208 0
 354 0010 9206     	 lsl r2,r2,#26
 355 0012 920E     	 lsr r2,r2,#26
 356 0014 0260     	 str r2,[r0]
 209:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_hour = (int8_t)time.hours;
 357              	 .loc 1 209 0
 358 0016 6A46     	 mov r2,sp
 359 0018 5278     	 ldrb r2,[r2,#1]
 360 001a 9206     	 lsl r2,r2,#26
 361 001c 920E     	 lsr r2,r2,#26
 362 001e 4260     	 str r2,[r0,#4]
 210:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mday = ((int8_t)time.days + (int8_t)1);
 363              	 .loc 1 210 0
 364 0020 6A46     	 mov r2,sp
 365 0022 9278     	 ldrb r2,[r2,#2]
 366 0024 D206     	 lsl r2,r2,#27
 367 0026 D20E     	 lsr r2,r2,#27
 368 0028 8260     	 str r2,[r0,#8]
 211:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mon = (int8_t)time.month;
 369              	 .loc 1 211 0
 370 002a 6A46     	 mov r2,sp
 371 002c D278     	 ldrb r2,[r2,#3]
 372 002e D206     	 lsl r2,r2,#27
 373 0030 D20E     	 lsr r2,r2,#27
 374 0032 0132     	 add r2,r2,#1
 375 0034 C260     	 str r2,[r0,#12]
 212:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_year = (int32_t)time.year - (int32_t)XMC_RTC_YEAR_OFFSET;
 376              	 .loc 1 212 0
 377 0036 1A05     	 lsl r2,r3,#20
 378 0038 120F     	 lsr r2,r2,#28
 379 003a 0261     	 str r2,[r0,#16]
 380              	 .loc 1 213 0
 381 003c 1A0C     	 lsr r2,r3,#16
 214:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_wday = (int8_t)time.daysofweek;
 382              	 .loc 1 214 0
 383 003e 5B07     	 lsl r3,r3,#29
 213:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_wday = (int8_t)time.daysofweek;
 384              	 .loc 1 213 0
 385 0040 5218     	 add r2,r2,r1
 386              	 .loc 1 214 0
 387 0042 5B0F     	 lsr r3,r3,#29
 213:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_wday = (int8_t)time.daysofweek;
 388              	 .loc 1 213 0
 389 0044 4261     	 str r2,[r0,#20]
 390              	 .loc 1 214 0
 391 0046 8361     	 str r3,[r0,#24]
 215:../Libraries/XMCLib/src/xmc_rtc.c **** }
 392              	 .loc 1 215 0
 393 0048 02B0     	 add sp,sp,#8
 394              	 
 395 004a 7047     	 bx lr
 396              	.L26:
 397              	 .align 2
 398              	.L25:
 399 004c 000A0140 	 .word 1073809920
 400 0050 94F8FFFF 	 .word -1900
 401              	 .cfi_endproc
 402              	.LFE75:
 404              	 .section .text.XMC_RTC_SetAlarm,"ax",%progbits
 405              	 .align 1
 406              	 .global XMC_RTC_SetAlarm
 407              	 .code 16
 408              	 .thumb_func
 410              	XMC_RTC_SetAlarm:
 411              	.LFB76:
 216:../Libraries/XMCLib/src/xmc_rtc.c **** 
 217:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 218:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module alarm time value
 219:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 220:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetAlarm(const XMC_RTC_ALARM_t *const alarm)
 221:../Libraries/XMCLib/src/xmc_rtc.c **** {
 412              	 .loc 1 221 0
 413              	 .cfi_startproc
 414              	.LVL8:
 415              	.L28:
 416              	.LBB20:
 417              	.LBB21:
 418              	 .loc 2 545 0 discriminator 1
 419 0000 054B     	 ldr r3,.L29
 420 0002 9A6C     	 ldr r2,[r3,#72]
 421              	.LBE21:
 422              	.LBE20:
 222:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong seconds value", ((uint32_t)alarm->seconds < XMC_RTC_MAXSECONDS
 223:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong minutes value", ((uint32_t)alarm->minutes < XMC_RTC_MAXMINUTES
 224:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong hours value", ((uint32_t)alarm->hours < XMC_RTC_MAXHOURS));
 225:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong month value", ((uint32_t)alarm->month < XMC_RTC_MAXMONTH));
 226:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong year value", ((uint32_t)alarm->year < XMC_RTC_MAXYEAR));
 227:../Libraries/XMCLib/src/xmc_rtc.c **** 
 228:../Libraries/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 1U)
 229:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk) != 0U)
 230:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 231:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 232:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 233:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM0 = alarm->raw0;
 234:../Libraries/XMCLib/src/xmc_rtc.c ****       
 235:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM1_Msk) != 0U)
 236:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 237:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 238:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 239:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM1 = alarm->raw1; 
 240:../Libraries/XMCLib/src/xmc_rtc.c ****   #endif
 241:../Libraries/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 0U)
 242:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & (SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk | SCU_GENERAL_MIRRSTS_
 423              	 .loc 1 242 0 discriminator 1
 424 0004 0623     	 mov r3,#6
 425 0006 1A42     	 tst r2,r3
 426 0008 FAD1     	 bne .L28
 243:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 244:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 245:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 246:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM0 = alarm->raw0;
 427              	 .loc 1 246 0
 428 000a 0268     	 ldr r2,[r0]
 429 000c 034B     	 ldr r3,.L29+4
 247:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM1 = alarm->raw1; 
 248:../Libraries/XMCLib/src/xmc_rtc.c ****   #endif  
 249:../Libraries/XMCLib/src/xmc_rtc.c **** }
 430              	 .loc 1 249 0
 431              	 
 246:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM1 = alarm->raw1; 
 432              	 .loc 1 246 0
 433 000e 9A61     	 str r2,[r3,#24]
 247:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM1 = alarm->raw1; 
 434              	 .loc 1 247 0
 435 0010 4268     	 ldr r2,[r0,#4]
 436 0012 DA61     	 str r2,[r3,#28]
 437              	 .loc 1 249 0
 438 0014 7047     	 bx lr
 439              	.L30:
 440 0016 C046     	 .align 2
 441              	.L29:
 442 0018 00000140 	 .word 1073807360
 443 001c 000A0140 	 .word 1073809920
 444              	 .cfi_endproc
 445              	.LFE76:
 447              	 .section .text.XMC_RTC_GetAlarm,"ax",%progbits
 448              	 .align 1
 449              	 .global XMC_RTC_GetAlarm
 450              	 .code 16
 451              	 .thumb_func
 453              	XMC_RTC_GetAlarm:
 454              	.LFB77:
 250:../Libraries/XMCLib/src/xmc_rtc.c **** 
 251:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 252:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module alarm time value
 253:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 254:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetAlarm(XMC_RTC_ALARM_t *const alarm)
 255:../Libraries/XMCLib/src/xmc_rtc.c **** {
 455              	 .loc 1 255 0
 456              	 .cfi_startproc
 457              	.LVL9:
 256:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm->raw0 = RTC->ATIM0;
 458              	 .loc 1 256 0
 459 0000 024B     	 ldr r3,.L32
 257:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm->raw1 = RTC->ATIM1;
 258:../Libraries/XMCLib/src/xmc_rtc.c **** }
 460              	 .loc 1 258 0
 461              	 
 256:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm->raw0 = RTC->ATIM0;
 462              	 .loc 1 256 0
 463 0002 9A69     	 ldr r2,[r3,#24]
 464 0004 0260     	 str r2,[r0]
 257:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm->raw1 = RTC->ATIM1;
 465              	 .loc 1 257 0
 466 0006 DB69     	 ldr r3,[r3,#28]
 467 0008 4360     	 str r3,[r0,#4]
 468              	 .loc 1 258 0
 469 000a 7047     	 bx lr
 470              	.L33:
 471              	 .align 2
 472              	.L32:
 473 000c 000A0140 	 .word 1073809920
 474              	 .cfi_endproc
 475              	.LFE77:
 477              	 .section .text.XMC_RTC_SetAlarmStdFormat,"ax",%progbits
 478              	 .align 1
 479              	 .global XMC_RTC_SetAlarmStdFormat
 480              	 .code 16
 481              	 .thumb_func
 483              	XMC_RTC_SetAlarmStdFormat:
 484              	.LFB78:
 259:../Libraries/XMCLib/src/xmc_rtc.c **** 
 260:../Libraries/XMCLib/src/xmc_rtc.c **** 
 261:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 262:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module alarm time value in standard format
 263:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 264:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetAlarmStdFormat(const struct tm *const stdtime)
 265:../Libraries/XMCLib/src/xmc_rtc.c **** {
 485              	 .loc 1 265 0
 486              	 .cfi_startproc
 487              	.LVL10:
 488 0000 07B5     	 push {r0,r1,r2,lr}
 489              	.LCFI2:
 490              	 .cfi_def_cfa_offset 16
 491              	 .cfi_offset 0,-16
 492              	 .cfi_offset 1,-12
 493              	 .cfi_offset 2,-8
 494              	 .cfi_offset 14,-4
 266:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_ALARM_t alarm;
 267:../Libraries/XMCLib/src/xmc_rtc.c ****   
 268:../Libraries/XMCLib/src/xmc_rtc.c **** 
 269:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.seconds = stdtime->tm_sec;
 495              	 .loc 1 269 0
 496 0002 6B46     	 mov r3,sp
 497 0004 3F21     	 mov r1,#63
 498 0006 0268     	 ldr r2,[r0]
 499 0008 1B78     	 ldrb r3,[r3]
 500 000a 0A40     	 and r2,r1
 501 000c 8B43     	 bic r3,r1
 502 000e 1343     	 orr r3,r2
 503 0010 6A46     	 mov r2,sp
 504 0012 1370     	 strb r3,[r2]
 270:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.minutes = stdtime->tm_min;
 505              	 .loc 1 270 0
 506 0014 6B46     	 mov r3,sp
 507 0016 4268     	 ldr r2,[r0,#4]
 508 0018 5B78     	 ldrb r3,[r3,#1]
 509 001a 0A40     	 and r2,r1
 510 001c 8B43     	 bic r3,r1
 511 001e 1343     	 orr r3,r2
 512 0020 6A46     	 mov r2,sp
 513 0022 5370     	 strb r3,[r2,#1]
 271:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.hours = stdtime->tm_hour;
 514              	 .loc 1 271 0
 515 0024 6B46     	 mov r3,sp
 516 0026 8268     	 ldr r2,[r0,#8]
 517 0028 9B78     	 ldrb r3,[r3,#2]
 518 002a 2039     	 sub r1,r1,#32
 519 002c 0A40     	 and r2,r1
 520 002e 8B43     	 bic r3,r1
 521 0030 1343     	 orr r3,r2
 522 0032 6A46     	 mov r2,sp
 523 0034 9370     	 strb r3,[r2,#2]
 272:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.days = stdtime->tm_mday - 1;
 524              	 .loc 1 272 0
 525 0036 C368     	 ldr r3,[r0,#12]
 273:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.month = stdtime->tm_mon;
 274:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.year = stdtime->tm_year + XMC_RTC_YEAR_OFFSET;
 275:../Libraries/XMCLib/src/xmc_rtc.c **** 
 276:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_SetAlarm(&alarm);
 277:../Libraries/XMCLib/src/xmc_rtc.c **** }
 526              	 .loc 1 277 0
 527              	 
 272:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.days = stdtime->tm_mday - 1;
 528              	 .loc 1 272 0
 529 0038 013B     	 sub r3,r3,#1
 530 003a 0B40     	 and r3,r1
 531 003c 1A1C     	 mov r2,r3
 532 003e 6B46     	 mov r3,sp
 533 0040 DB78     	 ldrb r3,[r3,#3]
 534 0042 8B43     	 bic r3,r1
 535 0044 1343     	 orr r3,r2
 536 0046 6A46     	 mov r2,sp
 537 0048 D370     	 strb r3,[r2,#3]
 273:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.month = stdtime->tm_mon;
 538              	 .loc 1 273 0
 539 004a 6B46     	 mov r3,sp
 540 004c 0269     	 ldr r2,[r0,#16]
 541 004e 5B79     	 ldrb r3,[r3,#5]
 542 0050 1039     	 sub r1,r1,#16
 543 0052 0A40     	 and r2,r1
 544 0054 8B43     	 bic r3,r1
 545 0056 1343     	 orr r3,r2
 546 0058 6A46     	 mov r2,sp
 547 005a 5371     	 strb r3,[r2,#5]
 274:../Libraries/XMCLib/src/xmc_rtc.c **** 
 548              	 .loc 1 274 0
 549 005c 4369     	 ldr r3,[r0,#20]
 550 005e 044A     	 ldr r2,.L35
 276:../Libraries/XMCLib/src/xmc_rtc.c **** }
 551              	 .loc 1 276 0
 552 0060 6846     	 mov r0,sp
 553              	.LVL11:
 274:../Libraries/XMCLib/src/xmc_rtc.c **** 
 554              	 .loc 1 274 0
 555 0062 9B18     	 add r3,r3,r2
 556 0064 6A46     	 mov r2,sp
 557 0066 D380     	 strh r3,[r2,#6]
 276:../Libraries/XMCLib/src/xmc_rtc.c **** }
 558              	 .loc 1 276 0
 559 0068 FFF7FEFF 	 bl XMC_RTC_SetAlarm
 560              	.LVL12:
 561              	 .loc 1 277 0
 562 006c 07BD     	 pop {r0,r1,r2,pc}
 563              	.L36:
 564 006e C046     	 .align 2
 565              	.L35:
 566 0070 6C070000 	 .word 1900
 567              	 .cfi_endproc
 568              	.LFE78:
 570              	 .section .text.XMC_RTC_GetAlarmStdFormat,"ax",%progbits
 571              	 .align 1
 572              	 .global XMC_RTC_GetAlarmStdFormat
 573              	 .code 16
 574              	 .thumb_func
 576              	XMC_RTC_GetAlarmStdFormat:
 577              	.LFB79:
 278:../Libraries/XMCLib/src/xmc_rtc.c **** 
 279:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 280:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module alarm time value in standard format
 281:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 282:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetAlarmStdFormat(struct tm *const stdtime)
 283:../Libraries/XMCLib/src/xmc_rtc.c **** {
 578              	 .loc 1 283 0
 579              	 .cfi_startproc
 580              	.LVL13:
 284:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_ALARM_t alarm;
 285:../Libraries/XMCLib/src/xmc_rtc.c ****   
 286:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.raw0 = RTC->ATIM0;
 581              	 .loc 1 286 0
 582 0000 114B     	 ldr r3,.L38
 283:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_ALARM_t alarm;
 583              	 .loc 1 283 0
 584 0002 82B0     	 sub sp,sp,#8
 585              	.LCFI3:
 586              	 .cfi_def_cfa_offset 8
 587              	 .loc 1 286 0
 588 0004 9A69     	 ldr r2,[r3,#24]
 589 0006 0092     	 str r2,[sp]
 287:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.raw1 = RTC->ATIM1;
 590              	 .loc 1 287 0
 591 0008 DA69     	 ldr r2,[r3,#28]
 288:../Libraries/XMCLib/src/xmc_rtc.c **** 
 289:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_sec = (int8_t)alarm.seconds;
 592              	 .loc 1 289 0
 593 000a 6B46     	 mov r3,sp
 594 000c 1B78     	 ldrb r3,[r3]
 595 000e 9B06     	 lsl r3,r3,#26
 596 0010 9B0E     	 lsr r3,r3,#26
 597 0012 0360     	 str r3,[r0]
 290:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_min = (int8_t)alarm.minutes;
 598              	 .loc 1 290 0
 599 0014 6B46     	 mov r3,sp
 600 0016 5B78     	 ldrb r3,[r3,#1]
 601 0018 9B06     	 lsl r3,r3,#26
 602 001a 9B0E     	 lsr r3,r3,#26
 603 001c 4360     	 str r3,[r0,#4]
 291:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_hour = (int8_t)alarm.hours;
 604              	 .loc 1 291 0
 605 001e 6B46     	 mov r3,sp
 606 0020 9B78     	 ldrb r3,[r3,#2]
 607 0022 DB06     	 lsl r3,r3,#27
 608 0024 DB0E     	 lsr r3,r3,#27
 609 0026 8360     	 str r3,[r0,#8]
 292:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mday = ((int8_t)alarm.days + (int8_t)1);
 610              	 .loc 1 292 0
 611 0028 6B46     	 mov r3,sp
 612 002a DB78     	 ldrb r3,[r3,#3]
 613 002c DB06     	 lsl r3,r3,#27
 614 002e DB0E     	 lsr r3,r3,#27
 615 0030 0133     	 add r3,r3,#1
 616 0032 C360     	 str r3,[r0,#12]
 293:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mon = (int8_t)alarm.month;
 617              	 .loc 1 293 0
 618 0034 1305     	 lsl r3,r2,#20
 619 0036 1B0F     	 lsr r3,r3,#28
 620 0038 0361     	 str r3,[r0,#16]
 294:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_year = (int32_t)alarm.year - (int32_t)XMC_RTC_YEAR_OFFSET;
 621              	 .loc 1 294 0
 622 003a 044B     	 ldr r3,.L38+4
 623 003c 120C     	 lsr r2,r2,#16
 624 003e D218     	 add r2,r2,r3
 625 0040 4261     	 str r2,[r0,#20]
 295:../Libraries/XMCLib/src/xmc_rtc.c **** }
 626              	 .loc 1 295 0
 627 0042 02B0     	 add sp,sp,#8
 628              	 
 629 0044 7047     	 bx lr
 630              	.L39:
 631 0046 C046     	 .align 2
 632              	.L38:
 633 0048 000A0140 	 .word 1073809920
 634 004c 94F8FFFF 	 .word -1900
 635              	 .cfi_endproc
 636              	.LFE79:
 638              	 .section .text.XMC_RTC_GetEventStatus,"ax",%progbits
 639              	 .align 1
 640              	 .global XMC_RTC_GetEventStatus
 641              	 .code 16
 642              	 .thumb_func
 644              	XMC_RTC_GetEventStatus:
 645              	.LFB80:
 296:../Libraries/XMCLib/src/xmc_rtc.c **** 
 297:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 298:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC periodic and alarm event(s) status
 299:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 300:../Libraries/XMCLib/src/xmc_rtc.c **** uint32_t XMC_RTC_GetEventStatus(void)
 301:../Libraries/XMCLib/src/xmc_rtc.c **** {
 646              	 .loc 1 301 0
 647              	 .cfi_startproc
 302:../Libraries/XMCLib/src/xmc_rtc.c ****   return RTC->STSSR;
 648              	 .loc 1 302 0
 649 0000 014B     	 ldr r3,.L41
 303:../Libraries/XMCLib/src/xmc_rtc.c **** }
 650              	 .loc 1 303 0
 651              	 
 302:../Libraries/XMCLib/src/xmc_rtc.c ****   return RTC->STSSR;
 652              	 .loc 1 302 0
 653 0002 D868     	 ldr r0,[r3,#12]
 654              	 .loc 1 303 0
 655 0004 7047     	 bx lr
 656              	.L42:
 657 0006 C046     	 .align 2
 658              	.L41:
 659 0008 000A0140 	 .word 1073809920
 660              	 .cfi_endproc
 661              	.LFE80:
 663              	 .text
 664              	.Letext0:
 665              	 .file 3 "c:\\dave_4-4-2_64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 666              	 .file 4 "c:\\dave_4-4-2_64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 667              	 .file 5 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 668              	 .file 6 "c:\\dave_4-4-2_64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\time.h"
 669              	 .file 7 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/XMCLib/inc/xmc_rtc.h"
 670              	 .file 8 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Include/cmsis_gcc.h"
 671              	 .file 9 "C:/Workspace/DAVE-4.4.2-64Bit/xmc1400-getstarted-optiga-trust-m/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_rtc.c
    {standard input}:18     .text.XMC_RTC_Start:00000000 $t
    {standard input}:23     .text.XMC_RTC_Start:00000000 XMC_RTC_Start
    {standard input}:55     .text.XMC_RTC_Start:00000014 $d
    {standard input}:61     .text.XMC_RTC_Stop:00000000 $t
    {standard input}:66     .text.XMC_RTC_Stop:00000000 XMC_RTC_Stop
    {standard input}:96     .text.XMC_RTC_Stop:00000014 $d
    {standard input}:102    .text.XMC_RTC_SetPrescaler:00000000 $t
    {standard input}:107    .text.XMC_RTC_SetPrescaler:00000000 XMC_RTC_SetPrescaler
    {standard input}:141    .text.XMC_RTC_SetPrescaler:00000018 $d
    {standard input}:147    .text.XMC_RTC_SetTime:00000000 $t
    {standard input}:152    .text.XMC_RTC_SetTime:00000000 XMC_RTC_SetTime
    {standard input}:184    .text.XMC_RTC_SetTime:00000018 $d
    {standard input}:190    .text.XMC_RTC_GetTime:00000000 $t
    {standard input}:195    .text.XMC_RTC_GetTime:00000000 XMC_RTC_GetTime
    {standard input}:215    .text.XMC_RTC_GetTime:0000000c $d
    {standard input}:220    .text.XMC_RTC_SetTimeStdFormat:00000000 $t
    {standard input}:225    .text.XMC_RTC_SetTimeStdFormat:00000000 XMC_RTC_SetTimeStdFormat
    {standard input}:321    .text.XMC_RTC_SetTimeStdFormat:00000084 $d
    {standard input}:326    .text.XMC_RTC_GetTimeStdFormat:00000000 $t
    {standard input}:331    .text.XMC_RTC_GetTimeStdFormat:00000000 XMC_RTC_GetTimeStdFormat
    {standard input}:399    .text.XMC_RTC_GetTimeStdFormat:0000004c $d
    {standard input}:405    .text.XMC_RTC_SetAlarm:00000000 $t
    {standard input}:410    .text.XMC_RTC_SetAlarm:00000000 XMC_RTC_SetAlarm
    {standard input}:442    .text.XMC_RTC_SetAlarm:00000018 $d
    {standard input}:448    .text.XMC_RTC_GetAlarm:00000000 $t
    {standard input}:453    .text.XMC_RTC_GetAlarm:00000000 XMC_RTC_GetAlarm
    {standard input}:473    .text.XMC_RTC_GetAlarm:0000000c $d
    {standard input}:478    .text.XMC_RTC_SetAlarmStdFormat:00000000 $t
    {standard input}:483    .text.XMC_RTC_SetAlarmStdFormat:00000000 XMC_RTC_SetAlarmStdFormat
    {standard input}:566    .text.XMC_RTC_SetAlarmStdFormat:00000070 $d
    {standard input}:571    .text.XMC_RTC_GetAlarmStdFormat:00000000 $t
    {standard input}:576    .text.XMC_RTC_GetAlarmStdFormat:00000000 XMC_RTC_GetAlarmStdFormat
    {standard input}:633    .text.XMC_RTC_GetAlarmStdFormat:00000048 $d
    {standard input}:639    .text.XMC_RTC_GetEventStatus:00000000 $t
    {standard input}:644    .text.XMC_RTC_GetEventStatus:00000000 XMC_RTC_GetEventStatus
    {standard input}:659    .text.XMC_RTC_GetEventStatus:00000008 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
